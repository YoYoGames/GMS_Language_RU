<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Руководство по использованию частиц</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that explains how to set up and use particles" />
  <meta name="rh-index-keywords" content="Guide To Using Particles" />
  <meta name="search-keywords" content="particles,particle guide,particle setup" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Руководство по использованию частиц</h1>
  <p>Это руководство предназначено для тех, кто хочет понять, как использовать и создавать <strong>частицы</strong>. На этой странице будут рассмотрены как <a href="../GameMaker_Language/GML_Reference/Drawing/Particles/Particles.htm">функции<span class="notranslate">языка GameMaker</span></a>, так и
   <a href="../Drag_And_Drop/Drag_And_Drop_Reference/Particles/Particle_Actions.htm">действия<span class="notranslate">Drag and Drop™</span></a> для частиц, так что если вы никогда раньше не использовали частицы, мы надеемся, что это руководство поможет вам начать, так как они очень полезны и довольно забавны.
    очень полезны и очень увлекательны.</p>
  <p>Прежде чем продолжить, мы, вероятно, должны объяснить, что такое частица... По сути, частица - это графический ресурс, обладающий определенными свойствами, которые определяются <strong>системой частиц</strong>. Этими свойствами нельзя манипулировать
    непосредственно для <em>отдельных </em>частиц, но они изменяются коллективно через код или действия, которые используются для определения системы, к которой они принадлежат. Они очень полезны для создания красивых и ярких эффектов - или тонких и незаметных.
    - в игре без нагрузки на процессор, которую несет использование экземпляров.</p>
  <p>Мы уже упоминали о системах частиц, поэтому давайте объясним, что это такое, прежде чем продолжить. Думайте о системе частиц как о контейнере, который вы будете использовать для хранения частиц, готовых к использованию. Вы можете использовать код или действия для определения визуального аспекта
    частиц, а затем они помещаются в &quot;контейнер&quot; (систему частиц), чтобы вы могли достать его и использовать в любое время и в любом месте, где он вам понадобится.</p>
  <p>Прежде чем настраивать систему и создавать частицы, важно знать несколько вещей... Во-первых, большая часть кода системы частиц вызывается <strong>только один раз в игре</strong>, обычно в каком-нибудь объекте контроллера в первой
    Это не всегда так, но для простоты мы будем использовать этот сценарий для следующего краткого руководства, поскольку это самый распространенный способ использования частиц. Вы делаете это потому, что система частиц, будучи созданной, остается
    в памяти и готова к использованию в любое время, поэтому если вы создаете ее более одного раза, это может быстро увеличить использование памяти и вызвать серьезные задержки, и даже может привести к краху игры. Для простоты в этом руководстве вы создадите
   <strong>глобальную </strong>систему частиц, которая может использоваться любым экземпляром в игре в любое время.</p>
  <p> </p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Создание системы частиц</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">Для начала вам нужно определить систему частиц и дать ей имя, чтобы вы могли ее использовать. Поскольку это будет глобальная система, которую может использовать любой объект, вы должны сделать это в объекте контроллера или в функции инициализации, запускаемой в начале игры.
      игры. <span class="notranslate">GML</span> будет выглядеть следующим образом:<br>
    </p>
    <p class="code">global.P_System = part_system_create_layer(&quot;Instance_Layer&quot;, false);</p>
    <p class="dropspot">И использовать <span class="notranslate">DnD™</span>:</p>
    <p class="dropspot"><img alt="Create Particle System" class="center" src="../assets/Images/Scripting_Reference/Additional_Information/Particles_DnD_CreateSystem.png">Обратите внимание, что указанное имя слоя должно быть действительным слоем в помещении, где будет использоваться система,
      иначе частицы не будут видны. Также обратите внимание, что мы установили флаг &quot;persistent&quot; (как в коде, так и в DnD™) на false. Постоянная система частиц - это система, которая будет &quot;сохраняться&quot; в разных комнатах без необходимости уничтожать и создавать ее заново в каждой комнате.
      для каждой комнаты. Однако, чтобы упростить задачу в этом руководстве, мы не будем использовать постоянство.</p>
    <p class="dropspot">Итак, система создана, но как насчет частиц? Мы должны определить и их, иначе система бесполезна и ничего не делает.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">Определение типа частицы</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">Чтобы использовать частицу в системе, необходимо сначала определить ее общие свойства. Они похожи на свойства объекта, но применяются только в <em>общем </em>случае к отдельным частицам. Это означает, что если вы зададите частицам минимальную скорость движения
      скорость 1 и максимальную скорость движения 2, любая частица, созданная системой, будет иметь случайную скорость между 1 и 2 пикселями за шаг, и в целом они будут иметь среднюю скорость 1,5. Вы должны назвать и добавить свою первую частицу в
      используя следующий <span class="notranslate">GML</span> в том же объекте, который вы использовали для создания системы:<br>
    </p>
    <p class="code">global.Particle1 = part_type_create();</p>
    <p class="dropspot">И для тех из вас, кто использует <span class="notranslate">DnD™</span>:</p>
    <p class="dropspot"><img alt="Create Particle Type" class="center" src="../assets/Images/Scripting_Reference/Additional_Information/Particles_DnD_Create_Type.png">Обратите внимание, что в <span class="notranslate">DnD™</span>мы также отмечаем опцию <strong>смешивания </strong>. Это включает <strong>аддитивное смешивание</strong> для частиц, о котором мы поговорим чуть ниже.</p>
    <p class="dropspot">Теперь у вас есть система и частица, которую нужно в нее поместить, но вы еще не готовы к созданию выдающихся эффектов! Вам еще предстоит определить свойства частицы, т.е. как она выглядит - ее скорость, ее вращение, ее альфа и т.д.... Есть много
      деталей, которые можно использовать для определения эффекта частицы, поэтому ниже приведен обзор наиболее важных параметров, а затем фрагмент кода и <span class="notranslate">DnD™</span>, который использует их все:</p>
    <ul class="dropspotlist">
      <li class="dropspot"><strong>форма</strong>: Форма частицы - это встроенный спрайт, который она будет использовать, по умолчанию это константа <span class="inline">pt_shape_pixel</span>. Существует также функция для добавления пользовательской частицы, если требуется... <a href="../GameMaker_Language/GML_Reference/Drawing/Particles/Particle_Types/part_type_sprite.htm"><span class="inline">part_type_sprite()</span></a> -
        или действие <a href="../Drag_And_Drop/Drag_And_Drop_Reference/Particles/Set_Particle_Sprite.htm">Set Particle Sprite</a>.</li>
      <li class="dropspot"><strong>размер</strong>: Устанавливает параметры размера для типа частиц. Вы указываете минимальный начальный размер, максимальный начальный размер и увеличение размера на каждом шаге (для уменьшения размера используйте отрицательное число). Это скалярное значение, которое
        одинаково изменяет масштаб x/y базового изображения.</li>
      <li class="dropspot"><strong>color</strong>: Задает цвет для частицы, если используется один цвет. Если используются два или три цвета, это будет цветовая смесь, смешивающаяся от одного к другому в течение всего времени существования частицы.</li>
      <li class="dropspot"><strong>alpha</strong>: Устанавливает значение альфа для частицы между значениями 0 и 1. Если передано одно значение, то это будет альфа частицы, если передано два или три значения, то альфа будет смешиваться между ними в течение времени жизни частицы.
        время жизни частицы.</li>
      <li class="dropspot"><strong>speed</strong>: задает свойства скорости для типа частицы. Вы указываете минимальную и максимальную скорость, а при создании частицы выбирается случайное значение между заданными границами. Вы можете указать увеличение скорости на каждом шаге,
        и даже использовать отрицательные числа для замедления частицы (скорость никогда не станет меньше 0).</li>
      <li class="dropspot"><strong>направление</strong>: Устанавливает свойства направления для типа частицы. Вы снова задаете диапазон направлений (в градусах против часовой стрелки - 0 означает движение вправо, 90 - движение вверх и т.д.). Например, чтобы
        частица двигалась в случайном направлении, вы бы выбрали минимальное значение 0 и максимальное 360. Вы также можете указать увеличение направления для каждого шага (может быть и отрицательным).</li>
      <li class="dropspot"><strong>ориентация</strong>: Устанавливает свойства угла ориентации для типа частиц. Вы указываете минимальный угол, максимальный угол и увеличение на каждом шаге. Вы также можете указать, должен ли заданный угол быть относительным к текущему
        например: если установить все значения равными 0, а относительное значение - true, ориентация частицы будет точно следовать траектории движения частицы.</li>
      <li class="dropspot"><strong>смешивание</strong>: Устанавливает, использовать ли <strong>аддитивное </strong>смешивание или <strong>обычное </strong>смешивание для типа частиц. Этот параметр задается в функции при использовании <span class="notranslate">GML</span> и как часть инициализации частиц при использовании <span class="notranslate">DnD™</span>. Аддитивное
        означает, что частицы будут использовать режим наложения <span class="inline">bm_add</span>, придавая им &quot;светящийся&quot; вид в местах наложения, а также смешивая их со всем, что нарисовано под ними (спрайты, фоны, плитки и т.д.).
        - Очень полезно для огненных и магических эффектов (например), но лучше не использовать для таких эффектов, как дым. Поэкспериментируйте, чтобы увидеть разницу! Обратите внимание, что включение этого параметра нарушит пакетную обработку текстур при создании частиц, и поэтому потребуется больше пакетов за шаг.
        для их отрисовки - это следует учитывать, так как это может повлиять на производительность, особенно на мобильных устройствах.</li>
      <li class="dropspot"><strong>жизнь</strong>: Устанавливает границы времени жизни в шагах (игровых кадрах) для данного типа частиц. Как и в предыдущих настройках, здесь есть минимальное и максимальное значение, и частицы будут жить случайное количество шагов в пределах этих значений. Так, при времени жизни 30
        min и 30 max частица будет существовать ровно 30 шагов, а при времени жизни 20 min и 60 max частица будет существовать случайное количество шагов в диапазоне от 20 до 60.</li>
    </ul>
    <p class="dropspot">Теперь, прежде чем мы представим вам код для определения частицы, давайте<strong>немного</strong> поговорим о &quot; wiggle&quot;... Хотите верьте, хотите нет, но &quot;wiggle&quot; - это свойство частицы и может быть установлено для многих из вышеперечисленных параметров
      индивидуально. Когда вы видите &quot;wiggle&quot; в качестве аргумента для функции или действия частицы, это означает, что если вы поставите число от 1 до 20, частица будет &quot;вихлять&quot; или колебаться между минимальным и максимальным значениями свойства,
      при этом 1 - это медленное покачивание, а 20 - очень быстрое. Таким образом, частица со скоростью минимум 2 и максимум 5 с "вихлянием" 20 будет очень быстро колебаться между минимальной и максимальной скоростями в течение времени жизни каждой созданной частицы.</p>
    <p class="note"><strong>ПРИМЕЧАНИЕ</strong>: Существуют и другие незначительные свойства частиц, которые мы здесь не рассматриваем, чтобы максимально упростить процесс. Полная информация о свойствах частиц приведена на соответствующих страницах.</p>
    <p class="dropspot">Давайте теперь посмотрим на код, определяющий частицу:<br>
    </p>
    <p class="code">//Это определяет форму частиц<br> part_type_shape(global.Particle1,pt_shape_pixel);
      <br> //Это определяет размер<br> part_type_size(global.Particle1,1,1,0,2);
      <br> //Это задает ее цвет. Для этого есть три разных кода<br> part_type_color1(global.Particle1,c_white);
      <br> //Это ее альфа. Для этого есть три разных кода<br> part_type_alpha1(global.Particle1,1);
      <br> //Скорость частицы<br> part_type_speed(global.Particle1,0.50,2,-0.10,0);
      <br> //Направление<br> part_type_direction(global.Particle1,0,359,0,20);
      <br> //Изменяется вращение частицы<br> part_type_orientation(global.Particle1,0,0,0,0,true);
      <br> //Это режим наложения, либо аддитивный, либо нормальный<br> part_type_blend(global.Particle1,1);
      <br> //это время жизни в шагах<br> part_type_life(global.Particle1,5,30);
    </p>
    <p class="dropspot">Чтобы создать такое же определение частицы в <span class="notranslate">DnD™</span>, нам понадобятся следующие действия:</p>
    <p class="dropspot"><img alt="Define Particle Type" class="center" src="../assets/Images/Scripting_Reference/Additional_Information/Particles_DnD_Define_Particle.png">Вот и все! Теперь мы определили наши частицы, и они готовы к использованию.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">Создание частиц непосредственно в игре</a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">Существует несколько способов создания частиц, и каждый из них имеет свои плюсы и минусы. Вы можете использовать <strong>эмиттеры</strong> для создания <strong>всплеска </strong>или <strong>потока </strong>частиц, а можете создавать частицы <strong>непосредственно </strong>в точке.
      Выбор способа зависит от того, чего вы пытаетесь достичь и какой эффект хотите создать, но мы начнем с самого простого из них - создания частиц напрямую. В <span class="notranslate">GML</span> мы используем следующую функцию:<br>
    </p>
    <p class="code">part_particles_create(global.P_System, x, y, global.Particle1, 10);</p>
    <p class="dropspot">а в <span class="notranslate">DnD™</span>это было бы:</p>
    <p class="dropspot"><img alt="Create Particles At A Position" class="center" src="../assets/Images/Scripting_Reference/Additional_Information/Particles_DnD_Burst.png">Этот единственный код/действие выше создаст 10 частиц в заданных координатах x/y типа &quot;Particle1&quot;
      из нашей глобальной системы. Просто! Самое замечательное в этой строке кода/действия то, что она может быть использована в любом месте без каких-либо затруднений. Например, если вы поместите ее в <strong>глобальное</strong> событие <strong>нажатия левой кнопки</strong> мыши в объекте и измените
      x/y значения для позиции mouse_x/y, она будет создавать частицы в позиции мыши каждый раз, когда вы нажимаете кнопку. Или если у вас есть ракета, то вы можете поместить это в событие шага, и частицы дыма будут появляться каждый шаг (хотя 1 или
      2 будет лучше, чем 10!). Можно даже заставить его создавать частицы по области, например, случайным образом изменяя координаты x/y:<br>
    </p>
    <p class="code">repeat(50)<br> {<br> var xx = x + 20 - random(40);<br> var yy = y + 20 - random(40);<br> part_particles_create(global.P_System, xx, yy, global.Particle1, 1);<br> }</p>
    <p class="dropspot"><img alt="Create Particles Over A Random Area" class="center" src="../assets/Images/Scripting_Reference/Additional_Information/Particles_DnD_Create_Particles.png">Приведенный выше код создаст 50 частиц в случайном месте в пределах квадратной области размером 40px.
      области.
    </p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">Создание частиц с помощью излучателей</a></p>
  <div class="droptext" data-targetname="drop-down3">
    <p class="dropspot">Поскольку мы уже объяснили простой способ создания частиц, давайте перейдем к более сложному способу - использованию эмиттеров <strong>.</strong> Эмиттеры - это еще одна часть системы частиц, которая должна быть определена перед использованием, поэтому мы создадим
      создадим глобальный эмиттер так же, как мы это делали для системы и частиц. Нам также нужно решить, будет ли эмиттер статичным (недвижущимся) или нет, и будем ли мы <strong>выпускать </strong>частицы <strong>взрывом </strong>или <strong>потоком </strong>.
      а также решить, на какой площади и какое распределение будет использовать эмиттер.</p>
    <p class="dropspot">Что все это значит? Ну, <strong>статический </strong>эмиттер - это тот, который вы можете определить один раз и забыть о нем, поскольку он не будет никуда двигаться в течение всей игры, т.е. представьте себе костер из поленьев - он не движется, он просто испускает пламя и
      поэтому он статичен, но для огненного шара потребуется <strong>динамический</strong> эмиттер, и он будет перемещаться по экрану. Что касается всплеска или потока, то всплеск - это одноразовый взрыв частиц, в то время как поток - это постоянный поток частиц.
      на каждом шагу. Что касается области и распределения, то с помощью эмиттеров можно определить область для излучения частиц (это может быть прямоугольник, эллипс, ромб или линия), а также кривую распределения (гауссову, обратную гауссову или линейную).</p>
    <p class="dropspot">Следующие изображения иллюстрируют различные типы формы области, доступные для излучателей:</p>
    <p class="dropspot"> </p>
    <center><img alt="Rectangle Emitter" src="../assets/Images/Scripting_Reference/Additional_Information/Particles_Rectangular.gif" /> <img alt="Line Emitter" src="../assets/Images/Scripting_Reference/Additional_Information/Particles_Line.gif" /></center>
    <center><img alt="Ellipse Emitter" src="../assets/Images/Scripting_Reference/Additional_Information/Particles_Ellipse.gif" /> <img alt="Diamond Emitter" src="../assets/Images/Scripting_Reference/Additional_Information/Particles_Diamond.gif" /></center>
    <p class="dropspot"><br> Здесь показаны кривые распределения (линейная, гауссова и обратная гауссова):</p>
    <p><img alt="Particle distribution" class="center" src="../assets/Images/Scripting_Reference/Additional_Information/Particles_Distribution.png" /></p>
    <p class="dropspot">Ниже приведен пример кода/действий, необходимых для определения двух эмиттеров, которые обычно идут в <strong>событии Create</strong> объекта контроллера, сразу после определения системы частиц. Один из них будет статичным и будет распылять частицы по
      площадь всей комнаты, а другой будет динамическим и будет следовать за мышью и вырываться каждые 30 шагов из небольшого эллипса:</p>
    <p> </p>
    <p class="code">global.Particle1_Emitter1 = part_emitter_create(global.P_System);<br> global.Particle1_Emitter2 = part_emitter_create(global.P_System);<br>
      <br> //Установите область, которая будет излучать частицы<br> part_emitter_region(global.P_System, global.Particle1_Emitter1, 0, room_width, 0, room_height, ps_shape_rectangle, ps_distr_linear);<br> part_emitter_region(global.P_System, global.Particle1_Emitter2,
      mouse_x-10, mouse_x+10, mouse_y-10, mouse_y+10, ps_shape_ellipse, ps_distr_gaussian);<br>
      <br> //Установите первый поток на 10 частиц каждый шаг<br> part_emitter_stream(global.P_System, global.Particle1_Emitter1, global.Particle1, 10);<br>
      <br> //Теперь об этом можно забыть, так как он будет работать, пока ему не прикажут остановиться...<br> //Установите событие alarm[0] для разрыва частиц эмиттера2...<br> alarm[0] = 30;</p>
    <p class="dropspot"><img alt="Define Particle Emitters" class="center" src="../assets/Images/Scripting_Reference/Additional_Information/Particles_DnD_Create_Emitter.png">Итак, здесь мы создаем два излучателя частиц, которые назначаются системе частиц, созданной нами
      в самом начале. Функции/действия для создания этих излучателей позволяют нам определить область в комнате, над которой они будут испускать частицы, а также указать тип испускаемых частиц, форму и распределение в пределах определенной области. Функции/действия
      функции/действия возвращают числовое значение, которое является идентификатором излучателя, и мы сохраняем его в переменной, чтобы использовать дальнейшие функции излучателей для нацеливания на эти излучатели.</p>
    <p class="dropspot">Теперь у нас есть код/DnD™ для потока частиц (эти частицы будут испускаться каждый шаг игры без нашего участия), но мы также хотим добавить <strong>событие</strong><strong>Alarm[0]</strong>, чтобы частицы взрывались через определенные промежутки времени.
      интервалы времени:
    </p>
    <p class="code">part_emitter_region(global.P_System, global.Particle1_Emitter2, mouse_x - 10, mouse_x + 10, mouse_y - 10, mouse_y + 10, ps_shape_ellipse, ps_distr_gaussian);<br> part_emitter_burst(global.P_System, global.Particle1_Emitter2, global.Particle1, 30);<br> alarm[0] = 30;</p>
    <p class="dropspot"><img alt="Burst Particles From Emitter" class="center" src="../assets/Images/Scripting_Reference/Additional_Information/Particles_DnD_Set_Emitter.png">Всплеск частиц - это просто однократный взрыв частиц из излучателя, а не постоянный
      поток их на каждом игровом шаге.</p>
    <p class="dropspot">Но что если вы хотите, чтобы несколько объектов испускали частицы? Глобальный излучатель может одновременно находиться только в одном месте, поэтому вам нужно будет создать <em>локальные </em>излучатели в каждом объекте. Эти излучатели будут по-прежнему использовать глобальную систему частиц и любые частицы.
      но они могут быть разных форм и размеров и перемещаться вместе с объектом, что делает их идеальными для ракет, пуль и прочего. Код, который вы будете использовать, точно такой же, как и выше, но без префикса &quot;global&quot; перед
      перед именами эмиттеров.</p>
    <p class="dropspot">С созданием частиц разобрались, но есть еще одна вещь, которая очень важна... Очистка, когда вы закончите с ними.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">Уборка</a></p>
  <div class="droptext" data-targetname="drop-down4">
    <p class="dropspot">Как уже упоминалось в начале, после создания система частиц (и ее частицы, эмиттеры и т.д.) сохраняется в памяти для мгновенного использования. Отлично, но что произойдет, если вы перезапустите игру? Или если ваш игрок умрет и начнет комнату заново? Ну, если вы
      не справитесь с управлением игрой, вы получите утечку <strong>памяти.</strong> Это когда что-то было создано, использовало память, но было &quot;отнесено&quot;, то есть GameMaker <span class="notranslate">больше не</span> имеет к нему доступа. Такая вещь будет
      медленно съедает память и вызывает задержку в игре или даже блокирует компьютер, что приводит к краху игры, и это довольно распространенная проблема среди начинающих пользователей систем с частицами.</p>
    <p class="dropspot">Как этого избежать? В <span class="notranslate">GameMaker Studio 2</span> есть <span class="notranslate">GML</span> и <span class="notranslate">DnD™</span>для удаления систем частиц, их излучателей и частиц из памяти, когда они не используются, и при небольшом планировании при использовании следующего кода/действий вы можете легко предотвратить
      эту потенциальную проблему.</p>
    <p class="dropspot">Прежде всего, вам нужно решить, где вы собираетесь создать систему и как вы будете ее использовать. Вы можете создать глобальную систему в <strong>событии начала игры</strong> объекта, который находится в вашей первой комнате (например, меню или титульный экран),
      но это означает, что если вы перезапустите игру, используя <a href="../GameMaker_Language/GML_Reference/General_Game_Control/game_restart.htm"><span class="inline">game_restart()</span></a> функцию, она будет создана заново и вызовет утечку памяти. Или вы
      можно создать локальную систему в экземпляре в любой комнате, но опять же, если вы покинете комнату, система будет недоступна и вызовет утечку памяти. Чтобы избежать этого, вам нужно иметь что-то вроде этого в параметре <a href="../The_Asset_Editors/Object_Properties/Other_Events.htm"><strong>Мероприятие по окончанию игры</strong></a>      или <a href="../The_Asset_Editors/Object_Properties/Object_Events.htm"><strong>Событие очистки</strong></a> вашего объекта:</p>
    <p class="code">part_type_destroy(global.Particle1);<br> part_emitter_destroy(global.P_System, global.Particle1_Emitter);<br> part_emitter_destroy(global.P_System, global.Particle2_Emitter);<br> part_system_destroy(global.P_System);
    </p>
    <p class="dropspot"><img alt="Clean Up Particle System" class="center" src="../assets/Images/Scripting_Reference/Additional_Information/Particles_DnD_CleanUp.png">Это удалит определенные частицы, излучатели, а затем систему из памяти, чтобы вы могли перезапустить
      игру или сменить комнату. Помните, что после того, как вы подумали, где будет наиболее подходящее место для создания системы, подумайте и о том, где будет наиболее подходящее место для ее уничтожения!</p>
    <p class="dropspot"> </p>
  </div>
  <p> </p>
  <p>Теперь вы знаете основы о частицах, системах частиц и эмиттерах, так что теперь вы можете добавить их в свою игру! Но прежде чем бросаться добавлять эффекты частиц во все подряд, обратите внимание, что хотя частицы менее требовательны к процессору, чем инстансы, они
    не являются решением всех проблем, поскольку они будут вызывать задержку, если у вас их тысячи одновременно. Лучше всего экспериментировать и использовать их осторожно, чтобы визуально &quot;оживить&quot; игру и придать ей больше привлекательности, не переусердствуя при этом.
    это.</p>
  <p> </p>
  <p> </p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down5" href="#">Выпадающее название</a></p>
  <div class="droptext" data-targetname="drop-down5">
    <p>Введите здесь текст выпадающего списка</p>
  </div>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="Additional_Information.htm">Дополнительная информация</a></div>
        <div style="float:right">Следующее: <a href="Guide_To_Using_Shaders.htm">Руководство по использованию <span class="notranslate">шейдеров</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
Vectors
Vector Maths
-->
  <!-- TAGS
vector_maths
-->
</body>
</html>