<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Пар</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the Steam async event." />
  <meta name="rh-index-keywords" content="Objects - Async Steam Event" />
  <meta name="search-keywords" content="Steam,ev_web_steam,ugc_item_installed,ugc_item_subscribed,ugc_item_unsubscribed" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span class="notranslate">Пар</span></h1>
  <p><img alt="Steam Event" class="center" src="../../../assets/Images/Asset_Editors/Async_Steam.png">Это событие может быть вызвано только <a class="glossterm" data-glossterm="обратный звонок" href="#">обратными вызовами</a>из некоторых
    функций <a href="../../../GameMaker_Language/GML_Reference/Steam/Steam.htm"><span class="notranslate">Steam</span></a> API и возвращает <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS Map</a>, хранящуюся в переменной <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>,
    содержащую различные пары ключ/значение в зависимости от обратного вызова функции, вызвавшей событие. Карта всегда будет содержать ключ &quot;<span class="inline">event_type</span>&quot;, который затем можно разобрать, чтобы найти тип функции.
    которая вызвала событие, и изменить код в соответствии с этим.</p>
  <p>При вызове любой функции, вызывающей это событие, генерируется уникальное значение идентификатора async, которое следует сохранить в переменной и проверить, так как карта async_load всегда будет содержать ключ идентификатора, который затем можно разобрать и убедиться, что вы реагируете на
    на правильное событие. Фактически, карта всегда будет содержать следующие ключи, независимо от функции <span class="notranslate">Steam</span>, используемой для генерации асинхронного ответа:</p>
  <ul class="colour">
    <li>&quot;<span class="inline">id</span>&quot; - Идентификатор async, возвращенный функцией, которая вызвала событие.</li>
    <li>&quot;<span class="inline">result</span>&quot; - Результат операции (вещественное значение). Это будет либо константа <span class="notranslate">GML</span> <span class="inline">ugc_result_success</span>, либо какое-то другое вещественное число. Вы должны проверить эту константу, чтобы убедиться
      что вызов был успешным, и если возвращается другое значение, то что-то сработало неправильно. Остальные возможные возвращаемые значения отображаются как результат значения <span class="notranslate">Steam</span> &quot;<span class="inline">EResult</span>&quot;, и вы должны
      посмотреть <span class="inline"><span class="notranslate">steam</span>clientpublic.h в заголовках SDK для всех возможных значений.</li>
    <li>&quot;<span class="inline">event_type</span>&quot; - Строка, обозначающая тип события (подробности см. ниже).</li>
  </ul>
  <p> </p>
  <h2>Загрузка данных</h2>
  <p>При использовании функций <span class="notranslate">Steam</span> для загрузки таблицы лидеров (либо <a href="../../../GameMaker_Language/GML_Reference/Steam/Steam_Leaderboards/steam_upload_score.htm"><span class="inline"><span class="notranslate">steam</span>_upload_score()</a>, либо <a href="../../../GameMaker_Language/GML_Reference/Steam/Steam_Leaderboards/steam_upload_score_buffer.htm"><span class="inline"><span class="notranslate">steam</span>_upload_score_buffer()</a>)
    возвращаемая карта DS будет содержать следующие пары ключ/значение:</p>
  <ul class="colour">
    <li>&quot;<span class="inline">event_type</span>&quot; - Этот ключ будет содержать значение &quot;<span class="inline">leaderboard_upload</span>&quot;.</li>
    <li>&quot;<span class="inline">post_id</span>&quot; - Этот ключ должен соответствовать значению ID, возвращенному вызывающей функцией загрузки.</li>
    <li>&quot;<span class="inline">lb_name</span>&quot; - Этот ключ хранит название таблицы лидеров, которая была опубликована в</li>
    <li>&quot;<span class="inline">success</span>&quot; - Будет 1, если пост удался, 0 - нет.</li>
    <li>&quot;<span class="inline">updated</span>&quot; - Будет 1, если результат в таблице лидеров был действительно обновлен (т.е. новый результат был лучше) или 0 в противном случае.</li>
    <li>&quot;<span class="inline">score</span>&quot; - Эта клавиша хранит оценку, которая была опубликована.</li>
  </ul>
  <p>Примеры этого можно увидеть на страницах, посвященных функциям загрузки партитуры.</p>
  <p> </p>
  <h2>Загрузка таблиц лидеров</h2>
  <p>При использовании функций <span class="notranslate">Steam</span> для загрузки таблицы лидеров (<a href="../../../GameMaker_Language/GML_Reference/Steam/Steam_Leaderboards/steam_download_scores.htm"><span class="inline"><span class="notranslate">steam</span>_download_scores()</a>, <a href="../../../GameMaker_Language/GML_Reference/Steam/Steam_Leaderboards/steam_download_scores_around_user.htm"><span class="inline"><span class="notranslate">steam</span>_download_scores_around_user()</a> или
    <a href="../../../GameMaker_Language/GML_Reference/Steam/Steam_Leaderboards/steam_download_friends_scores.htm"><span class="inline"><span class="notranslate">steam</span> _download_friends_scores()</a>) возвращаемая карта DS будет содержать следующие пары ключ/значение:</p>
  <ul class="colour">
    <li>&quot;<span class="inline">event_type</span>&quot; - Этот ключ будет содержать значение &quot;<span class="inline">leaderboard_download</span>&quot;.</li>
    <li>&quot;<span class="inline">id</span>&quot; - Этот ключ должен соответствовать значению ID, возвращенному вызывающей функцией загрузки.</li>
    <li>&quot;<span class="inline">status</span>&quot; - Статус обратного вызова, где -1 означает неудачу или отсутствие результатов, а 0 - успех.</li>
    <li>&quot;<span class="inline">lb_name</span>&quot; - Этот ключ хранит название таблицы лидеров, которая была опубликована в</li>
    <li>&quot;<span class="inline">numEntries</span>&quot; - Количество &quot;рядов&quot; данных таблицы лидеров, которые возвращаются.</li>
    <li>&quot;<span class="inline">entries</span>&quot; - строка объекта JSON, содержащая еще одну карту DS, которая будет содержать либо ключ &quot;<span class="inline">default</span>&quot; (означающий, что в ней нет результатов), либо ключ &quot;
      <span class="inline">entries</span> &quot;, значение которого вы можете получить. Возвращаемое значение для &quot;<span class="inline">entries</span>&quot; будет представлять собой список DS, содержащий все ранги из таблицы лидеров, где каждая запись в списке будет ссылаться на другую карту DS, содержащую ключи &quot;<span class="inline">name</span>&quot;, &quot;<span class="inline">score</span>&quot; и &quot;
      <span class="inline">rank</span> &quot;, а также может содержать ключ &quot;<span class="inline">data</span>&quot; в зависимости от функции, используемой для загрузки.</li>
  </ul>
  <p>Мы покажем пример загрузки данных о результатах, запросив первую десятку рейтинга для данной таблицы лидеров и разобрав ее результаты в <span class="notranslate">Steam</span> Async Event (примеры загрузки см. на страницах соответствующих функций). Для начала
    нам нужно запросить результаты с помощью следующего кода:</p>
  <p class="code">score_get = <span class="notranslate">steam_download_scores</span>(&quot;Game Scores&quot;, 1, 10);</p>
  <p>Это отправит запрос на сервер <span class="notranslate">Steam</span> для получения очков из таблицы лидеров &quot;Game Scores&quot;, сохраняя асинхронный ID запроса в переменной &quot;<span class="inline">score_get</span>&quot;. Затем этот запрос будет обработан в <strong>событии<span class="notranslate">Steam</span></strong> Async Event следующим образом:</p>
  <p class="code">var async_id = ds_map_find_value(async_load, &quot;id&quot;);<br> if async_id == score_get<br> {<br> var entries = ds_map_find_value(async_load, &quot;entries&quot;); <br> var map = json_decode(entries);<br> if ds_map_exists(map, &quot;default&quot;)<br> {<br> ds_map_destroy(map);<br> exit;<br> } <br> else<br> {<br> var list = ds_map_find_value(map, &quot;entries&quot;);<br> var len = ds_list_size(list);<br> var entry;<br> for(var i =
    0; i &lt; len; i++;) <br> {<br> entry = ds_list_find_value(list, i );<br> <span class="notranslate">steam_name</span>[i] = ds_map_find_value(entry, &quot;name&quot;);<br> steam_score <span class="notranslate">[i]</span>= ds_map_find_value(entry, &quot;score&quot;);<br> steam_rank[i]
    = ds_map_find_value(entry, &quot;rank&quot;);<br> if (ds_map_exists(entry, &quot;data&quot;))<br> {<br> var data = ds_map_find_value(entry, &quot;data&quot;);<br> var buffId = buffer_base64_decode(data);<br> var message = buffer_read(buffId, buffer_string);<br> show_debug_message( &quot; -- attached message: &quot; + string(message));<br> buffer_delete(buffId);<br> } <br> ds_map_destroy(entry);<br> } <br> ds_list_destroy(list)<br> } <br> ds_map_destroy(map)<br> }</p>
  <p>Сначала мы проверяем ключ &quot;<span class="inline">id</span>&quot; специальной карты async_load. Если это значение совпадает со значением исходной функции обратного вызова (хранится в &quot;<span class="inline">score_get</span>&quot;
    ), то мы продолжаем обработку данных. Первое, что мы сделаем, это разберем карту <span class="inline">async_load</span> DS Map на предмет ключа &quot;<span class="inline">entries</span>&quot;, который будет содержать объект JSON, содержащий данные таблицы лидеров.
    данные. Этот объект JSON затем декодируется (см. <a href="../../../GameMaker_Language/GML_Reference/File_Handling/Encoding_And_Hashing/json_decode.htm"><span class="inline">json_decode()</span></a>) как другую DS Map, и этот новый ID карты сохраняется в
    переменной &quot;<span class="inline">map</span>&quot;.</p>
  <p>Эта карта проверяется на наличие ключа &quot;<span class="inline">default</span>&quot;, и если он найден, то карта уничтожается и событие завершается. Если ключ &quot;<span class="inline">default</span>&quot; не найден, код будет разбирать карту, чтобы извлечь необходимую информацию о таблице лидеров.
    карту для извлечения необходимой информации о таблице лидеров, сначала извлекая DS List из ключа &quot;<span class="inline">entries</span>&quot; DS Map, а затем перебирая каждую запись списка для получения другой DS Map с ключами
    <span class="inline">name</span> , <span class="inline">score</span> и <span class="inline">rank</span> каждой записи. Эти значения сохраняются в массивах, а затем мы проверяем, есть ли дополнительный ключ &quot;<span class="inline">data</span>&quot;.
    ключ. Если он есть (т.е. оценка была загружена с дополнительным пакетом данных), то мы также разбираем его и отправляем в консоль компилятора для отладки, после чего уничтожаем буфер и продолжаем уничтожать карту. Обратите внимание, что если ключ &quot;
    <span class="inline">data</span> &quot; включен ключ, его необходимо декодировать с помощью функции <a href="../../../GameMaker_Language/GML_Reference/Buffers/buffer_base64_decode.htm"><span class="inline">buffer_base64_decode()</span></a> функцию, прежде чем он
    прежде чем он будет правильно прочитан.</p>
  <p>После завершения цикла список записей уничтожается, как и карта, из которой он был взят. Нет необходимости уничтожать карту <span class="inline">async_load</span> DS Map, так как за вас это сделает <span class="notranslate">GameMaker Studio 2</span>.</p>
  <p> </p>
  <h2>Загрузка пользовательского контента (UGC)</h2>
  <p>При использовании функций <span class="notranslate">Steam</span> для загрузки <a href="../../../GameMaker_Language/GML_Reference/Steam/Steam_UGC/Steam_UGC.htm">пользовательского контента (User Generated Content, UGC)</a> некоторые из них будут вызывать это событие. Однако каждая функция будет генерировать
    <span class="inline">async_load</span> DS Map с различными парами ключ/значение (хотя они всегда будут содержать общие ключи &quot;<span class="inline">id</span>&quot;, &quot;<span class="inline">result</span>&quot; и &quot;<span class="inline">event_type</span>&quot;).
      ключи), поэтому подробности и примеры смотрите на странице, относящейся к используемой функции.</p>
  <p> </p>
  <h2>Уникальные события UGC</h2>
  <p>Событие <span class="notranslate">Steam</span> Async Event также может срабатывать, когда пользователь подписывается на элемент вне игры - например, он переходит в браузер, подписывается на новый элемент, а затем возвращается в игру. В этих случаях карта <span class="inline">async_load</span> будет содержать только следующие данные (и ни одного из значений по умолчанию, перечисленных в верхней части этой страницы):</p>
  <ul class="colour">
    <li>&quot;<span class="inline">event_type</span>&quot; - Эта клавиша будет удерживать константу <span class="inline">ugc_item_installed</span>.</li>
    <li>&quot;<span class="inline">published_file_id</span>&quot; - ID нового установленного элемента пользовательского контента (вы можете использовать функцию <a href="../../../GameMaker_Language/GML_Reference/Steam/Steam_UGC/steam_ugc_get_item_update_info.htm"><span class="inline"><span class="notranslate">steam</span>_ugc_get_item_install_info(), чтобы</a> 
      получить путь к установленному элементу)</li>
  </ul>
  <p>Событие <span class="notranslate">Steam</span> Async также может быть запущено при подписке на элемент мастерской - либо из приложения, либо из браузера мастерской - и в этих случаях карта <span class="inline">async_load</span> будет содержать следующие пары ключ/значение
    пары:</p>
  <ul class="colour">
    <li>&quot;<span class="inline">event_type</span>&quot; - Эта клавиша будет удерживать константу <span class="inline">ugc_item_subscribed</span>.</li>
    <li>&quot;<span class="inline">published_file_id</span>&quot; : Этот ключ содержит ID опубликованного файла нового подписанного элемента.</li>
  </ul>
  <p>Событие сработает, если какой-либо элемент будет снят с подписки, при этом карта DS будет содержать следующее:</p>
  <ul class="colour">
    <li>&quot;<span class="inline">event_type</span>&quot; - Эта клавиша будет удерживать константу <span class="inline">ugc_item_unsubscribed</span>.</li>
    <li>&quot;<span class="inline">published_file_id</span>&quot; : Этот ключ содержит ID опубликованного файла неподписанного элемента.</li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="../Async_Events.htm">Асинхронные события</a></div>
        <div style="float:right">Следующий: <a href="System.htm">Система</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
Asynchronous <span class="notranslate">Steam</span> Event
async_load
ugc_result_success
ugc_item_installed
ev_web_<span class="notranslate">steam</span>
ugc_item_subscribed
ugc_item_unsubscribed
-->
  <!-- TAGS
ev_web_<span class="notranslate">steam</span>
-->

</body></html>