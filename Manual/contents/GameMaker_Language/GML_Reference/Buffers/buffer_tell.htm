<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>буферный рассказ</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_tell" />
  <meta name="rh-index-keywords" content="buffer_tell" />
  <meta name="search-keywords" content="buffer_tell" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>буферный рассказ</h1>
  <p>Когда вы читаете или записываете данные в буфер с помощью кнопки <a href="buffer_read.htm"><tt>buffer_read()</tt></a> или <a href="buffer_write.htm"><tt>buffer_write()</tt></a> текущая позиция &quot;seek&quot; продвигается на записанные или прочитанные байты, и с помощью
    этой функции вы можете получить текущую позицию &quot;seek&quot; для использования в других функциях буфера. Например, если выравнивание буфера установлено на 4 байта и вы записываете один фрагмент данных размером в 1 байт, то выполните функцию <tt>buffer_tell()</tt>,
    вы получите возвращаемое значение 1. Однако если вы запишете другой фрагмент данных, также размером 1 байт, и выполните buffer_tell <tt>(),</tt> вы получите возвращаемое значение 5, поскольку выравнивание &quot;подгоняет&quot; данные к этой позиции.</p>
  <p> </p>
  <h4>Синтаксис:</h4>
  <p class="code">buffer_tell(buffer);</p>
  <table>
    <tbody>
      <tr>
        <th>Аргумент</th>
        <th>Описание</th>
      </tr>
      <tr>
        <td>буфер</td>
        <td>Индекс используемого буфера.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Возвращается:</h4>
  <p class="code">Реально</p>
  <p> </p>
  <h4>Пример:</h4>
  <p class="code">var pos = buffer_tell(buff); buffer_seek(buff, buffer_seek_start, 0);<br> val[0] = buffer_read(buff, buffer_S16);<br> val[1] = buffer_read(buff, buffer_S16);<br> val[2] = buffer_read(buff, buffer_S16);<br> buffer_seek(buff, buffer_seek_start, pos);</p>
  <p>Приведенный выше код сохранит текущую позицию поиска в буфере, индексированную в переменной &quot;buff&quot;, в локальной переменной &quot;pos&quot;. Затем позиция поиска буфера будет установлена в начало буфера, и три части данных будут
    считываются в массив, после чего позиция поиска в буфере снова устанавливается на прежнее место.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="Buffers.htm">Буферы</a></div>
        <div style="float:right">Далее: <a href="buffer_peek.htm">buffer_peek</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
buffer_tell
-->
  <!-- TAGS
buffer_tell
-->
</body>
</html>