<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>json_stringify</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for json_stringify" />
  <meta name="rh-index-keywords" content="json_stringify" />
  <meta name="search-keywords" content="json_stringify" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>json_stringify</h1>
  <p>С помощью этой функции вы можете преобразовать одиночные или вложенные структуры и массивы в правильную строку JSON. Вы задаете исходное значение (индекс массива или ссылку на структуру), а затем функция &quot;строчит&quot; его, преобразуя в строку JSON,
    преобразует массивы <span class="notranslate">GameMaker</span> в массивы JSON, а структуры <span class="notranslate">GameMaker</span> в объекты JSON.</p>
  <p>При использовании этой функции следует обратить внимание на некоторые важные моменты:</p>
  <ul class="colour">
    <li>Функция <em>не </em> будет преобразовывать карты DS, списки или любые другие структуры данных в JSON, а просто сохранит значение внутреннего индекса для структуры (что малополезно, так как индекс будет меняться между запусками игры), и поэтому
      вы не должны пытаться перевести в строку любое значение, которое может содержать ссылки на структуры данных (для этого у вас есть <a href="json_encode.htm"><span class="inline">json_encode()</span></a>).</li>
    <li>Эта функция преобразует практически любое значение в &quot;правильную&quot; строку JSON, однако фактические значения, содержащиеся в строке, могут быть не совсем такими, как вы ожидаете, из-за особенностей работы стандарта JSON:<br>
      <br> &quot;JSON не имеет отношения к числам. В любом языке программирования может существовать множество типов чисел различной емкости и комплектации, фиксированных или плавающих, двоичных или десятичных. Это может сделать обмен между различными языками программирования
      языками. JSON вместо этого предлагает только то представление чисел, которое используют люди: последовательность цифр. Все языки программирования знают, как понять последовательность цифр, даже если они не согласны с внутренними представлениями.&quot;<br>
      <br> Более подробную информацию смотрите в <a href="http://www.ecma-international.org/publications/standards/Ecma-404.htm">Стандарте</a> ECMA <a href="http://www.ecma-international.org/publications/standards/Ecma-404.htm">JSON.</a></li>
    <li>Если вы включите int64 в значения для преобразования в JSON, он запишет его как <i>int</i>, если оно находится в допустимом диапазоне для int32, как <i>double</i>, если это можно сделать без потери точности, или (если ни один из этих случаев не применим) как <i>строку</i> с идентификатором &quot; @i64@<tt>&quot;</tt> перед ним и &quot; $i64$&quot; после него<tt>.</tt> Когда вы будете разбирать JSON снова, <span class="notranslate">GameMaker Studio 2</span> подхватит эти идентификаторы и преобразует значение обратно в int64. Это означает, что
      что если JSON предназначен для сервера или другой цели, не связанной с GameMaker, эти значения не подойдут и их следует избегать.</li>
    <li>Если вы включите <span class="inline">infinity</span>, <span class="inline">-infinity</span> или <span class="inline">NaN</span> в значения для преобразования в JSON, они будут закодированы как строки, поскольку эти значения не являются частью стандарта JSON, и
      при разборе полученного JSON они <strong>не </strong>будут преобразованы обратно в свои значения <span class="notranslate">времени выполнения</span> и останутся в виде строк. Обратите внимание, что <span class="inline">NaN</span> будет преобразован в &quot;nan&quot; (в нижнем регистре) при структуризации.</li>
    <li>Следует быть осторожным при записи любой возвращаемой строки JSON в файл <span class="inline">ini</span>, поскольку спецификации <span class="inline">ini</span> могут вызвать проблемы при использовании кавычек и управляющих символов. См. функцию <a href="../Ini_Files/ini_write_string.htm"><tt>ini_write_string()</tt></a>      для получения дополнительной информации.</li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <h4>Синтаксис:</h4>
  <p class="code"><code>json_stringify</code>(val)</p>
  <table>
    <tbody>
      <tr>
        <th>Аргумент</th>
        <th>Описание</th>
      </tr>
      <tr>
        <td>val</td>
        <td>Значение ссылки для структуры или массива для преобразования в строку JSON</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Возвращается:</h4>
  <p class="code">строка</p>
  <p> </p>
  <h4>Пример:</h4>
  <p class="code">var _contents = {<br> version : &quot;1&quot;,<br> data: {<br> webSocket : 1,<br> ipv4Address : &quot;95.39.220.218&quot;,<br> ipv6Address : &quot;0000:0000:0000:0000:0000:ffff:5f27:dcda&quot;,<br> header : &quot;Вы получаете пакет.
    : &quot;Вы получаете пакет&quot;,<br> body : &quot;Этот пакет пуст и предназначен только для тестирования&quot;,<br> }, <br> };
    <br> packet = json_stringify(map);</p>
  <p>Приведенный выше код преобразует структуру &quot;_contents&quot; в строку JSON и сохранит ее в переменной. Фактическая строка будет выглядеть следующим образом:</p>
  <p class="code">{ &quot;version&quot;: &quot;1&quot;, &quot;myObj&quot;: { &quot;header&quot;: &quot;Вы получаете пакет&quot;, &quot;webSocket&quot;: 1, &quot;body&quot;: &quot;Пакет сухариков с сыром и луком&quot;, &quot;ipv4Address&quot;: &quot;95.39.220.218&quot;,
    &quot;ipv6Address&quot;: &quot;0000:0000:0000:0000:0000:ffff:5f27:dcda&quot; } }</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="Encoding_And_Hashing.htm">Кодирование файлов</a></div>
        <div style="float:right">Далее: <a href="json_parse.htm">json_parse</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
json_stringify
-->
  <!-- TAGS
json_stringify
-->
</body>
</html>