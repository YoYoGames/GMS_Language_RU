<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>json_encode</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for json_encode" />
  <meta name="rh-index-keywords" content="json_encode" />
  <meta name="search-keywords" content="json_encode" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>json_encode</h1>
  <h3><strong>ВАЖНО!</strong> Эта функция - хотя она все еще актуальна - была заменена функцией <span class="inline"><a href="json_stringify.htm">json_stringify()</a></span>, и мы рекомендуем использовать ее только для поддержки старых версий.</h3>
  <p>JSON (JavaScript Object Notation) - это легкий формат обмена данными, который легко читать и писать как людям, так и машинам. Он построен на двух основных структурах:</p>
  <ul class="colour">
    <li>Набор пар имя/значение, называемый <a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><tt>Карта DS</tt></a> в <span class="notranslate">GameMaker Studio 2</span>, но также известна как &quot;словарь&quot; или &quot;объект&quot; в других языках программирования.</li>
    <li>Упорядоченный список значений, называемый <a href="../../Data_Structures/DS_Lists/DS_Lists.htm"><tt>DS </tt><tt>Список</tt></a> в <span class="notranslate">GameMaker Studio 2</span>, но в других языках программирования его также можно назвать &quot;массивом&quot; или &quot;последовательностью&quot;.</li>
  </ul>
  <p><tt>json_encode()</tt> принимает карту DS или массив, который вы ранее создали, и кодирует его как строку JSON, которую вы можете использовать в качестве (например) части <a href="../../Asynchronous_Functions/HTTP/http_post_string.htm"><tt>http_post_string()</tt></a>    или - для хранения во внешнем пространстве - записать в файл. Если в качестве структуры верхнего уровня используется массив, то массив может содержать только допустимые значения или другие массивы, но <em>не</em> структуры данных. Для этого вы должны использовать соответствующие
    DS-функции.</p>
  <p class="note"><strong>ВАЖНО!</strong> JSON не имеет отношения к числам. В любом языке программирования может быть множество типов чисел различной емкости и дополнений, фиксированных или плавающих, двоичных или десятичных. Это может затруднить обмен между различными
    языками программирования. Вместо этого JSON предлагает только то представление чисел, которое используют люди: последовательность цифр. Все языки программирования знают, как понять последовательность цифр, даже если они не согласны с внутренними представлениями. Для
    дополнительную информацию см. в <a href="http://www.ecma-international.org/publications/standards/Ecma-404.htm">стандарте ECMA JSON</a>.</p>
  <p>Обратите внимание, что при записи JSON в ini-файл следует соблюдать осторожность, поскольку спецификации ini могут вызывать проблемы при использовании кавычек и управляющих символов. См. функцию <a href="../Ini_Files/ini_write_string.htm"><tt>ini_write_string()</tt></a> для получения дополнительной
    информацию. Также обратите внимание, что если вы закодируете int64 в JSON, он запишет его как <i>int</i>, если он находится в допустимом диапазоне для int32, как <i>double</i>, если он может сделать это без потери точности, или (если ни один из этих случаев не применим) как <i>строку</i> с идентификатором &quot; @i64@<tt>&quot;</tt> перед ним и &quot; $i64$&quot; после него<tt>.</tt> Когда вы будете декодировать JSON в карту, <span class="notranslate">GameMaker Studio 2</span> подхватит эти идентификаторы и преобразует значение в int64. Это означает, что
    что если JSON предназначен для сервера или другой цели, не связанной с GameMaker, эти значения не подойдут и их следует избегать.</p>
  <p class="note"><b>ПРИМЕЧАНИЕ</b>: Иерархическая функциональность JSON доступна через специальные функции DS map и DS list (например, <span class="inline"><a href="../../Data_Structures/DS_Maps/ds_map_add_list.htm" style="font-size: 14px">ds_map_add_list()</a></span> или
    <span class="inline"><a href="../../Data_Structures/DS_Lists/ds_list_mark_as_map.htm" style="font-size: 14px">ds_list_mark_as_map()</a></span> ), поэтому вы можете кодировать вложенные списки и карты.</p>
  <p> </p>
  <h4>Синтаксис:</h4>
  <p class="code">json_encode(map)</p>
  <table>
    <tbody>
      <tr>
        <th>Аргумент</th>
        <th>Описание</th>
      </tr>
      <tr>
        <td>карта</td>
        <td>карта DS с информацией для кодирования (или массив)</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Возвращается:</h4>
  <p class="code">строка</p>
  <p> </p>
  <h4>Пример:</h4>
  <p class="code">var hiscore_map, i, str;<br> hiscore_map = ds_map_create();<br> for (i = 0; i &lt; 10; i ++;)<br> {
    <br> ds_map_add(hiscore_map, name[i], score[i]);<br> }
    <br> str = json_encode(hiscore_map);<br> get[0] = http_post_string(&quot;http://www.angusgames.com/game?game_id=&quot; + string(global.game_id), str)<br> ds_map_destroy(hiscore_map);
  </p>
  <p>Приведенный выше код создает карту DS, а затем циклически просматривает массивы имен и баллов, добавляя каждую пару ключ/значение в новую карту. Затем эта карта кодируется с помощью <tt>json_encode()</tt> и сохраняется в виде строки в переменной &quot;str&quot;. Эта строка
    затем отправляется на веб-сервер с помощью <tt>http_post_string()</tt>, а карта DS уничтожается, чтобы предотвратить утечку памяти, так как она больше не нужна.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="Encoding_And_Hashing.htm">Кодирование файлов</a></div>
        <div style="float:right">Далее: <a href="json_decode.htm">json_decode</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
json_encode
-->
  <!-- TAGS
json_encode
-->
</body>
</html>