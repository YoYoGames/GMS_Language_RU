<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_particle_get_data_particle</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_particle_get_data_particle" />
  <meta name="rh-index-keywords" content="physics_particle_get_data_particle,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color" />
  <meta name="search-keywords" content="physics_particle_get_data_particle,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_particle_get_data_particle</h1>
  <p>Эта функция возвращает различные частицы информации об одной частице в физической симуляции, используя заданные флаги. Индекс частицы (ее ID) - это тот, который был возвращен функцией <a href="physics_particle_create.htm"><tt>physics_particle_create()</tt></a>,
    а используемый буфер должен быть создан ранее с помощью функции <a href="../../Buffers/buffer_create.htm"><tt>buffer_create()</tt></a>. Он должен быть типа &quot;grow&quot;, с размером, приблизительно равным размеру ожидаемых возвращаемых
    данных. Сами флаги устанавливаются с помощью констант, приведенных ниже, и для получения нужной информации можно использовать побитовую комбинацию <i>или</i> &quot;|&quot; для создания одного значения флага.</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Постоянная</th>
        <th>Описание</th>
        <th>Тип данных</th>
      </tr>
      <tr>
        <td>phy_particle_data_flag_typeflags</td>
        <td>Значение флагов для частицы.</td>
        <td>буфер_u32</td>
      </tr>
      <tr>
        <td>phy_particle_data_flag_position</td>
        <td>Позиция x и y частицы.</td>
        <td>2 x буфер_f32</td>
      </tr>
      <tr>
        <td>phy_particle_data_flag_velocity</td>
        <td>Горизонтальная и вертикальная скорость.</td>
        <td>2 x буфер_f32</td>
      </tr>
      <tr>
        <td>phy_particle_data_flag_colour</td>
        <td>Цвет и альфа-значение (шестнадцатеричное).</td>
        <td>буфер_f32</td>
      </tr>
      <tr>
        <td>phy_particle_data_flag_category</td>
        <td>Категория частицы (определенная при создании частицы).</td>
        <td>буфер_u32</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Синтаксис:</h4>
  <p class="code">physics_particle_get_data_particle(ind, buffer, flags)</p>
  <table>
    <tbody>
      <tr>
        <th>Аргумент</th>
        <th>Описание</th>
      </tr>
      <tr>
        <td>инд</td>
        <td>Индекс (ID) частицы для получения данных.</td>
      </tr>
      <tr>
        <td>буфер</td>
        <td>Буфер (ранее созданный), который будет использоваться для хранения данных.</td>
      </tr>
      <tr>
        <td>флаги</td>
        <td>Флаги, которые следует использовать для извлечения данных о конкретных типах частиц.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Возвращается:</h4>
  <p class="code">Данные буфера</p>
  <p> </p>
  <h4>Пример:</h4>
  <p class="code">var part = physics_particle_create(flags, x, y, x_vel, y_vel, c_white, 1, 1)<br> var flags = phy_particle_data_flag_position | phy_particle_data_flag_velocity;<br> var buffer = buffer_create(16, buffer_grow, 4);<br> physics_particle_get_data_particle(part,
    buffer, flags);<br> px = buffer_read(buffer, buffer_f32);<br> py = buffer_read(buffer, buffer_f32);<br> pvelx = buffer_read(buffer, buffer_f32);<br> pvely = buffer_read(buffer, buffer_f32);<br> buffer_delete(buffer);
  </p>
  <p>Приведенный выше код получает положение и скорость частицы, индексируемой переменной &quot;part&quot;, и сохраняет данные в ряде переменных.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="Soft_Body_Particles.htm">Частицы мягкого тела</a></div>
        <div style="float:right">Далее: <a href="physics_particle_group_get_data.htm">physics_particle_group_get_data</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
physics_particle_get_data_particle
phy_particle_data_flag_typeflags
phy_particle_data_flag_position
phy_particle_data_flag_velocity
phy_particle_data_flag_colour
phy_particle_data_flag_category
-->
  <!-- TAGS
physics_particle_get_data_particle
-->
</body>
</html>