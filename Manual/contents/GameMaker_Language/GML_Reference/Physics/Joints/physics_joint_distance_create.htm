<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>физическое_расстояние_создать</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_distance_create" />
  <meta name="rh-index-keywords" content="physics_joint_distance_create" />
  <meta name="search-keywords" content="physics_joint_distance_create" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>физическое_расстояние_создать</h1>
  <p>Одним из самых простых соединений является соединение расстояний, которое гласит, что расстояние между двумя точками на двух экземплярах должно быть постоянным. При задании соединения расстояния два экземпляра уже должны быть созданы и иметь назначенное крепление, затем вы определяете
    две опорные точки в комнатных координатах. Первая опорная точка связана с экземпляром 1, вторая опорная точка связана с экземпляром 2, а расстояние между этими точками подразумевает длину ограничения расстояния. На рисунке ниже показано
    как это работает:</p>
  <p><img alt="Distance joint illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/direction_joint_image.png">Как вы видите, точки привязки задаются как координаты помещения, поэтому при их определении необходимо соблюдать осторожность.
    особенно если экземпляры создаются одновременно с суставами, а не помещаются в комнату через редактор комнат. Вы также должны понимать, что суставы создаются независимо от размера спрайта
    экземпляров или прикрепленных к ним приспособлений. Таким образом, если вы создадите дистанционный шарнир не в начале координат экземпляра, он все равно будет действителен и будет ограничивать два экземпляра относительно позиции, в которой он был создан. Если вы установите
    значение &quot;col&quot; в true, то два <tt>экземпляра</tt> могут взаимодействовать и сталкиваться друг с другом, но только если у <i>них</i> есть события столкновения, однако если значение установлено в false, то <tt>они</tt> не будут сталкиваться независимо ни от чего.</p>
  <p> </p>
  <h4>Синтаксис:</h4>
  <p class="code">physics_joint_distance_create(inst1, inst2, w_anchor1_x, w_anchor1_y, w_anchor2_x, w_anchor2_y, col)</p>
  <table>
    <tbody>
      <tr>
        <th>Аргумент</th>
        <th>Описание</th>
      </tr>
      <tr>
        <td>инст1</td>
        <td>Первая инстанция, которая соединяется с суставом</td>
      </tr>
      <tr>
        <td>инст2</td>
        <td>Вторая инстанция для соединения с суставом</td>
      </tr>
      <tr>
        <td>w_anchor1_x</td>
        <td>Первая координата x для сустава в пределах игрового мира</td>
      </tr>
      <tr>
        <td>w_anchor1_y</td>
        <td>Первая координата y для сустава в пределах игрового мира</td>
      </tr>
      <tr>
        <td>w_anchor2_x</td>
        <td>Вторая координата x для сустава в пределах игрового мира</td>
      </tr>
      <tr>
        <td>w_anchor2_y</td>
        <td>вторая координата y для сустава в пределах игрового мира</td>
      </tr>
      <tr>
        <td>col</td>
        <td>Могут ли два экземпляра столкнуться (true) или нет (false)</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Возвращается:</h4>
  <p class="code">Целое число (индекс сустава)</p>
  <p> </p>
  <h4>Пример:</h4>
  <p class="code">var mainFixture, o_id;<br> mainFixture = physics_fixture_create();<br> physics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);<br> o_id=instance_create_layer(x+300, y, &quot;Instances&quot;, obj_Rudder);<br> physics_fixture_bind(mainFixture,
    id);<br> physics_fixture_bind(mainFixture, o_id);<br> physics_joint_distance_create(id, o_id, x + 50, y, o_id.x - 50, o_id.y, 0);<br> physics_fixture_delete(mainFixture);
  </p>
  <p>Приведенный выше код создает и определяет новое приспособление, а затем создает экземпляр &quot;obj_Rudder&quot;. Затем приспособление назначается экземпляру, выполняющему код, а также вновь созданному экземпляру, и между ними создается соединение. Наконец,
    приспособление удаляется, так как оно больше не нужно.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="Joints.htm">Суставы</a></div>
        <div style="float:right">Далее: <a href="physics_joint_revolute_create.htm">physics_joint_revolute_create</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_distance_create
-->
  <!-- TAGS
physics_joint_distance_create
-->
</body>
</html>