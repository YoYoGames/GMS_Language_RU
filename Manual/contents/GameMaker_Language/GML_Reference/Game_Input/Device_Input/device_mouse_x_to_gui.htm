<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>device_mouse_x_to_gui</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for device_mouse_x_to_gui" />
  <meta name="rh-index-keywords" content="device_mouse_x_to_gui" />
  <meta name="search-keywords" content="device_mouse_x_to_gui" />
</head>

<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>device_mouse_x_to_gui</h1>
  <p>Эта функция возвращает x-позицию касания на устройстве по отношению к слою GUI. Поскольку слой GUI может быть установлен на другой размер независимо от разрешения экрана <i>и</i> размера комнаты, иногда бывает сложно получить
    точную точку на слое GUI, в которой пользователь коснулся экрана. С помощью этой функции вы можете получить эту позицию на основе фактического размера GUI, что упрощает создание и взаимодействие с кнопками GUI и элементами HUD. Если вы используете эту функцию в модулях
    HTML5 или модулях PC и Mac, то это значение будет обновляться постоянно, пока устройство (обычно мышь) подключено, однако для мобильных устройств это значение будет обновляться только во время касания экрана, и обратите внимание, что максимальное число
    максимальное количество касаний, которое может быть обнаружено, будет сильно зависеть от используемого устройства и ОС, на которой оно работает. Также обратите внимание, что на HTML5 только &quot;устройство 0&quot; будет работать правильно, а другие устройства могут давать неверные значения.</p>
  <p> </p>
  <h4>Синтаксис:</h4>
  <p class="code">device_mouse_x_to_gui(device);</p>
  <table>
    <tbody>
      <tr>
        <th>Аргумент</th>
        <th>Описание</th>
      </tr>
      <tr>
        <td>устройство</td>
        <td>Устройство (от 0 до <i>n</i>), которое проверяется.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Возвращается:</h4>
  <p class="code">Реально</p>
  <p> </p>
  <h4>Пример:</h4>
  <p class="code">if device_mouse_check_button(0, mb_left)<br> {
    <br> if device_mouse_x_to_gui(0) &gt; 0 &amp;&amp; device_mouse_x_to_gui(0) &lt; 32<br> {
    <br> pressed = true;<br> }
    <br> else
    <br> {
    <br> pressed = false;<br> }
    <br> }
  </p>
  <p>Приведенный выше код проверяет, нажимается ли мышь устройства, и если да, то опрашивает позицию x устройства на слое GUI, чтобы проверить, находится ли она в пределах параметров. Если это так, то переменная &quot;pressed&quot; устанавливается в true, в <tt>противном</tt> случае - в false.
    устанавливается значение <tt>false</tt>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="Device_Input.htm">Ввод устройства</a></div>
        <div style="float:right">Далее: <a href="device_mouse_y_to_gui.htm">device_mouse_y_to_gui</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
device_mouse_x_to_gui
-->
  <!-- TAGS
device_mouse_x_to_gui
-->

</body></html>