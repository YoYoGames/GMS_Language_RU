<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gml_release_mode</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for gml_release_mode" />
  <meta name="rh-index-keywords" content="gml_release_mode" />
  <meta name="search-keywords" content="gml_release_mode" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gml_release_mode</h1>
  <p>Когда ваша игра компилируется, она также включает определенные внутренние функции для проверки ошибок во время работы. Эти внутренние проверки охватывают многие аспекты кода игры, включая диапазоны, параметры и некоторые общие аспекты внутреннего компилятора <span class="notranslate">GML</span>, и во многих случаях именно они порождают окончательные сообщения об ошибках.
    во многих случаях порождают окончательные сообщения об ошибках. Однако эту функцию можно использовать для отключения этих внутренних проверок (т.е. полностью удалить их из скомпилированной игры), что позволит увеличить скорость работы вашего конечного проекта.</p>
  <p>Обратите внимание, что это означает, что если вы сделаете в коде игры что-то неправильное, скомпилированная игра <i>может просто упасть</i>, или в ней может наблюдаться <i>очень неожиданное поведение</i>. Например, если доступ к <tt>DS Grid</tt> осуществляется по
    в режиме разработчика вы получите сообщение об ошибке в окне компилятора, но установленные проверки позволят игре продолжить работу. Однако в режиме релиза этих проверок не будет, и поэтому код может
    вернуть либо указатель NULL, либо плохой указатель, который, в свою очередь, будет указывать на случайную память. В лучшем случае вы получите неверные данные, а в худшем - перезапишете что-то в памяти: данные, графику или даже сам код. Другой пример
    может быть построение примитивов - если вы передаете данные о цвете, положении, текстуре и т.д. в порядке, отличном от того, который вы определили при создании формата вершин, то игра может аварийно завершить работу или выдать неожиданные результаты, если включен режим релиза.
    включен.</p>
  <p> </p>
  <h4>Синтаксис:</h4>
  <p class="code">gml_release_mode(flag);</p>
  <table>
    <tbody>
      <tr>
        <th>Аргумент</th>
        <th>Описание</th>
      </tr>
      <tr>
        <td>флаг</td>
        <td>Либо <tt>true</tt> для установки режима выпуска, либо false для общей разработки.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Возвращается:</h4>
  <p class="code">Н/Д</p>
  <p> </p>
  <h4>Пример:</h4>
  <p class="code">gml_release_mode(true);</p>
  <p>Приведенный выше пример кода установит игру на использование режима выпуска при компиляции.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="OS_And_Compiler.htm">ОС и компилятор</a></div>
        <div style="float:right">Далее: <a href="gml_pragma.htm">gml_pragma</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
gml_release_mode
-->
  <!-- TAGS
gml_release_mode
-->
</body>
</html>