<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Структуры данных</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for Data Structures" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Data Structures" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Структуры данных</h1>
  <p>В играх часто требуется хранить информацию в точном и упорядоченном виде. Например, вам может понадобиться хранить списки предметов, которые несет человек, или сетку мест, которые еще нужно посетить. Сейчас вы <i>можете</i> использовать массивы
    но если вы хотите выполнить более сложные операции, например, сортировку данных или поиск определенного элемента, вам придется писать большие куски <span class="notranslate">GML-кода</span>, который может быть медленным в исполнении, трудным в отладке и настоящей мукой в написании!</p>
  <p>Для решения этой проблемы в <span class="notranslate">GameMaker Studio 2</span> имеется ряд встроенных <b>структур данных</b>, доступ к которым можно получить с помощью специальных функций. Существует шесть различных типов структур данных, каждый из которых имеет свои преимущества в зависимости от типа информации, которую вы хотите хранить, и от того, как вы хотите ею впоследствии манипулировать: стеки, очереди, списки.
    информации, которую вы хотите хранить и как вы хотите манипулировать ею в дальнейшем: стеки, очереди, списки, карты, очереди приоритетов и сетки.</p>
  <p>По сути, все структуры данных работают одинаково - вы создаете структуру данных и сохраняете <i>значение</i> ее <i>индекса</i> в переменной. Затем вы используете этот индекс для ссылки на структуру данных во всех последующих вызовах функций, которые могут выполнять операции над ней.
    ней. Наконец, когда вы закончили, вы снова уничтожаете структуру данных, чтобы удалить ее из памяти. Вы можете использовать столько структур одновременно, сколько вам нужно, и все структуры могут хранить любой из доступных <a href="../../GML_Overview/Data_Types.htm">типов данных</a>.</p>
  <p class="note"><b>ПРИМЕЧАНИЕ: </b>Как и все динамические ресурсы, структуры данных занимают память, поэтому их <b>всегда</b> следует уничтожать, когда они больше не нужны, чтобы предотвратить утечку памяти, которая замедлит и в конечном итоге приведет к краху вашей игры.</p>
  <p class="note"><b>ВАЖНО!</b> Когда вы создаете структуру данных, значение индекса для ее идентификации является целым числом, начинающимся с 0. Это означает, что разные структуры данных могут иметь <b>одинаковое</b> значение индекса, поэтому, если вы сомневаетесь, следует использовать функцию <span style="font-size:1px;"><tt style="font-size: 14px">ds_exists</tt></span>    функцию перед обращением к ним. Также обратите внимание, что индексы используются повторно, поэтому значение индекса уничтоженной структуры данных может быть использовано вновь созданной, поэтому мы рекомендуем после уничтожения структуры данных установить любую переменную, содержащую индекс DS, в -1.
    структуру данных.</p>
  <p>Информацию о различных структурах данных можно найти в следующих разделах:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="DS_Grids/DS_Grids.htm">Сетки</a></li>
    <li><a href="DS_Lists/DS_Lists.htm">Списки</a></li>
    <li><a href="DS_Maps/DS_Maps.htm">Карты</a></li>
    <li><a href="DS_Priority_Queues/DS_Priority_Queues.htm">Приоритетные очереди</a></li>
    <li><a href="DS_Queues/DS_Queues.htm">Очереди</a></li>
    <li><a href="DS_Stacks/DS_Stacks.htm">Стеки</a></li>
  </ul>
  <p> </p>
  <p>Прежде чем использовать структуры данных в своей игре, вы также должны знать, что существуют определенные моменты, когда из-за ошибок округления вы можете получить не тот результат, который ожидали. Это можно решить, изменив точность DS с помощью следующей функции
    функция:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="ds_set_precision.htm">ds_set_precision</a></li>
  </ul>
  <p> </p>
  <p>Существует также специальная функция для проверки существования структуры данных любого заданного типа:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="ds_exists.htm">ds_exists</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="../GML_Reference.htm">Ссылка на<span class="notranslate">GML</span></a></div>
        <div style="float:right">Следующий: <a href="../Strings/Strings.htm">Струны</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
Data Structures
-->
  <!-- TAGS
data_structure_functions
-->
</body>
</html>