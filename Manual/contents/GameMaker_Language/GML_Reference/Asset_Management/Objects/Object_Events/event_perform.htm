<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>событие_исполнения</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function event_perform" />
  <meta name="rh-index-keywords" content="event_perform,ev_create,ev_destroy,ev_cleanup,ev_step,ev_step_normal,ev_step_begin,ev_step_end,ev_alarm,ev_keyboard,ev_keypress,ev_keyrelease,ev_mouse,ev_left_button,ev_right_button,ev_middle_button,ev_no_button,ev_left_press,ev_right_press,ev_middle_press,ev_left_release,ev_right_release,ev_middle_release,ev_mouse_enter,ev_mouse_leave,ev_mouse_wheel_up,ev_mouse_wheel_down,ev_global_left_button,ev_global_right_button,ev_global_middle_button,ev_global_left_press,ev_global_right_press,ev_global_middle_press,ev_global_left_release,ev_global_right_release,ev_global_middle_release,ev_gesture,ev_gesture_tap,ev_gesture_double_tap,ev_gesture_drag_start,ev_gesture_dragging,ev_gesture_drag_end,ev_gesture_flick,ev_gesture_pinch_start,ev_gesture_pinch_in,ev_gesture_pinch_out,ev_gesture_pinch_end,ev_gesture_rotate_start,ev_gesture_rotating,ev_gesture_rotate_end,ev_global_gesture_tap,ev_global_gesture_double_tap,ev_global_gesture_drag_start,ev_global_gesture_dragging,ev_global_gesture_drag_end,ev_global_gesture_flick,ev_global_gesture_pinch_start,ev_global_gesture_pinch_in,ev_global_gesture_pinch_out,ev_global_gesture_pinch_end,ev_global_gesture_rotate_start,ev_global_gesture_rotating,ev_global_gesture_rotate_end,ev_collision,ev_other,ev_outside,ev_boundary,ev_game_start,ev_game_end,ev_room_start,ev_room_end,ev_no_more_lives,ev_no_more_health,ev_animation_end,ev_end_of_path,ev_close_button,ev_user,ev_draw,ev_draw_begin,ev_draw_end,ev_draw_pre,ev_draw_post,ev_gui,ev_gui_begin,ev_gui_end" />
  <meta name="search-keywords" content="event_perform,ev_create,ev_destroy,ev_cleanup,ev_step,ev_step_normal,ev_step_begin,ev_step_end,ev_alarm,ev_keyboard,ev_keypress,ev_keyrelease,ev_mouse,ev_left_button,ev_right_button,ev_middle_button,ev_no_button,ev_left_press,ev_right_press,ev_middle_press,ev_left_release,ev_right_release,ev_middle_release,ev_mouse_enter,ev_mouse_leave,ev_mouse_wheel_up,ev_mouse_wheel_down,ev_global_left_button,ev_global_right_button,ev_global_middle_button,ev_global_left_press,ev_global_right_press,ev_global_middle_press,ev_global_left_release,ev_global_right_release,ev_global_middle_release,ev_gesture,ev_gesture_tap,ev_gesture_double_tap,ev_gesture_drag_start,ev_gesture_dragging,ev_gesture_drag_end,ev_gesture_flick,ev_gesture_pinch_start,ev_gesture_pinch_in,ev_gesture_pinch_out,ev_gesture_pinch_end,ev_gesture_rotate_start,ev_gesture_rotating,ev_gesture_rotate_end,ev_global_gesture_tap,ev_global_gesture_double_tap,ev_global_gesture_drag_start,ev_global_gesture_dragging,ev_global_gesture_drag_end,ev_global_gesture_flick,ev_global_gesture_pinch_start,ev_global_gesture_pinch_in,ev_global_gesture_pinch_out,ev_global_gesture_pinch_end,ev_global_gesture_rotate_start,ev_global_gesture_rotating,ev_global_gesture_rotate_end,ev_collision,ev_other,ev_outside,ev_boundary,ev_game_start,ev_game_end,ev_room_start,ev_room_end,ev_no_more_lives,ev_no_more_health,ev_animation_end,ev_end_of_path,ev_close_button,ev_user,ev_draw,ev_draw_begin,ev_draw_end,ev_draw_pre,ev_draw_post,ev_gui,ev_gui_begin,ev_gui_end" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>событие_исполнения</h1>
  <p>Эта функция выполнит указанное событие с заданным аргументом для экземпляра, выполняющего код. Здесь есть множество опций, которые позволяют полностью смоделировать все возможные события, но обратите внимание, что это буквально просто выполняет весь код
    Например, если вы решите выполнить событие нажатия на клавиатуру, событие будет вызвано, но соответствующая клавиша не будет распознана как нажатая. Или если вы
    событие тревоги, счетчик тревоги не будет установлен на -1, а продолжит обратный отсчет.</p>
  <p>В приведенной ниже таблице указаны все константы, включенные в <span class="notranslate">GameMaker Studio 2</span> для ссылок на типы событий, а также их числовое значение. Сами события выделены <b>жирным шриф</b> том и совпадают с возвращаемыми значениями переменной <a href="event_type.htm"><tt>тип_события</tt></a>    а их числовые значения выделены <i>курсивом</i> и совпадают с возвращаемыми значениями переменной <a href="event_number.htm"><tt>номер_события</tt></a> переменной:</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th width="40%">Имя</th>
        <th>Описание</th>
      </tr>
      <tr>
        <td><b>ev_create</b></td>
        <td>Создайте событие.</td>
      </tr>
      <tr>
        <td><b>ev_destroy</b></td>
        <td>Уничтожить событие</td>
      </tr>
      <tr>
        <td><b>ev_cleanup</b></td>
        <td>Мероприятие по уборке территории</td>
      </tr>
      <tr>
        <td><b>ev_step</b></td>
        <td>Шаговое мероприятие</td>
      </tr>
      <tr>
        <td><i>   ---- ev_step_normal</i></td>
        <td>Шаг</td>
      </tr>
      <tr>
        <td><i>   ---- ev_step_begin</i></td>
        <td>Начальный этап</td>
      </tr>
      <tr>
        <td><i>   ---- ev_step_end</i></td>
        <td>Конечный этап</td>
      </tr>
      <tr>
        <td><b>ev_alarm</b></td>
        <td>Тревожное событие</td>
      </tr>
      <tr>
        <td><i>   ---- 0 ... 11</i></td>
        <td>Номер, относящийся к тому, какой из 12 сигналов тревоги вы хотите включить</td>
      </tr>
      <tr>
        <td><b>ev_keyboard, ev_keypress, ev_keyrelease</b></td>
        <td>Клавиатура/клавиатура нажата/клавиатура отпущена</td>
      </tr>
      <tr>
        <td><i>   ---- любой код ключа</i></td>
        <td>например, vk_space или ord(&quot;W&quot;).</td>
      </tr>
      <tr>
        <td><b>ev_mouse</b></td>
        <td>Событие мыши</td>
      </tr>
      <tr>
        <td><i>   ---- ev_left_button</i></td>
        <td>Левая кнопка удерживается на объекте</td>
      </tr>
      <tr>
        <td><i>   ---- ev_right_button</i></td>
        <td>Удержание правой кнопки на объекте</td>
      </tr>
      <tr>
        <td><i>   ---- ev_middle_button</i></td>
        <td>Средняя кнопка (или колесико) удерживается нажатой на объекте</td>
      </tr>
      <tr>
        <td><i>   ---- ev_no_button</i></td>
        <td>Не удерживайте кнопки</td>
      </tr>
      <tr>
        <td><i>   ---- ev_left_press</i></td>
        <td>Левая кнопка только что нажата на объекте</td>
      </tr>
      <tr>
        <td><i>   ---- ev_right_press</i></td>
        <td>Правая кнопка только что нажата на объекте</td>
      </tr>
      <tr>
        <td><i>   ---- ev_middle_press</i></td>
        <td>Средняя кнопка (или кликабельное колесо) только что нажата на объекте</td>
      </tr>
      <tr>
        <td><i>   ---- ev_left_release</i></td>
        <td>Левая кнопка только что отпущена на объекте</td>
      </tr>
      <tr>
        <td><i>   ---- ev_right_release</i></td>
        <td>Правая кнопка только что была отпущена на объекте</td>
      </tr>
      <tr>
        <td><i>   ---- ev_middle_release</i></td>
        <td>Средняя кнопка только что отпущена на объекте</td>
      </tr>
      <tr>
        <td><i>   ---- ev_mouse_enter</i></td>
        <td>Мышь только что вошла в ограничительную область объекта</td>
      </tr>
      <tr>
        <td><i>   ---- ev_mouse_leave</i></td>
        <td>Мышь только что покинула ограничивающую рамку объекта</td>
      </tr>
      <tr>
        <td><i>   ---- ev_mouse_wheel_up</i></td>
        <td>Колесо мыши прокручивается вверх</td>
      </tr>
      <tr>
        <td><i>   ---- ev_mouse_wheel_down</i></td>
        <td>Колесо мыши прокручивается вниз</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_left_button</i></td>
        <td>Левая кнопка удерживается в любом месте</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_right_button</i></td>
        <td>Правая кнопка удерживается в любом месте</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_middle_button</i></td>
        <td>Средняя кнопка (или колесико) удерживается нажатой в любом месте</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_left_press</i></td>
        <td>Левая кнопка просто нажата в любом месте</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_right_press</i></td>
        <td>Правая кнопка нажимается в любом месте</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_middle_press</i></td>
        <td>Средняя кнопка (или кликабельное колесо) просто нажимается в любом месте</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_left_release</i></td>
        <td>Левая кнопка отпускается в любом месте</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_right_release</i></td>
        <td>Правая кнопка только что была отпущена в любом месте</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_middle_release</i></td>
        <td>Средняя кнопка только что освободилась в любом месте</td>
      </tr>
      <tr>
        <td><b>ev_gesture</b></td>
        <td>Событие жеста (касание, перетаскивание, щелчок, щипок или поворот)</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_tap</i></td>
        <td>Однократное нажатие/прикосновение и отпускание было обнаружено для <i>экземпляра</i></td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_double_tap</i></td>
        <td>Два быстрых прикосновения/щелчка и освобождения были обнаружены для <i>экземпляра</i></td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_drag_start</i></td>
        <td>Начало жеста перетаскивания было обнаружено для <i>экземпляра</i></td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_dragging</i></td>
        <td>Прикосновение/щелчок удерживается и перемещается в течение <i>экземпляра</i></td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_drag_end</i></td>
        <td>Отпускание касания/щелчка от перетаскивания было обнаружено для <i>экземпляра</i></td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_flick</i></td>
        <td>Освобождение касания/щелчка от перетаскивания имело достаточно движения для обнаружения события щелчка для <i>экземпляра</i></td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_pinch_start</i></td>
        <td>Для <i>экземпляра</i>были обнаружены два касания и прямолинейное движение</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_pinch_in</i></td>
        <td>Движение между двумя касаниями для <i>экземпляра</i> было определено как движение внутрь</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_pinch_out</i></td>
        <td>Движение между двумя касаниями для <i>экземпляра</i> было определено как движение наружу</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_pinch_end</i></td>
        <td>Отпускание одного (или обоих) касаний для защемления было обнаружено для <i>экземпляра</i></td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_rotate_start</i></td>
        <td>Движение между двумя касаниями для <i>экземпляра</i> было определено как вращение</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_rotating</i></td>
        <td>Движение между двумя касаниями для <i>экземпляра</i> было определено как вращение</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_rotate_end</i></td>
        <td>Отпускание одного (или обоих) касаний для поворота было обнаружено для <i>экземпляра</i></td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_tap</i></td>
        <td>Однократное нажатие/прикосновение и отпускание было обнаружено в <i>любой точке</i> помещения</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_double_tap</i></td>
        <td>Два быстрых прикосновения/щелчка и отпускания были обнаружены в <i>любой точке</i> комнаты</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_drag_start</i></td>
        <td>Начало жеста перетаскивания было обнаружено в <i>любой точке</i> комнаты</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_dragging</i></td>
        <td>Прикосновение/щелчок удерживается и перемещается в <i>любую точку</i> комнаты</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_drag_end</i></td>
        <td>Отпускание касания/щелчка от перетаскивания было обнаружено в <i>любой точке</i> помещения</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_flick</i></td>
        <td>Освобождение прикосновения/щелчка от перетаскивания имело достаточно движения, чтобы событие щелчка было обнаружено в <i>любой точке</i> комнаты</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_pinch_start</i></td>
        <td>Два прикосновения и прямолинейное движение были обнаружены в <i>любой точке</i> комнаты</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_pinch_in</i></td>
        <td>Движение между двумя прикосновениями в <i>любой точке</i> комнаты было зафиксировано как внутреннее</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_pinch_out</i></td>
        <td>Движение между двумя прикосновениями в <i>любой точке</i> комнаты было зафиксировано как движение наружу</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_pinch_end</i></td>
        <td>В <i>любой точке</i> помещения обнаружено отпускание одного (или обоих) прикосновений для защемления</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_rotate_start</i></td>
        <td>Движение между двумя прикосновениями в <i>любой точке</i> комнаты было зарегистрировано как вращение</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_rotating</i></td>
        <td>Движение между двумя прикосновениями в <i>любой точке</i> комнаты было зафиксировано как вращательное</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_rotate_end</i></td>
        <td>В <i>любой точке</i> помещения обнаружено отпускание одного (или обоих) прикосновений для поворота</td>
      </tr>
      <tr>
        <td><b>ev_collision</b></td>
        <td>Столкновение с объектом</td>
      </tr>
      <tr>
        <td><i>   ---- Индекс объекта для проверки.</i></td>
        <td>например, объект1.</td>
      </tr>
      <tr>
        <td><b>ev_other</b></td>
        <td>Одно из действий, перечисленных в разделе "Другое</td>
      </tr>
      <tr>
        <td><i>   ---- ev_outside</i></td>
        <td>Находится ли экземпляр за пределами помещения</td>
      </tr>
      <tr>
        <td><i>   ---- ev_boundary</i></td>
        <td>Пересекается ли экземпляр с границей</td>
      </tr>
      <tr>
        <td><i>   ---- ev_game_start</i></td>
        <td>Срабатывает только в начале игры</td>
      </tr>
      <tr>
        <td><i>   ---- ev_game_end</i></td>
        <td>Срабатывает только в конце игры</td>
      </tr>
      <tr>
        <td><i>   ---- ev_room_start</i></td>
        <td>Срабатывает только в начале комнаты</td>
      </tr>
      <tr>
        <td><i>   ---- ev_room_end</i></td>
        <td>Срабатывает только в конце комнаты</td>
      </tr>
      <tr>
        <td><i>   ---- ev_no_more_lives</i></td>
        <td>Если все жизни исчерпаны (если lives==0)</td>
      </tr>
      <tr>
        <td><i>   ---- ev_no_more_health</i></td>
        <td>Если все здоровье исчерпано (если здоровье==0)</td>
      </tr>
      <tr>
        <td><i>   ---- ev_animation_end</i></td>
        <td>Если спрайт объекта достиг конца своей анимации</td>
      </tr>
      <tr>
        <td><i>   ---- ev_end_of_path</i></td>
        <td>Если объект достиг конца пути, по которому он следует</td>
      </tr>
      <tr>
        <td><i>   ---- ev_close_button</i></td>
        <td>Если кнопка закрытия окна была нажата</td>
      </tr>
      <tr>
        <td><i>   ---- ev_user0... ev_user15</i></td>
        <td>Одно из 16 доступных пользовательских событий.</td>
      </tr>
      <tr>
        <td><b>ev_draw</b></td>
        <td>Событие рисования. <i><b>ПРИМЕЧАНИЕ: </b></i>Это событие не может быть принудительным вне события Draw, а константы и константы предназначены только для идентификации события при выполнении в этих случаях.</td>
      </tr>
      <tr>
        <td><i>   ---- ev_draw_begin</i></td>
        <td>Событие начала жеребьевки.</td>
      </tr>
      <tr>
        <td><i>   ---- ev_draw_end</i></td>
        <td>Событие окончания розыгрыша.</td>
      </tr>
      <tr>
        <td><i>   ---- ev_draw_pre</i></td>
        <td>Мероприятие перед жеребьевкой.</td>
      </tr>
      <tr>
        <td><i>   ---- ev_draw_post</i></td>
        <td>Событие после жеребьевки.</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gui</i></td>
        <td>Событие рисования.</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gui_begin</i></td>
        <td>Событие начала рисования.</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gui_end</i></td>
        <td>Событие окончания рисования.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Синтаксис:</h4>
  <p class="code">event_perform(type, numb);</p>
  <table>
    <tbody>
      <tr>
        <th>Аргумент</th>
        <th>Описание</th>
      </tr>
      <tr>
        <td>тип</td>
        <td>Тип события, которое необходимо выполнить. См. ниже.</td>
      </tr>
      <tr>
        <td>numb</td>
        <td>Константа или значение конкретного события, если оно необходимо (в противном случае просто используйте 0).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Возвращается:</h4>
  <p class="code">Н/Д</p>
  <p> </p>
  <h4>Расширенный пример</h4>
  <p><br> Чтобы понять, как можно использовать эту функцию, пожалуйста, рассмотрите несколько следующих примеров:</p>
  <p class="code">event_perform(ev_keypress, ord(&quot;W&quot;));</p>
  <p>Это приведет к выполнению события, связанного с проверкой клавиатуры Нажата клавиша &quot;W&quot; (без фактического создания нажатия на клавиатуру).</p>
  <p class="code">event_perform(ev_step, ev_step_begin);</p>
  <p>Это выполнит событие <i>Begin Step</i> (если его вызвать из любого события шага, то код события begin step будет выполнен дважды).</p>
  <p class="code">event_perform(ev_create, 0);</p>
  <p>Это приведет к выполнению <i><i> события</i>Create<i> экземпляра</i></i>.
  </p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="Generating_Object_Events.htm">Генерирование событий объекта</a></div>
        <div style="float:right">Далее: <a href="event_perform_object.htm">event_perform_object</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
event_perform
ev_create
ev_destroy
ev_step
ev_alarm
ev_keyboard
ev_mouse
ev_collision
ev_other
ev_draw
ev_draw_begin
ev_draw_end
ev_draw_post
ev_draw_pre
ev_gui
ev_gui_begin
ev_gui_end
ev_keypress
ev_keyrelease
ev_trigger
ev_left_button
ev_right_button
ev_middle_button
ev_no_button
ev_left_press
ev_right_press
ev_middle_press
ev_left_release
ev_right_release
ev_middle_release
ev_mouse_enter
ev_mouse_leave
ev_mouse_wheel_up
ev_mouse_wheel_down
ev_global_left_button
ev_global_right_button
ev_global_middle_button
ev_global_left_press
ev_global_right_press
ev_global_middle_press
ev_global_left_release
ev_global_right_release
ev_global_middle_release
ev_outside
ev_boundary
ev_game_start
ev_cleanup
ev_game_end
ev_room_start
ev_room_end
ev_no_more_lives
ev_no_more_health
ev_animation_end
ev_end_of_path
ev_close_button
ev_user0
ev_user1
ev_user2
ev_user3
ev_user4
ev_user5
ev_user6
ev_user7
ev_user8
ev_user9
ev_user10
ev_user11
ev_user12
ev_user13
ev_user14
ev_user15
ev_step_normal
ev_step_begin
ev_step_end
ev_gesture
ev_gesture_tap
ev_gesture_double_tap
ev_gesture_drag_start
ev_gesture_drag_end
ev_gesture_dragging
ev_gesture_flick
ev_gesture_pinch_start
ev_gesture_pinch_in
ev_gesture_pinch_out
ev_gesture_pinch_end
ev_gesture_rotate_start
ev_gesture_rotating
ev_gesture_rotate_end
ev_global_gesture_tap
ev_global_gesture_double_tap
ev_global_gesture_drag_start
ev_global_gesture_drag_end
ev_global_gesture_dragging
ev_global_gesture_flick
ev_global_gesture_pinch_start
ev_global_gesture_pinch_in
ev_global_gesture_pinch_out
ev_global_gesture_pinch_end
ev_global_gesture_rotate_start
ev_global_gesture_rotating
ev_global_gesture_rotate_end
-->
  <!-- TAGS
event_perform
-->
</body>
</html>