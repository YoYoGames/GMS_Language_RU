<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Последовательности</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different functions and variables associated with Sequences" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Sequences" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Последовательности</h1>
  <p>Последовательности обычно создаются в IDE с помощью <a href="../../../../The_Asset_Editors/Sequences.htm">редактора последовательностей</a>, но их также можно создавать и редактировать с помощью кода. Однако, прежде чем рассматривать доступные функции, важно
    понять, как последовательности определяются в <span class="notranslate">GameMaker</span> и какие термины будут использоваться.</p>
  <p>Для начала, на верхнем уровне, у вас есть <b>элемент последовательности</b>. Это то, что вы помещаете на слой в комнате, либо через редактор комнат, либо в коде, используя соответствующие <a href="../Rooms/Sequence_Layers/Sequence_Layers.htm">функции слоя</a>.
    Элемент слоя не имеет реальных свойств, кроме значения ID элемента, но этот ID необходим для использования вышеупомянутых функций слоя для изменения воспроизведения последовательности или для доступа к данным последовательности.</p>
  <p>Далее у вас есть <b>объекты последовательности</b> и <b>экземпляры последовательности</b>, так же как и общие объекты и экземпляры. <i>Объект</i> последовательности - это базовый ресурс, созданный в <b>браузере активов</b> или с помощью функции <a href="sequence_create.htm"><tt>sequence_create()</tt></a>,
    а <i>экземпляр</i> последовательности - это &quot;копия&quot; этого объекта последовательности, которая была помещена в комнату в качестве элемента на слое. Считайте объекты последовательности чертежами, а экземпляры последовательности - созданием на основе этих чертежей. Последовательность
    объекты и экземпляры являются <a href="../../../GML_Overview/Structs.htm">структурами</a>, и - в отличие от обычных объектов - структура объекта последовательности может быть отредактирована во <span class="notranslate">время выполнения</span>, что повлияет на все последующие экземпляры этой последовательности, когда вы создаете их как элементы.
    (и любое редактирование объекта последовательности <b>не</b> будет сброшено при перезапуске игры или комнаты с помощью функций <tt>room_restart()</tt> или <tt>game_restart()</tt> ). Структура экземпляра последовательности содержит несколько параметров для управления воспроизведением
    (подробнее об этом будет рассказано ниже), а также структуру <b>данных последовательности</b>.</p>
  <p>Наконец, как упоминалось выше, у вас есть <b>данные последовательности</b>, которые представляют собой еще одну структуру. Эта структура содержит <i>все</i> данные о последовательности. Треки, которые она содержит, свойства, которыми обладают эти треки, скорость воспроизведения и многое другое. Точные
    подробности содержимого этой структуры описаны ниже, но в основном она состоит из структур <b>дорожек активов</b> и структур <b>дорожек параметров</b>, которые используют <b>данные<span class="notranslate">ключевых кадров</span></b> для выполнения действий во время воспроизведения последовательности.</p>
  <p>Для работы с элементами последовательности используются <a href="../Rooms/Sequence_Layers/Sequence_Layers.htm">функции слоя</a> помещения, а для объектов последовательности, экземпляров и данных у нас есть следующие функции:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="sequence_exists.htm">последовательность_существует</a></li>
    <li><a href="sequence_create.htm">последовательность_создать</a></li>
    <li><a href="sequence_destroy.htm">уничтожение последовательности</a></li>
    <li><a href="sequence_get.htm">последовательность_get</a></li>
    <li><a href="sequence_track_new.htm">sequence_track_new</a></li>
    <li><a href="sequence_keyframe_new.htm">sequence_keyframe_new</a></li>
    <li><a href="sequence_keyframedata_new.htm">sequence_keyframedata_new</a></li>
    <li><a href="sequence_get_objects.htm">sequence_get_objects</a></li>
    <li><a href="sequence_instance_override_object.htm">sequence_instance_override_object</a></li>
  </ul>
  <p> </p>
  <p>Существует также <strong>встроенная переменная</strong>, связанная с экземплярами, которая может быть использована для определения того, был ли экземпляр использован в последовательности или нет:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="in_sequence.htm">в_последовательности</a></li>
  </ul>
  <p class="note"><strong>ВАЖНО!</strong> Если в вашей последовательности есть экземпляры, эти экземпляры не должны менять свои <span class="inline"><span style="font-size:14px;">image_xscale</span> / <span class="inline"><span style="font-size:14px;">image_yscale</span> /.
    <span class="inline"><span style="font-size:14px;">угол изображения</span></span> / <span class="inline"><span style="font-size:14px;">x</span> / <span class="inline"><span style="font-size:14px;">y</span> переменные, так как они будут перезаписаны, когда последовательность
      обновляет каждый шаг после начала воспроизведения.</p>
  <p> </p>
  <p>Прежде чем использовать эти функции для создания или редактирования последовательностей, мы рекомендуем вам прочитать подробные описания свойств структур, приведенные ниже. Общий обзор того, как создать новую последовательность, выглядит следующим образом:</p>
  <ul class="colour">
    <li>Создайте новый объект последовательности с помощью функции <a href="sequence_create.htm"><tt>seqeunce_create()</tt></a> и сохраните индекс объекта последовательности в переменной. Этот индекс дает вам доступ к структуре объекта последовательности.</li>
  </ul>
  <p class="code">myseq = sequence_create();</p>
  <ul class="colour">
    <li>Установите значения верхнего уровня объекта последовательности, такие как длина, режим воспроизведения, скорость воспроизведения и т.д.. Например:</li>
  </ul>
  <p class="code">myseq.length = 120;<br> myseq.loopmode = seqplay_pingpong</p>
  <ul class="colour">
    <li>Прежде чем добавлять дорожки в объект последовательности, их нужно создать, поэтому сейчас вы создадите массив дорожек <i>активов</i>, которые были определены с помощью функции <a href="sequence_track_new.htm"><tt>sequence_track_new()</tt></a>. Обратите внимание, что
      в коде нет разницы между дорожками активов и дорожками параметров - все они просто дорожки, и их поведение зависит от типа созданной дорожки и от того, назначены ли они как поддорожки дорожки верхнего уровня или нет.
      Так, вы создадите дорожку для актива, а затем назначите ей поддорожки для различных параметров, и эти поддорожки будут действовать как дорожки <i>параметров</i> для актива. В приведенном ниже примере создается одна дорожка для графического актива, который будет
      будет добавлена в последовательность позже:</li>
  </ul>
  <p class="code">var mytracks = array_create(1);<br> mytracks[0] = sequence_track_new(seqtracktype_graphic);</p>
  <ul class="colour">
    <li>Каждая дорожка актива должна иметь некоторые данные, чтобы сообщить последовательности, как она будет выглядеть, или ее положение, и т.д... и это добавляется в форме <i><span class="notranslate">ключевые кадры</span></i>. На верхнем уровне для дорожки актива можно установить <span class="notranslate">ключевые кадры</span> для различных вещей (перечислены в
      но обратите внимание, что поскольку это <span class="notranslate">ключевые кадры</span> трека актива, они не будут интерполированы и просто изменят значение, на которое они ссылаются, когда будет достигнут данный кадр. Каждый <span class="notranslate">ключевой кадр</span> представляет собой struct, который добавляется в массив,
      а затем этот массив присваивается дорожке актива. Чтобы создать структуру <span class="notranslate">ключевого кадра</span>, мы вызываем функцию <a href="sequence_keyframe_new.htm"><tt>sequence_keyframe_new()</tt></a> а чтобы заполнить <span class="notranslate">ключевой кадр</span> необходимыми данными, мы используем функцию
      функция <a href="sequence_keyframedata_new.htm"><tt>sequence_keyframedata_new()</tt></a>:</li>
  </ul>
  <p class="code">// Создаем новую структуру <span class="notranslate">ключевого кадра</span> для дорожки графического актива и добавляем ее в массив (так как в кадре может быть несколько ключей)<br> var graphickeys = array_create(1);<br> graphickeys[0] = sequence_keyframe_new(seqtracktype_graphic);<br> // Задаем графику.
   <span class="notranslate">keyframe</span> данные верхнего уровня для позиции и длины <span class="notranslate">ключевого кадра</span> и т.д...<br> graphickeys[0].frame = 0;<br> graphickeys[0].length = 1;<br> graphickeys[0].stretch = true;<br> graphickeys[0].disabled = false;<br> // Создаем данные канала, которые будут
    идти в этот <span class="notranslate">ключевой кадр</span> (снова массив, так как каждая клавиша может иметь несколько каналов данных <span class="notranslate">ключевого кадра</span> )<br> var graphickeydata = array_create(1);<br> graphickeydata[0] = sequence_keyframedata_new(seqtracktype_graphic);<br> graphickeydata[0].spriteIndex
    = spr_Platform;<br> graphickeydata[0].channel = 0;<br> // Добавляем каналы данных <span class="notranslate">ключевых кадров</span> к <span class="notranslate">ключевым кадрам</span>графического трека<br> graphickeys[0].channels = graphickeydata;<br> // Добавляем определенные <span class="notranslate">ключевые кадры</span> к треку<br> mytracks[0].name = &quot;TestGraphicTrack&quot;;<br> mytracks[0]. keyframes<span class="notranslate">= graphickeys</span>;</p>
  <ul class="colour">
    <li>Теперь нам нужно создать дорожку параметров, которую мы назначим в качестве поддорожки к только что созданной дорожке графики. Это будет сделано аналогично тому, как показано выше, только теперь нам нужно дать дорожке имя, показывающее ее назначение, в данном случае
      &quot;position&quot;, так как мы будем использовать эту дорожку для перемещения дорожки графики по кадрам анимации последовательности:</li>
  </ul>
  <p class="code">// Создаем новую структуру дорожки параметров для позиции графики<br> var paramtracks = array_create(1);<br> paramtracks[0] = sequence_track_new(seqtracktype_real);<br> paramtracks[0].name = &quot;position&quot;;<br> paramtracks[0].interpolation
    = true;<br> // Создаем структуру <span class="notranslate">ключевых кадров</span> для хранения данных канала параметров и задаем позицию кадра для <span class="notranslate">ключевого кадра</span><br> var paramkeys = array_create(2);<br> paramkeys[0] = sequence_keyframe_new(seqtracktype_real);<br> paramkeys[0].frame =
    0;<br> paramkeys[1] = sequence_keyframe_new(seqtracktype_real);<br> paramkeys[1].frame = 120;<br> // Создание структур данных <span class="notranslate">ключевых кадров</span><br> var paramkeydata1 = array_create(2);<br> paramkeydata1[0] = sequence_keyframedata_new(seqtracktype_real);<br> paramkeydata1[0].channel = 0; // Канал 0 для позиционного трека - это позиция X<br> paramkeydata1[0].value = 0;<br> paramkeydata1[1] = sequence_keyframedata_new(seqtracktype_real);<br> paramkeydata1[1].channel = 1; // Канал 1 для позиции
    трек - это позиция Y<br> paramkeydata1[1].value = 0;<br> var paramkeydata2 = array_create(2);<br> paramkeydata2[0] = sequence_keyframedata_new(seqtracktype_real);<br> paramkeydata2[0].channel = 0;<br> paramkeydata2[0].value = room_width;<br> paramkeydata2[1] = sequence_keyframedata_new(seqtracktype_real);<br> paramkeydata2[1].channel = 1;<br> paramkeydata2[1].value = room_height;<br> // Назначаем структуры данных <span class="notranslate">ключевых кадров</span> каналам для каждой клавиши<br> paramkeys[0].channels = paramkeydata1;<br> paramkeys[1].channels = paramkeydata2;<br> // Назначаем клавиши дорожке параметров<br> paramtracks[0].<span class="notranslate">keyframes</span> = paramkeys;</p>
  <ul class="colour">
    <li>После этого остается назначить дорожку параметров в качестве поддорожки к нашей основной дорожке графических активов, которую мы создали в начале, а затем назначить эти дорожки последовательности, которую мы можем создать в комнате:</li>
  </ul>
  <p class="code">mytracks[0].tracks = paramtracks;<br> myseq.tracks = mytracks;<br> layer_sequence_create(&quot;Assets_1&quot;, 0, 0, myseq);</p>
  <p>Приведенные выше инструкции создают очень простой объект последовательности, который рисует спрайт в позиции (0, 0) <i>последовательности</i>, а затем перемещает его в правый нижний угол и обратно в цикле. Как уже упоминалось, существует ряд мест, где вам необходимо
    обращаться к различным структурам, чтобы получить или передать данные о последовательности, и в следующих разделах перечислены все различные свойства, которые содержат эти структуры:</p>
  <ul class="colour">
    <li><a name="object"></a><a href="Sequence_Structs/The_Sequence_Object_Struct.htm"><label for="1">Структура объекта последовательности</label></a></li>
    <li><a name="instance"></a><a href="Sequence_Structs/The_Sequence_Instance_Struct.htm"><label for="2">Структура экземпляра последовательности</label></a></li>
    <li><a name="track"></a><a href="Sequence_Structs/The_Track_Struct.htm"><label for="3">Структура трека</label></a></li>
    <li><a name="keyframe"></a><a href="Sequence_Structs/The_Keyframe_Struct.htm"><label for="4">Структура <span class="notranslate">ключевого кадра</span> </label></a></li>
    <li><a name="keyframe_data"></a><a href="Sequence_Structs/The_Keyframe_Data_Struct.htm"><label for="5">Структура данных <span class="notranslate">ключевого кадра</span> </label></a></li>
  </ul>
  <p> </p>
  <p>Наконец, в последовательности можно добавить код, который может быть запущен как <strong>событие</strong> в <strong>момент</strong> или как <strong>широковещательное сообщение</strong>. Это подробно описано на следующей странице:</p>
  <ul class="colour">
    <li><a href="Sequence_Events_Moments_Broadcast.htm">События, моменты и широковещательные сообщения</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="../Asset_Management.htm">Управление активами</a></div>
        <div style="float:right">Следующий: <a href="../Fonts/Fonts.htm">Шрифты</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
Sequences
-->
  <!-- TAGS
sequence_functions
-->
</body>
</html>