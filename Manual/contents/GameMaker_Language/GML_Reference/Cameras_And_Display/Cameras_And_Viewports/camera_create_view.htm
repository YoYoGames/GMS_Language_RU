<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>камера_создания_вида</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for camera_create_view" />
  <meta name="rh-index-keywords" content="camera_create_view" />
  <meta name="search-keywords" content="camera_create_view" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>камера_создания_вида</h1>
  <p>Эта функция создаст новую камеру, затем установит ее вид в комнату, после чего вернет уникальное значение ID для идентификации камеры в последующих вызовах функции. Камера будет создана с использованием значений, которые вы зададите в этой функции для положения, размера
    и других деталей, которые соотносятся со значениями, установленными в редакторе комнат (см. <a href="../../../../The_Asset_Editors/Rooms.htm">здесь</a>). Обратите внимание, что эта функция может принимать <i>переменное количество аргументов</i>, при этом обязательными являются только аргументы x/y позиция и ширина/высота.
    являются обязательными. Любые не указанные аргументы будут использоваться по умолчанию.</p>
  <p>Обратите внимание, что камеры, как и все динамические ресурсы, занимают память при создании. Это означает, что вам нужно следить за тем, чтобы не создавать камеры без необходимости и уничтожать те, которые вам не нужны, вызывая функцию <a href="camera_destroy.htm"><tt>camera_destroy()</tt></a>.
    Это также означает, что камеры будут сохраняться от комнаты к комнате, если они назначены <tt>глобальной</tt> переменной (они будут сохраняться и при назначении экземпляру или локальным переменным, но вы не сможете получить к ним доступ после смены комнаты, отсюда и утечка памяти), поэтому
    что вы можете, например, создать новую камеру, присвоить ее глобальной переменной, а затем в начале каждой комнаты использовать функции <tt>camera_set_*</tt> для установки свойств перед присвоением ее порту просмотра.</p>
  <p> </p>
  <h4>Синтаксис:</h4>
  <p class="code">camera_create_view(room_x, room_y, width, height, [angle, object, x_speed, y_speed, x_border, y_border])</p>
  <table>
    <tbody>
      <tr>
        <th>Аргумент</th>
        <th>Описание</th>
      </tr>
      <tr>
        <td>комната_x</td>
        <td>Положение x (в пределах комнаты) левой стороны области, которую захватывает вид камеры.</td>
      </tr>
      <tr>
        <td>номер_y</td>
        <td>Положение по оси y (в пределах помещения) верхней части области, которую захватывает вид камеры.</td>
      </tr>
      <tr>
        <td>ширина</td>
        <td>Ширина области, которую захватывает представление.</td>
      </tr>
      <tr>
        <td>высота</td>
        <td>Высота области, которую захватывает вид.</td>
      </tr>
      <tr>
        <td>угол</td>
        <td>Угол для установки вида камеры (от 0° до 360°, по умолчанию 0).</td>
      </tr>
      <tr>
        <td>объект</td>
        <td>ID объекта (или ID экземпляра) для вида камеры, за которым нужно следить (по умолчанию -1, нет объекта).</td>
      </tr>
      <tr>
        <td>x_speed</td>
        <td>Максимальная горизонтальная скорость, с которой может двигаться вид (для &quot;мгновенного&quot; следования установлено значение -1, по умолчанию -1).</td>
      </tr>
      <tr>
        <td>y_speed</td>
        <td>Максимальная вертикальная скорость, с которой может двигаться вид (для &quot;мгновенного&quot; следования установлено значение -1, по умолчанию -1).</td>
      </tr>
      <tr>
        <td>x_border</td>
        <td>Минимальное горизонтальное пространство между краем области просмотра и экземпляром, за которым он должен следовать (до того, как вид начнет двигаться, и если он настроен следовать за экземпляром, по умолчанию 0).</td>
      </tr>
      <tr>
        <td>y_border</td>
        <td>Минимальное вертикальное пространство между краем области просмотра и экземпляром, за которым он должен следовать (до того, как вид начнет двигаться, и если он настроен следовать за экземпляром, по умолчанию 0).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Возвращается:</h4>
  <p class="code">Real (уникальное значение идентификатора камеры)</p>
  <p> </p>
  <h4>Пример:</h4>
  <p class="code">camera_destroy(view_camera[0]);<br> view_camera[0] = camera_create_view(0, 0, 640, 480, 0, obj_Player, 5, 5, -1, -1);</p>
  <p>Приведенный выше код удаляет текущую камеру, назначенную на viewport[0], а затем создает новую камеру, определяет ее свойства вида и затем назначает ее на viewport[0].</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="Cameras_And_View_Ports.htm">Камеры и порты для просмотра</a></div>
        <div style="float:right">Далее: <a href="camera_destroy.htm">camera_destroy</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
camera_create_view
-->
  <!-- TAGS
camera_create_view
-->
</body>
</html>