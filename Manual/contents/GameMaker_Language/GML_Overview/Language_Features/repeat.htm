<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>повторить</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the repeat function" />
  <meta name="rh-index-keywords" content="repeat" />
  <meta name="search-keywords" content="if,else,then,?,ternary,conditional" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>повторить</h1>
  <p>В <span class="notranslate">языке GameMaker</span> есть несколько способов выполнения <i>циклов</i>, т.е. чтобы оператор или операторы повторяли друг друга определенное количество раз. Самым простым из них является оператор <tt>repeat</tt>, который имеет вид:</p>
  <p class="code">repeat (&lt;выражение&gt;)<br> {<br> &lt;выражение&gt;;<br> &lt;выражение&gt;;<br>...<br> }</p>
  <p>При использовании функции <tt>repeat</tt> данное <a class="glossterm" data-glossterm="заявление" href="#">утверждение</a> повторяется столько раз, сколько указано в округленном значении <a class="glossterm" data-glossterm="выражение" href="#">выражения</a>. Для
    Например, следующее выражение создает пять шариков в случайных позициях:</p>
  <p class="code">повторить (5)<br> {
    <br> instance_create_layer(random(400), random(400), &quot;Instances&quot;, obj_ball);<br> }
  </p>
  <p>Это может быть очень полезно, чтобы не набирать один и тот же код несколько раз, или для использования массивов, или для подсчета количества операций и т.д.. Вы также не ограничены использованием одного оператора, и можете повторять несколько операторов, заключив
    их в фигурные скобки <tt>{}</tt>. Например:</p>
  <p class="code">var _x = 32;<br> repeat (global.p_lives)<br> {<br> draw_sprite(spr_heart, 0, _x, 32);<br> _x += sprite_get_width(spr_heart);<br> }</p>
  <p>Приведенный выше пример повторяет утверждения в фигурных скобках столько <a class="glossterm" data-glossterm="итерация" href="#">итераций, сколько итераций</a>имеет глобальная переменная &quot;lives&quot;, и каждая итерация рисует
    спрайт сердца в позиции <span class="inline">_x</span>, а затем перемещает позицию на бит в зависимости от ширины спрайта сердца.</p>
  <p><strong>Когда следует использовать цикл <span class="inline">repeat</span>?</strong> В любое время, когда вы хотите повторить одно или несколько утверждений фиксированное количество раз без необходимости вести подсчет итераций.</p>
  <p>Стоит отметить, что вы можете использовать специальные утверждения <span class="inline"><a href="break.htm">break</a></span> и <span class="inline"><a href="continue.htm">continue</a></span> в пределах
    <font face="Lucida Console"><span style="font-size: 16px;"><b>повторить</b></span></font> цикла. Использование <span class="inline">break</span> приведет к немедленному выходу из цикла и переходу к любому коду, который находится в событии или функции после того, как цикл должен был завершиться, например</p>
  <p class="code">var i = 0;<br> var temp = 0;<br> repeat (10)<br> {<br> temp += array[i];<br> if (temp &gt; max_total)<br> {<br> break;<br> } <br> else<br> {<br> i += 1;<br> } <br> }</p>
  <p>В приведенном выше коде в цикле просматриваются 10 значений <a href="../Arrays.htm">массива</a> и добавляются в локальную переменную. Если сумма локальной переменной больше заданного значения для <span class="inline">max_total</span>, то цикл завершается с помощью функции
    break, в противном случае цикл будет продолжен. </p>
  <p>Примером использования <span class="inline">continue</span> в цикле <span class="inline">repeat</span> может быть:</p>
  <p class="code">repeat(10)<br> { <br> var _x = random(room_width);<br> var _y = random(room_height);<br> if (instance_position(_x, y, obj_Enemy)<br> {
    <br> continue;
    <br> }
    <br> instance_create_layer(_x, _y, &quot;Instances&quot;, obj_Enemy);<br> }</p>
  <p>Этот код повторится 10 раз, генерируя случайную позицию комнаты и проверяя, существует ли экземпляр объекта <span class="inline">obj_Enemy</span> в этой позиции. Если да, то текущая итерация цикла завершается с помощью <span class="inline">continue</span> и начинается новая итерация, а если нет, то в случайной позиции создается экземпляр объекта <span class="inline">obj_Enemy</span>.</p>
  <p>Другие примеры функций цикла см. в разделах <a href="while.htm"><tt>while</tt></a>, <a href="do___until.htm"><tt>do ... until</tt></a>, и <a href="for.htm"><tt>для</tt></a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="../Language_Features.htm">Особенности языка</a></div>
        <div style="float:right">Далее: <a href="while.htm">while</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
repeat
-->
  <!-- TAGS
repeat
-->

</body></html>