<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>для</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the for function" />
  <meta name="rh-index-keywords" content="for" />
  <meta name="search-keywords" content="for" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>для</h1>
  <p>Одним из наиболее часто используемых способов многократного повторения <a class="glossterm" data-glossterm="заявление" href="#">оператора</a> (или операторов) является цикл <tt>for</tt>, который имеет следующий вид:</p>
  <p class="code">for (&lt;назначение&gt;; &lt;выражение&gt;; &lt;операция&gt;;)<br> {<br> &lt;задание&gt;;<br> &lt;задание&gt;;<br>...<br> }</p>
  <p>Это работает следующим образом - сначала выполняется присвоение, которое присваивает значение переменной, затем оценивается <a class="glossterm" data-glossterm="выражение" href="#">выражение</a> и, если оно <tt>истинно</tt>, выполняются утверждения в фигурных скобках{}
    выполняются. Далее выполняется операция над присвоенной переменной, а затем выражение оценивается снова. Этот цикл будет продолжаться до тех пор, пока выражение не окажется <tt>ложным</tt>.</p>
  <p>В таком виде это может показаться сложным, но вы должны понимать это так:</p>
  <ol>
    <li>Первое присваивание инициализирует цикл for</li>
    <li>Выражение проверяет, следует ли завершить цикл</li>
    <li>Заявление выполняется</li>
    <li>Операция выполняется</li>
    <li>Вернитесь к шагу 2, выполните выражение еще раз и продолжите или выйдите из цикла</li>
  </ol>
  <p>Это чрезвычайно полезно для выполнения повторяющихся задач, которые в любом другом случае потребовали бы много строк кода, и обычно используется в качестве счетчика для оценки массивов, рисования, установки инкрементных значений и т.д.. Следующий пример кода иллюстрирует
    типичное использование этого типа оператора:</p>
  <p class="code">for (var i = 0; i &lt; 10; i += 1)<br> {
    <br> draw_text(32, 32 + (i * 32), string(i) + &quot;. &quot;+ string(scr[i]));<br> }
  </p>
  <p>Приведенный выше код инициализирует цикл <span class="inline">for</span>, начиная с 0 и считая до (включительно) 9, а затем использует значение цикла <tt>i</tt> для вывода на экран значений, хранящихся в массиве. Обратите внимание, как переменная цикла <tt>for</tt> 
   <tt>i</tt> используется не только для прохождения цикла по массиву, но и для рисования числа, а также для указания <span class="notranslate">GameMaker Studio 2</span>, куда рисовать значения в комнате. Такая гибкость является одной из основных причин, по которым циклы <tt>for</tt> так важны в программировании.</p>
  <p><strong>Когда следует использовать цикл <tt>for</tt></strong>? В любое время, когда вам нужно выполнить фиксированное количество итераций над одним или несколькими утверждениями, отслеживая при этом <a class="glossterm" data-glossterm="итерация" href="#">итерацию</a>, которая выполняется в данный момент, и используя значение этой итерации.
    в данный момент и использовать это значение итерации.</p>
  <p class="note"><b>ПРИМЕЧАНИЕ</b>: При работе с другими людьми вы увидите множество примеров использования переменных &quot; i&quot;<tt>и</tt>&quot; j&quot; для переменной счетчика цикла. Это <b>не</b> обязательные имена переменных, и вы можете использовать что угодно
    например, &quot; a&quot; или &quot; foo&quot; или<tt>что угодно.</tt> Использование &quot; i&quot;<tt>и</tt>&quot; j&quot; - это просто стандартное соглашение в программировании.</p>
  <p>Стоит отметить, что в цикле <span class="inline">for</span> можно использовать специальные операторы <span class="inline"><a href="break.htm">break</a></span> и <span class="inline"><a href="continue.htm">continue</a></span>. Использование <span class="inline">break</span> приведет к немедленному выходу из цикла и переходу к любому коду, который находится в событии или функции после того, как цикл должен был завершиться, например</p>
  <p class="code">var _inst = noone;<br> for (var i = 0; i &lt; 10; i += 1)<br> {
    <br> _inst = instance_find(obj_Enemy_Parent, i);<br> if instance_exists(_inst)<br> {<br> if _inst.object_index == obj_Enemy_Melee<br> {<br> break;<br> } <br> } <br> } <br> target = _inst;</p>
  <p>Приведенный выше код перебирает 10 ближайших экземпляров заданного &quot;родительского&quot; объекта, и если экземпляр найден, то проверяется ID объекта, и если это экземпляр <span class="inline">obj_Enemy_Melee</span>, то цикл завершается.
    с использованием <span class="inline">break</span> и присвоением значения ID переменной (если экземпляр не найден, то к переменной будет добавлено ключевое слово <span class="inline"><a href="../Instance_Keywords.htm">noone</a></span> ).</p>
  <p>Примером использования <span class="inline">continue</span> в цикле <span class="inline">for</span> может быть:</p>
  <p class="code">var _val = 0;<br> for (var i = 0; i &lt; 10; i += 1)<br> {
    <br> if (val_array[i] &lt;= 0)<br> {<br> continue;<br> } <br> _val += val_array[i];<br> }
    <br> draw_text(32, 32, &quot;Всего положительных значений = &quot; + string(_val));</p>
  <p>Этот код проверит значение, хранящееся в каждой позиции массива 1D длины 10, и если любое из них меньше или равно 0, он <span class="inline">continue</span> цикл, что означает завершение текущей итерации,
    <span class="inline">i</span> будет увеличено, и начнется следующая итерация цикла. Если значение больше 0, то оно прибавляется к локальной переменной <span class="inline">_val</span>, а после завершения цикла итоговое значение
    выводится на экран.</p>
  <p>Другие примеры ключевых слов цикла см. в разделах <a href="repeat.htm"><tt>повторить</tt></a>, <a href="while.htm"><tt>пока</tt></a>, и <a href="do___until.htm"><tt>do / until</tt></a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Назад: <a href="../Language_Features.htm">Особенности языка</a></div>
        <div style="float:right">Далее: <a href="switch.htm">переключатель</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Все права защищены</span></h5>
  </div>
  <!-- KEYWORDS
for
-->
  <!-- TAGS
for
-->

</body></html>