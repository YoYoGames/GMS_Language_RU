
  
  Редактирование кода
  Когда вы начинаете использовать редактор сценариев, вам нужно просто ввести код, который вы хотите иметь для актива сценария или для события, следуя правильному синтаксису GML . Пока вы это делаете,
    вам будет помогать окно автозаполнения:
  Это окно будет появляться во время написания кода (обычно после небольшой паузы, но это можно настроить в настройках).
    и предложит вам выбор "наиболее подходящих" ответов в алфавитном порядке.
  При использовании редактора кода вы можете нажать  и перетащить мышь, чтобы выбрать строку кода, или, удерживая нажатой кнопку , нажать  и перетащить мышь, чтобы выбрать столбцы кода. Все выделенное таким образом можно копировать, вырезать и вставлять , используя
    стандартные комбинации клавиш  /  + " C",  /  + "X" и  /  + "V".
  Стоит отметить, что вы можете комментировать свой код различными способами. Комментирование кода очень важно для поддержания производительности, так как оно сохраняет ясность и разделяет части кода таким образом, чтобы было очевидно, что каждая
    что делает каждая часть и зачем она нужна. Это также означает, что если вы работаете в команде, вы можете оставлять заметки для других членов, и они будут точно знать, что вы сделали или для чего предназначен тот или иной участок кода. Даже если вы работаете в одиночку,
    оставлять комментарии в коде очень важно, особенно если вам придется оставить проект и вернуться к нему позже.
  Комментировать код очень просто: достаточно использовать "//" перед любой строкой текста или закомментировать целый абзац, используя "/* text here */". Есть даже две комбинации клавиш
    комбинации клавиш для комментирования и разкомментирования выделенных строк кода:  /  + "K" для комментирования и  /  +  + "K" для отмены комментирования. Следующее изображение иллюстрирует код, написанный с использованием обоих этих методов
    а также некоторые комментарии JS Doc (более подробно описано ниже):
  Сценарии также могут иметь определенные комментарии в стиле JSDoc, добавленные для определения свойств функций, которые они содержат, чтобы, когда вы используете
    функции в коде, они отображались в автозаполнении вместе с аргументами и другими деталями. Подробнее об этом вы можете узнать в разделе Комментарии сценариев JSDoc.
  По умолчанию весь написанный код будет иметь значки сворачивания кода рядом с каждым набором подходящих скобок {}. Они имеют вид маленьких значков плюс + или минус -, нажатие на которые "сворачивает" код в соответствующие скобки так, чтобы он занимал меньше места.
  Вы также можете вручную задать области сворачивания кода, используя специальные теги #region для пометки участка кода. Это работает следующим образом: вы добавляете тег #region (вместе с любым текстом комментария) в верхнюю часть
    раздела кода, а затем добавляете соответствующий тег #endregion в нижнюю часть раздела, после чего вы можете "свернуть" код, т.е. скрыть его, чтобы сократить количество строк кода, видимых в редакторе.
    в любой момент времени:
  Фактический код выглядит примерно так:
  #region Это пример региона
     width = sprite_get_width(sprite); height = sprite_get_height(sprite); xoff = sprite_get_xoffset(sprite); yoff = sprite_get_yoffset(sprite);
     #endregion Дальнейшие комментарии здесь, если необходимо.
  Как вы могли заметить, части текста сценария окрашены. Редактор скриптов "знает" о существующих объектах, встроенных переменных и функциях и т.д... и окрашивает их соответствующим цветом. Цветовое кодирование очень помогает избежать ошибок
    поскольку сразу видно, если вы неправильно написали какое-то имя, или использовали ключевое слово в качестве переменной, или допустили синтаксическую ошибку. Однако если вам не нравится цветовое кодирование, в настройках вы можете включить или выключить его (вы также можете использовать F10, чтобы включить или выключить его в редакторе), а также настроить используемые цвета.
  Вы также можете щелкнуть правой кнопкой мыши  в любом месте редактора, чтобы открыть следующее меню:
  Помимо обычных функций вырезания, копирования и вставки строк кода у вас также есть возможность комментировать или не комментировать
    выделенный текст, добавить или удалить отступы, а также разделить окно кода на 1, 2 или 3 отдельные панели (обратите внимание, что опции, относящиеся к #regions, будут недоступны, если вы не определили их в редактируемом коде).
  Последняя опция для разделения на панели разделит фактическое окно на различные части, куда вы можете перетащить сценарий или событие и показать его рядом с другими для сравнения и редактирования.
  Это исключительно полезно для сравнения двух сценариев или для одновременного просмотра связанных сценариев, без необходимости использования другого окна
    или постоянного переключения между вкладками.
  Другие опции этого меню - переключение точки останова для использования в отладчике, а также преобразование кода GML в DnD™или наоборот. Обратите внимание, что при преобразовании кода в DnD™ не будут создаваться
    отдельные действия для каждой строки кода, а использует одно действие кода для хранения всего, что было ранее в событии или сценарии.
   
   
   
  
    
      
        Назад: Редактор сценариев
        Следующий: Комментарии JSDoc
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

