
  
  Работа в сети
  
  Событие Networking - это событие, которое будет вызвано любым входящим сетевым трафиком и связано с функциями Network Functions. Это событие генерирует специальную карту DS Map, которая
    является эксклюзивной для этого события и хранится в специальной переменной async_load. Эта карта DS будет содержать различную информацию в зависимости от типа
    сетевого события, которое ее породило.
   
  Общие сетевые мероприятия
  Следующие ключи являются общими для всех принимаемых сетевых функций и всегда будут присутствовать в карте async_load:
  
    " тип": В качестве возвращаемого значения имеет одну из констант, перечисленных в таблице ниже, и обозначает тип сетевого события.
    " id": Идентификатор сокета (реальное число, возвращаемое функцией network_create_server или network_create_socket), который принимает событие. В большинстве случаев возвращаемый идентификатор сокета - это идентификатор TCP или UDP сокета, который вызвал событие, однако если событие вызвано на сервере или в функции network_reate_server или network_reate_socket.
      событие, однако если событие произошло на сервере и является событием данных (см. ниже), то идентификатором сокета является идентификатор клиента, отправившего данные.
    " ip": IP-адрес сокета (в виде строки).
    " порт": Порт, связанный с IP-адресом (полезно при работе с UDP).
  
  Возможными возвращаемыми значениями для ключа "type" могут быть любые из четырех констант, перечисленных ниже:
  
    
      
        Постоянная
        Описание
      
      
        network_type_connect
        Событие было вызвано подключением.
      
      
        network_type_disconnect
        Событие было спровоцировано отключением.
      
      
        network_type_data
        Событие было вызвано входящими данными.
      
      
        network_type_non_blocking_connect
        Событие было вызвано соединением, настроенным как неблокирующее (для этого можно использовать функцию network_set_config() для этого, или
          подключиться с помощью network_connect_async() или network_connect_async_raw()).
      
    
  
   
  Подключение/отключение
  Если у вас есть событие типа network_type_connect или network_type_disconnect, карта async_load будет иметь следующий дополнительный ключ:
  
    "socket": Этот ключ будет содержать идентификатор подключающегося/отключающегося сокета.
  
  Если событие имеет тип network_type_non_blocking_connect, то дополнительно будет присутствовать следующий ключ:
  
    "succeeded": Этот ключ будет равен 0 или 1, где 0 означает, что соединение прервалось по таймеру, а 1 означает, что соединение удалось и сокет готов к использованию.
  
  Стоит отметить, что событие Networking Event не срабатывает у клиентов при отключении сервера, и ни одно из событий network_type_* не срабатывает у клиентов при отключении сервера, к которому они подключены.
    отключается, даже если соединение основано на TCP.
   
  Получение данных
  При возникновении события типа network_type_data , которое означает, что ваша сеть получила данные, созданная карта будет иметь следующие ключи:
  
    " буфер": Это уникальный "идентификатор буфера", который генерируется событием. Буфер типа "grow", выровненный по байтам на 1, создается для хранения этого идентификатора, который должен храниться в переменной и использоваться для всех последующих вызовов функции в этом событии.
      обращения к буферу в этом событии. Как и карта async_load, созданный буфер автоматически удаляется из памяти по завершении этого события. Более подробную информацию о буферах можно найти в разделе Справочник - Буферы.
    " size": Это размер (в байтах) буферных данных, которые принимаются.
  
  ПРИМЕЧАНИЕ: Созданный буфер действителен только в этих событиях и будет освобожден по окончании события.
   
   
   
  
    
      
        Назад: Асинхронные события
        Следующее: Push-уведомления
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

