
  
  Библиотека действий со структурой данных
  
  В играх часто требуется хранить информацию в точном и упорядоченном виде. Например, вам может понадобиться хранить списки предметов, которые несет человек, или сетку мест, которые еще нужно посетить. Теперь вы можете использовать несколько переменных
    но если вы хотите выполнить более сложные операции, такие как сортировка данных или поиск определенного элемента, вам придется писать большие куски кода блока действий, который может быть медленным в исполнении, трудным в отладке и настоящей мукой в написании!
  Для устранения этой проблемы в GameMaker Studio 2 имеется ряд встроенных структур данных, доступ к которым можно получить с помощью специальных функций. Существует четыре различных типа структур данных, доступных через функцию Drag and Drop (если вы используете функцию Drag and Drop, то их будет шесть), четыре различных типа структур данных, доступных через функции GML),
    Каждый из них имеет свои плюсы и минусы в зависимости от типа информации, которую вы хотите сохранить, и от того, как вы хотите манипулировать ею в дальнейшем - четыре типа:
  
    
      
        
        Списки
        Список - это структура данных, которая хранит информацию последовательно, по мере ее добавления. Индексы списка начинаются с 0 и увеличиваются для каждого элемента, который добавляется в конец списка, хотя вы также можете вставить данные в позицию, отличную от последней. В отличие от структуры данных Stack (описанной ниже), вы можете получить доступ к данным из любого индекса списка в любое время.
      
      
        
        Карты
        Структура данных map является исключительно полезной, поскольку она позволяет хранить ключ и значение пары. Например, персонаж вашей игры может иметь некоторое количество различных предметов (ключи), а для каждого отдельного предмета он может иметь некоторое их количество (значения), как в ролевой игре, где у вас может быть 10 зелий здоровья, 5 зелий маны и 100 золотых. Карты хранят такие пары в одном месте, и вы можете добавлять пары на карту и искать значение, соответствующее определенным ключам, используя некоторые простые функции. Карты не отсортированы каким-либо (узнаваемым) способом, что означает, что для поиска определенного ключа вам придется просмотреть все карты (что очень медленно), а также нет возможности хранить два одинаковых ключа или присваивать одному ключу два значения.
      
      
        
        Сетки
        Сетка - это двумерный массив значений, где вы определяете его ширину и высоту. Это задает общее количество "ячеек" сетки (ширина и высота перемножаются), и эти ячейки затем используются для хранения различных значений данных, которые могут быть любыми из разрешенных типов данных. Этот тип структуры позволяет задавать и извлекать значения ячеек в сетке, задавая их положение по x (столбец) и y (строка) (и строки, и столбцы начинаются с 0 и идут до ширины сетки - 1 и высоты сетки -1). При обращении к структурам данных сетки всегда старайтесь использовать целочисленные значения для позиции ячейки, все нецелые индексы будут сбрасываться программойGameMaker
          Studio 2, если вы этого не сделаете. Если это не то, что вам требуется, то вам нужно будет выполнить округление самостоятельно перед передачей индекса, который вы хотите проверить.
      
      
        
        Стеки
        Стековая структура данных - это так называемая структура "последний по порядку" (LIFO). Вы можете помещать значения в стек, а затем удалять их, вынимая из стека, причем значение, которое было помещено в стек последним, первым вынимается из стека (вспомните стопку монет, где каждая добавленная монета должна быть сначала вынута, прежде чем вы сможете добраться до остальных монет). Стеки часто используются при обработке прерываний, рекурсивных функций или даже при создании элементарного искусственного интеллекта для ваших игр.
      
    
  
   
  По сути, все структуры данных работают одинаково - вы создаете структуру данных и сохраняете значение ее индекса в переменной. Затем вы используете этот индекс для ссылки на структуру данных во всех последующих вызовах функций, которые могут выполнять операции над ней. Наконец,
    после завершения работы вы снова уничтожаете структуру данных, чтобы удалить ее из памяти. Вы можете использовать столько структур одновременно, сколько вам нужно, и все структуры могут хранить как строки, так и реальные значения.
  ПРИМЕЧАНИЕ: Как и все динамические ресурсы, структуры данных занимают память, поэтому их всегда следует уничтожать, когда они больше не нужны, чтобы предотвратить утечку памяти, которая замедлит и в конечном итоге приведет к краху вашей игры.
  Библиотека Data Structure имеет следующие действия:
   
  
    
      
        
        Создать список
      
      
        
        Создать карту
      
      
        
        Создать сетку
      
      
        
        Создать стек
      
      
        
        Очистить структуру данных
      
      
        
        Свободная структура данных
      
      
        
        Добавить в список
      
      
        
        Удалить из списка
      
      
        
        Получить элемент списка At
      
      
        
        Получить индекс элемента списка
      
      
        
        Вставка в список
      
      
        
        Получить количество элементов списка
      
      
        
        Установить значение карты
      
      
        
        Получить значение карты
      
      
        
        Удалить запись на карте
      
      
        
        Установить значение сетки
      
      
        
        Получить значение сетки
      
      
        
        Четкая сетка
      
      
        
        Перемещение в стек
      
      
        
        Поп-стек
      
      
        
        Если структура данных существует
      
      
        
        Если структура данных пуста
      
    
  
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
  
    
      
        Назад: Указатель
        Следующий: Действия с буфером
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

