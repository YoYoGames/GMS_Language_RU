
  
  Включенные файлы
  GameMaker Studio 2 не ограничивается только теми активами, которые вы создаете в программе, поскольку вы можете добавлять файлы в проект как Included Files, чтобы к ним можно было получить доступ во время работы игры. Какие файлы вы добавите, зависит
    но обычно в качестве включаемых файлов используются такие вещи, как файлы по умолчанию *.ini, спрайты и фоновые изображения, а также языковые текстовые файлы.
  Для добавления этих вещей в проект существует окно редактора, которое можно открыть из меню Asset Browser Extras :
  При выборе этого пункта откроется редактор включенных файлов:
  Чтобы добавить файл в ресурсы, достаточно воспользоваться кнопкой Open In Explorer, которая откроет проводник файлов в папке datafiles
    для вашего проекта. Затем вы можете добавлять каталоги и файлы по мере необходимости, а GameMaker Studio 2 автоматически обновит редактор включенных файлов.
  Обратите внимание, что все редактирование (переименование, организация и т.д...) должно выполняться из проводника файлов по умолчанию.
  После добавления файлов в редактор вы можете дважды щелкнуть по ним , чтобы открыть свойства файла:
  В этом окне отображается имя файла, его размер на диске, а также платформы, на которые он должен быть экспортирован при компиляции/тестировании
    вашей игры. У вас есть кнопки для выбора "Все" или "Ни одной", или вы можете двигаться вниз по списку и отмечать/отмечать те платформы, на которые вы хотите экспортировать файл, по мере необходимости.
  Более подробную информацию о том, как включаемые файлы хранятся в вашей игре и как к ним осуществляется доступ, вы найдете в разделе руководства, посвященном файловой системе.
  ВАЖНО! При включении звуковых файлов следует убедиться, что эти файлы не имеют имен, которые конфликтуют с потоковыми звуковыми активами. Например, звуковой актив под названием "main_music" и включенный файл под названием "main_music.ogg"
    будут неопределены при запуске проекта. Это происходит потому, что потоковые файлы также хранятся вне основного пакета проекта, поэтому в таких ситуациях необходимо соблюдать осторожность.
  Стоит отметить, что вы можете включить файлы DLL (в Windows) или DyLib (в macOS) в качестве включаемых файлов, а затем создать свои собственные пользовательские функции для работы с ними, используя external_define().
    Затем их можно использовать, вызывая external_call() функцию.
  ВНИМАНИЕ! Использование включаемых файлов для создания дополнительной функциональности таким способом несовместимо с системой расширений, так как вы не можете использовать external_*() функции
    с файлами, добавленными в расширении, поскольку в расширениях уже есть метод добавления констант и функций.
   
   
   
  
    
      
        Назад: Настройки игры
        Следующее: Аудиогруппы
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

