
  
  сортировка массивов
  С помощью этой функции вы можете отсортировать массив по возрастанию или по убыванию, а также используя пользовательскую функцию для определения порядка сортировки. Функция требует, чтобы вы указали массив для сортировки, а затем одно из следующих действий:
  
    Константы true или false указывают на порядок сортировки по возрастанию (true) или по убыванию (false).
    
    Пользовательская функция для определения порядка сортировки
  
  Если вы используете для сортировки пользовательскую функцию, она должна принимать 2 аргумента, которые будут получать значения текущего элемента и следующего элемента соответственно. Функция должна возвращать любое из следующих значений, чтобы повлиять на порядок сортировки (где elm1 - это
    текущий элемент, а elm2 - следующий элемент):
  
    0: если elm1 и elm2 равны
    <0 ( отрицательное число): если elm1 идет раньше elm2
    >0 ( положительное число): если elm1 идет после elm2
  
  Если массив содержит набор строк, то строки будут отсортированы в алфавитном порядке на основе английского алфавита при использовании стандартного типа сортировки по возрастанию/убыванию. Все остальные типы данных будут отсортированы на основе их числового значения, точное
    точные значения которых зависят от самого типа данных (например, массив буферов будет отсортирован по числовым значениям их адресов памяти).
  Обратите внимание, что эта функция изменит содержимое исходного массива, который был предоставлен. Чтобы создать отсортированную копию, используйте array_copy() для дублирования массива, а затем передайте его в эту функцию.
   
  Синтаксис:
  array_sort(variable, sorttype_or_function);
  
    
      
        Аргумент
        Описание
      
      
        переменная
        Переменная, в которой хранится массив.
      
      
        sorttype_or_function 
        
        Тип сортировки (true для восходящей или false для нисходящей) или ссылка на функцию, которую следует использовать для сортировки.
        
      
    
  
   
  Возвращается:
  Н/Д
   
  Пример:
  var _a = [10, 9, 8, 7, 6, 5];
     array_sort(_a, function(elm1, elm2) { return elm1 - elm2; });
  Приведенный выше код использует пользовательскую функцию сортировки для сортировки массива в порядке возрастания. Функция сортировки берет два элемента массива elm1 и elm2 и выполняет над ними вычитание. Если elm1 больше elm2,
    в результате вычитания получается положительное число, которое перемещает elm1 после elm2, тем самым располагая их в порядке возрастания.
  Вот расширенный пример:
  var _xx, _yy, _a; for (var i = 0; i < 10; i++) { _xx = irandom(room_width); _yy = irandom(room_height); _a[i] = instance_create_layer(_xx, _yy, layer, obj_Bullet); } 
     show_debug_message(_a);
    
     var _f = function(inst1, inst2) { return inst1.x - inst2.x; } 
     array_sort(_a, _f); show_debug_message(_a);
  
  Приведенный выше код создаст массив из 10 экземпляров, расположенных в случайных местах в комнате. Отладочное сообщение покажет что-то вроде следующего:
  [ 100003,100004,100005,100006,100007,100008,100009,100010,100011,100012 ]
  Затем код создает метод для использования в функции array_sort(), который возвращает разницу между каждым из X-позиций экземпляров в комнате. Затем выполняется функция array_sort() 
    запускается с использованием этого метода, сортируя экземпляры по X от наименьшего к наибольшему. Выходные данные для массива будут выглядеть следующим образом:
  [ 100011,100004,100009,100006,100012,100008,100010,100005,100007,100003 ]
   
   
   
  
    
      
        Назад: Переменные функции
        Далее: array_length
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

