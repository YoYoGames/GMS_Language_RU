
  
  gpu_set_blendmode_ext
  Когда GameMaker Studio 2 рисует пиксель, есть исходный цвет (цвет пикселя, который мы собираемся нарисовать) и конечный цвет (цвет, который уже есть в пикселе, к которому мы рисуем).
    пикселя, исходный и конечный цвета рассчитываются в соответствии с выбранным режимом наложения. Каждый компонент цветов хранится как значение с плавающей точкой между 0 и 1, а новый цвет вычисляется путем умножения каждого компонента
    исходного цвета на некоторый коэффициент и умножением каждого компонента цвета назначения на некоторый другой коэффициент, а затем суммированием результатов по компонентам.
  Эта функция позволяет установить различные компоненты, которые должны быть сложены вместе для создания пользовательского режима наложения. Источник и место назначения имеют красный, зеленый, синий и альфа компоненты, и на следующей диаграмме RGBA источника
    считаются (Rs, Gs, Bs, As), а у места назначения - (Rd, Gd, Bd, Ad). Одиннадцать констант, доступных для использования, могут быть как источником, так и получателем (или обоими) при использовании в этой функции.
  
    
      
        Постоянная
        Коэффициент смешивания (красный, зеленый, синий, альфа)
      
      
        bm_zero
        (0, 0, 0, 0)
      
      
        bm_one
        (1, 1, 1, 1)
      
      
        bm_src_colour
        (Rs, Gs, Bs, As)
      
      
        bm_inv_src_colour
        (1-Rs, 1-Gs, 1-Bs, 1-As)
      
      
        bm_src_alpha
        (As, As, As, As, As)
      
      
        bm_inv_src_alpha
        (1-Ас, 1-Ас, 1-Ас, 1-Ас, 1-Ас)
      
      
        bm_dest_alpha
        (Ad, Ad, Ad, Ad, Ad)
      
      
        bm_inv_dest_alpha
        (1-Ad, 1-Ad, 1-Ad, 1-Ad, 1-Ad)
      
      
        bm_dest_colour
        (Rd, Gd, Bd, Ad)
      
      
        bm_inv_dest_colour
        (1-Rd, 1-Gd, 1-Bd, 1-Ad)
      
      
        bm_src_alpha_sat
        (f, f, f, 1), где f = min(As, 1-Ad)
      
    
  
  ВАЖНО! HTML5 без включенного WebGL не сможет корректно отображать следующие режимы:
  
    bm_src_colour
    bm_inv_src_colour
    bm_dest_colour
    bm_inv_dest_colour
    bm_src_alpha_sat
  
   
  Обратите внимание, что вы можете передать этой функции либо два отдельных аргумента, либо массив аргументов (как возвращает функция gpu_get_blendmode_ext() например). Если вы передаете массив
    он должен содержать следующие два элемента:
  
    [0] = Режим наложения источника (по умолчанию bm_src_alpha)
    [1] = Режим наложения назначения (по умолчанию bm_inv_src_alpha)
  
  Чтобы максимально использовать режимы наложения и понять, как они работают и как влияют на конечное изображение, выводимое на экран, мы рекомендуем вам ознакомиться со следующим руководством:
  
    Руководство по использованию блендмодов
  
   
  Синтаксис:
  gpu_set_blendmode(src, dest);
  
    
      
        Аргумент
        Описание
      
      
        src
        Коэффициент режима наложения источника (см. константы выше).
      
      
        dest
        Коэффициент режима наложения назначения (см. константы выше)
      
    
  
   
  Возвращается:
  Н/Д
   
  Пример:
  gpu_set_blendmode_ext(bm_src_alpha, bm_one); draw_circle_colour(100, 100, 50, c_white, c_black, 0); gpu_set_blendmode(bm_normal);
  
  Это превратит черный цвет в прозрачный, создавая эффект "свечения": белый цвет будет сильным снаружи и постепенно ослабевать от центра круга. Режим наложения сбрасывается после рисования круга, чтобы аддитивное смешивание
    не применяется ко всему остальному после него.
   
   
   
  
    
      
        Назад: Управление графическим процессором
        Далее: gpu_set_blendmode_ext_sepalpha
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

