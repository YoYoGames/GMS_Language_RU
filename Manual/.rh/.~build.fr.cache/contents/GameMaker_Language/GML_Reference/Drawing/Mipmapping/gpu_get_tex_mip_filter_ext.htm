
  
  gpu_get_tex_mip_filter_ext
  С помощью этой функции вы можете получить текущий режим mip-фильтра для заданного шейдерного сэмплера. Вы передаете значение индекса для шейдерного сэмплера (как возвращается функцией shader_get_sampler_index(),
    и функция вернет одну из констант значения режима, перечисленных ниже.
   
  Синтаксис:
  gpu_get_tex_mip_filter_ext(sampler_index);
  
    
      
        Аргумент
        Описание
      
      
        sampler_index
        Индекс шейдерного сэмплера для получения
      
    
  
   
  Возвращается:
  Постоянные (перечислены ниже):
  
    
      
        Постоянная
        Описание
      
      
        tf_point
        Это означает, что смешивание между уровнями mipmap отключено, что может привести к заметным переходам текстуры, но дает наилучшую производительность.
      
      
        tf_linear
        Это означает, что включено смешивание между уровнями mipmap (это также известно как трилинейная фильтрация), что сглаживает переходы текстур, но это незначительно снижает производительность.
      
      
        tf_anisotropic
        Это означает, что включена анизотропная фильтрация, которая значительно улучшает качество перехода текстур и может уменьшить размытие, видимое при других режимах фильтрации, но она оказывает наибольшее влияние на производительность.
      
    
  
   
   
  Пример:
  var _sampleIndex = shader_get_sampler_index(shd_Glass, "s_Background"); var _spriteTex = sprite_get_texture(sprite_index, 0); shader_set (shd_Glass);
     if gpu_get_tex_mip_filter_ext(_sampleIndex) != tf_point {
     gpu_set_tex_mip_filter_ext(_sampleIndex, tf_point); }
     texture_set_stage(_sampleIndex , _spriteTex); shader_reset();
  
  Приведенный выше код устанавливает режим mip-фильтра в tf_point (отключение mipmapping) для данного шейдерного текстурного сэмплера, если он еще не установлен.
   
   
   
  
    
      
        Назад: Mipmapping
        Далее: gpu_get_tex_mip_bias
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

