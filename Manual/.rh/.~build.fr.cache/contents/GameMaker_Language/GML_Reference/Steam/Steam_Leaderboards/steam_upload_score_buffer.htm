
  
  steam_upload_score_buffer
  Эта функция отправит результат в заданную таблицу лидеров вместе с пакетом данных, созданным из буфера. Размер буфера не должен превышать 256 байт - все, что больше этого, будет обрезано - и может содержать любые данные, которые вам нужны. Результат
    должно быть вещественным числом, а имя таблицы лидеров - строкой, которая была определена при создании таблицы лидеров с помощью функции steam_create_leaderboard().
  В случае неудачи функция вернет значение -1, в то время как успешный пост вернет уникальный ID для загрузки и вызовет асинхронное событиеSteam Event. Это событие
    создаст DS Map во встроенной переменной async_load со следующими парами ключ/значение:
  
    " event_type" - Этот ключ будет иметь значение " leaderboard_upload", когда будет вызван этой функцией.
    " lb_name" - Этот ключ содержит название таблицы лидеров, которая была опубликована в
    "success" - Будет равно 1, если сообщение удалось, 0 - нет
    "updated" - Будет 1, если результат в таблице лидеров действительно был обновлен (т.е. новый результат был лучше) или 0 в противном случае. Обратите внимание, что если счет обновлен, данные загруженного буфера также не будут добавлены.
    " post_id" - Этот ключ должен соответствовать значению ID, возвращенному вызовом загрузки.
    " score" - Этот ключ хранит оценку, которая была опубликована
  
  Обратите внимание, что при загрузке таблицы лидеров, ключ "entries" в async_load карты теперь будет иметь ключ "data", чтобы вы могли получить
    загруженный буфер данных (подробнее см. пример расширенного кода Steam Event). Этот буфер данных будет закодирован в Base 64, поэтому вам нужно будет использовать
    функция buffer_base64_decode() для данных перед чтением из буфера.
   
  Синтаксис:
  steam_upload_score_buffer(lb_name, score, buffer);
  
    
      
        Аргумент
        Описание
      
      
        lb_name
        Имя таблицы лидеров, в которую вы загружаете результаты (строка).
      
      
        счет
        Оценка, которую нужно загрузить (реальное число).
      
      
        буфер
        Идентификатор буфера для присоединения.
      
    
  
   
  Возвращается:
  Реально
   
  Расширенный пример:
  В этом примере мы сначала загружаем результат, а затем разбираем карту async_load, возвращаемую в случае успеха. В приведенном ниже коде показан типичный пример загрузки, при этом создается буфер для хранения строки, сообщающей нам, на какой уровень был загружен результат
    from:
  if (hp <= 0) {
     var buff = buffer_create(256, buffer_fixed, 1 ); buffer_write(buff, buffer_string, "Uploaded on level " + string(global.Level)); upload_ID = steam_upload_score("Game Scores", score, buff); if
    (!upload_ID) {
     alarm[0] = room_speed; }
     buffer_delete(buff);
     }
  
  Обратите внимание, что мы установили сигнал тревоги при неудачном вызове. Это будет использоваться для повторной попытки загрузки в более позднее время, и вы можете добавить туда дополнительный код для повторной попытки загрузки или для сохранения результата в текстовый файл, если он продолжает оставаться неудачным, и т.д.. Также обратите внимание, что мы
    сразу же удаляем буфер, поскольку он больше не нужен для этой функции. Теперь мы добавим следующее в событиеSteam async для экземпляра, управляющего оценками:
  var type = ds_map_find_value(async_load, "event_type"); if (type == "leaderboard_upload") {
     var lb_ID = ds_map_find_value(async_load, "post_id"); if lb_ID == upload_ID {
     var lb_name = ds_map_find_value(async_load, "lb_name"); var lb_done = ds_map_find_value(async_load, "success"); var lb_score = ds_map_find_value(async_load, "score"); var
    lb_updated = ds_map_find_value(async_load, "updated"); show_debug_message("leaderboard post id:" + string(lb_ID) + " to lb:" + string(lb_name) + " with score:" + string(lb_score) + " updated=""
    + string(lb_updated)); if (lb_done) {
     show_debug_message("- Succeeded"); }
     else
     {
     show_debug_message("- Failed"); }
     }
     }
  
  В примере мы просто выводим возвращаемые значения в окно компилятора в качестве отладочных сообщений, но вы можете использовать это событие для работы с информацией любым выбранным вами способом.
   
   
   
  
    
      
        Назад: Таблицы лидеров
        Далее: steam_download_scores
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

