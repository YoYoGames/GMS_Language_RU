
  
  steam_ugc_request_item_details
  Эта функция может быть использована для получения информации о заданном ID файла. Вы указываете ID файла и задаете максимальный возраст для проверки (подробнее см. в документации Steam ), после чего функция возвращает уникальное значение async ID, которое может быть использовано для проверки
    детали правильно в событииSteam Async. Это событие будет иметь async_load    DS map, которая будет заполнена следующими парами ключ/значение:
  
    " id" - Идентификатор async, возвращаемый функцией, которая вызвала событие
    "result" - Результат операции (вещественное значение). Это будет либо GML-константа ugc_result_success, либо какое-то другое вещественное число. Поэтому вы должны проверить наличие этой константы, чтобы убедиться, что вызов был успешным, и если
      в противном случае что-то сработало неправильно. Остальные возможные возвращаемые значения отображаются как результат значения Steam "EResult", и вы должны увидеть steamclientpublic .h в заголовках SDK для всех 89 возможных значений.
    " event_type" - Строка " ugc_item_details"
    " cached_data" - Будет true, если возвращаемые данные взяты из локального кэша, или false, если они взяты с сервера.
    "published_file_id" " - Содержит уникальный идентификатор опубликованного файла для элемента
    " file_type" - Тип используемого файла
    " creator_app_id" - Steam ID создателя предмета
    "consumer_app_id" - Steam ID потребителя товара
    " title" - Название элемента
    "description" - Описание элемента
    " steam_id_owner" - Steam ID владельца предмета
    " time_created" - Время, когда элемент был впервые создан
    " time_updated" - Последний раз, когда элемент был обновлен
    " time_added_to_user_list" - Время, когда элемент был подписан на него
    " visibility" - Видимость элемента (см. steam_ugc_set_item_visibility() возвращаемые константы)
    " banned" - Был ли предмет запрещен (true) илинет (false).
    "accepted_for_use" - Принят ли элемент к использованию (true) илинет (false).
    " tags_truncated" - Краткая версия тегов в виде массива
    " tags"- Массив тегов для элемента
    "handle_file" - Уникальное имя файла для элемента
    "handle_preview_file" - Уникальное имя файла предварительного просмотра изображения для элемента (может быть использовано в качестве аргумента с параметром steam_ugc_download() для загрузки изображения предварительного просмотра)
    " filename" - Имя файла элемента
    " file_size" - Размер файла элемента
    " preview_file_size" - Размер изображения предварительного просмотра
    " url"- Полный URL-адрес элемента
    " votes_up" - Количество полученных голосов "против
    " votes_down" - Количество полученных голосов "против
    " score" - Общая оценка предмета
    "account_id_owner" - ID аккаунта от владельца Steam ID (это можно использовать в функции steam_ugc_create_query_user_ex())
  
   
  Синтаксис:
  steam_ugc_request_item_details(published_file_id, max_age_seconds);
  
    
      
        Аргумент
        Описание
      
      
        опубликованный_файл_ид
        Уникальный идентификатор файла для проверяемого UGC.
      
      
        max_age_seconds
        "Возраст" данных для проверки (рекомендуется 30 - 60 секунд).
      
    
  
   
  Возвращается:
  Асинхронный идентификатор
   
  Расширенный пример:
  В этом примере мы отправляем запрос на детализацию элемента, а затем разбираем полученную карту async_load DS map, чтобы установить некоторые переменные. Сначала мы отправляем запрос:
  steam_details= steam_ugc_request_item_details(global.fileID, 60);
  Приведенный выше код запросит подробную информацию об элементе с идентификатором файла, сохраненным в глобальной переменной, и вызовет событие Steam Async с возвращенной информацией. В этом событии мы можем разобрать карту и сохранить некоторые значения в переменных, которые
    которые затем могут быть использованы для отображения информации пользователю:
  var map_id = async_load[? "id"]; var result = async_load[? "result"]; if (map_id == steam_details) && ( result== ugc_result_success) {
     mTitle = async_load[? "title"]; mDesc = async_load[? "description"]; mTags = async_load[? "tags"]; m_hPreviewFile = async_load[? "handle_preview_file"]; m_hOwnerSteamId
    = async_load[? " steam_id_owner"]; mOwnerAccountId = async_load[? "account_id_owner"]; mPubFileId = async_load[? "published_file_id"]; mScore = async_load[? "score"]; }
  
   
   
   
  
    
      
        Назад: UGC
        Далее: steam_ugc_create_query_user
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

