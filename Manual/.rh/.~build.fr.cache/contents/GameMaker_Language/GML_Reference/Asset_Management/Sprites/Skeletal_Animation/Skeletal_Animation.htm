
  
  Скелетная анимация спрайтов
  Функции, приведенные в этом разделе, предназначены только для использования со спрайтами, которые были импортированы из файла скелетной анимации (в частности, файлы JSON, которые Спрайт экспортирует)
    и могут быть использованы для получения информации об анимационном активе в вашей игре, а также для установки определенных свойств анимации. Эти функции могут использоваться вместе с обычными функциями и переменными спрайта, позволяя вам (например)
    смешивать две скелетные анимации с помощью этих специальных функций, задавая при этом масштаб изображения с помощью обычных переменных экземпляра спрайта (подробнее о переменных экземпляра спрайта см. здесь).
  ПРИМЕЧАНИЕ: Для получения дополнительной информации об импорте спрайтов скелетной анимации, сделанных с помощью Spine, см. раздел Импорт спрайтов без растрового изображения.
  Подробнее о функциях для этих видов спрайтов вы можете узнать из разделов ниже:
   
  
    Анимация
    Скины
    Вложения
    Кости
    Слоты
    Рисование и разное
  
   
   
  Поддержка черного цвета
  Эта функция позволяет окрашивать темные области слотов спрайтов Spine в цвета, отличные от светлых областей (это функция Spine IDE, подробнее см. раздел " Оттенок черного "). В настоящее время, чтобы воспользоваться этой функцией в GameMaker Studio 2, необходимо использовать пользовательский шейдер шейдер при
    рисовании спрайта Spine, который его использует. Этот шейдер содержит глобальную однородную переменную под названием " gm_SpineTintBlackColour", которую бегунок заполняет текущим тинтово-черным цветом, получаемым из данных Spine автоматически. Шейдер
    показан ниже:
  Вершинный шейдер (это то же самое, что и вершинный шейдер по умолчанию)
  атрибут vec3 in_Position; // (x,y,z) атрибут vec4 in_Colour; // (r,g,b,a) атрибут vec2 in_TextureCoord; // (u,v)
     изменяющийся vec2 v_vTexcoord; изменяющийся vec4 v_vColour;
     void main() {
     vec4 object_space_pos = vec4( in_Position.x, in_Position.y, in_Position.z, 1.0); gl_Position = gm_Matrices[MATRIX_WORLD_VIEW_PROJECTION] * object_space_pos; v_vColour = in_Colour; v_vTexcoord = in_TextureCoord; }
  
  Фрагментный шейдер:
  изменяющийся vec2 v_vTexcoord; изменяющийся vec4 v_vColour;
     униформа vec4 gm_SpineTintBlackColour; // Это униформа, содержащая тинто-черный цвет
     void main() {
     vec4 tb = gm_SpineTintBlackColour; vec4 texcol = texture2D( gm_BaseTexture, v_vTexcoord ); vec4 outcol; outcol.rgb = v_vColour.rgb * texcol.rgb; outcol.rgb += tb.rgb * ((tb.a * (texcol.a - 1.0)) + (1.0 - texcol.rgb)); //
    Эта строка выполняет логику смешивания тинт-черный outcol.a = v_vColour.a * texcol.a; gl_FragColor = outcol; }
  
  Для этого нужно сначала вызвать шейдер, затем нарисовать спрайт, затем сбросить шейдер, примерно так:
  shader_set(shd_spine_tint_black); draw_self();
     shader_reset();
  
   
   
   
  
    
      
        Назад: Спрайты
        Следующий: Информация о спрайте
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

