
  
  sprite_collision_mask
  С помощью этой функции можно задать свойства маски столкновений, которую должен иметь спрайт. Если вы выбрали автоматический режим (0) или режим полного изображения (1) в качестве режима ограничивающей рамки, то значения отдельных ограничивающих рамок могут быть установлены на 0. Однако для пользовательской маски (2) вам придется установить эти значения.
    пользовательской маски (2) вам придется установить эти значения. Различные значения граничной области всегда относятся к левому верхнему углу спрайта (независимо от начала координат x и y), который считается позицией (0, 0).
  Установка вида маски задает общую форму самой маски, но учтите, что любая маска, кроме прямоугольной, потребует больше вычислительной мощности при разрешении столкновений, что приведет к падению производительности. В общем, следует
    использовать типы масок, отличные от прямоугольной, только в случае крайней необходимости.
  ПРИМЕЧАНИЕ: Эта функция не позволяет использовать вид маски столкновения с повернутым прямоугольником.
  Тип маски, которую можно установить, будет одной из следующих констант:
  
    
      
        Постоянная
        Описание
      
      
        bboxkind_rectangular
        Прямоугольная (не вращающаяся) форма маски столкновения с прямоугольником
      
      
        bboxkind_ellipse
        Эллиптическая форма маски столкновений
      
      
        bboxkind_diamond
        Форма маски столкновения с алмазом
      
      
        bboxkind_precise
        Точная маска столкновений, где маска будет соответствовать непрозрачным пикселям спрайта, основываясь на заданном значении допуска (см. ниже)).
      
    
  
   Наконец, допуск используется для определения степени точности маски (при использовании маски "полное изображение" это не будет иметь никакого эффекта), при этом допуск 0 означает, что маска будет следовать за каждым пикселем, имеющим прозрачность
    больше 0, в то время как другие значения будут смещать периметр маски столкновений в зависимости от прозрачности пикселей.
  ПРИМЕЧАНИЕ: Эта функция полезна только для растровых спрайтов и не работает со спрайтами SWF или JSON (Spine).
  ПРИМЕЧАНИЕ: Эта функция будет работать только с добавленными спрайтами или дублированными спрайтами, а не непосредственно с предварительно созданными ресурсами. Вы можете дублировать спрайты с помощью функции sprite_duplicate().
   
  Синтаксис:
  sprite_collision_mask(ind, sepmasks, bboxmode, bbleft, bbtop, bbright, bbbottom, kind, tolerance);
  
    
      
        Аргумент
        Описание
      
      
        инд
        Индекс спрайта, для которого нужно установить ограничивающую рамку.
      
      
        сепмаск
        Создавать ли маски столкновений для каждого подизображения спрайта(true), или одну маску для всех(false).
      
      
        bboxmode
        Какой тип ограничивающей рамки использовать. 0 = автоматическое, 1 = полное изображение, 2 = определенное пользователем.
      
      
        bbleft
        Максимальное левое положение ограничивающей рамки.
      
      
        bbtop
        Максимальное верхнее положение ограничивающей рамки.
      
      
        bbright
        Максимальное правое положение ограничивающей рамки.
      
      
        bbbottom
        Максимальное нижнее положение ограничивающей рамки.
      
      
        добрый
        Вид маски, константа (см. таблицу в описании).
      
      
        допуск
        Указывает допуск в значении прозрачности (0=без допуска, 255=полный допуск).
      
    
  
   
  Возвращает
  Н/Д
   
  Пример:
  spr = sprite_add("player_5.png", 16, true, true, 0, 0, 0); sprite_collision_mask(spr, true, 1, 0, 0, 0, 0, 0, 0, 0);
  Приведенный выше код загружает спрайт из внешнего источника и сохраняет новый индекс в переменной "spr". Затем код устанавливает для нового спрайта точную маску столкновений для каждого из его суб-изображений.
   
   
   
  
    
      
        Назад: Манипуляция спрайтом
        Далее: sprite_nineslice_create
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

