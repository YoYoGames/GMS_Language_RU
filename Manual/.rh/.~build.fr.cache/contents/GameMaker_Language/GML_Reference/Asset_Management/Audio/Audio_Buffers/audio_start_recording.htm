
  
  audio_start_recording
  Эта функция начнет запись звука с проиндексированного источника рекордера. Количество источников рекордера можно узнать с помощью функции audio_get_recorder_count(), и как только вы начнете запись
    звук будет сохранен во временном буфере и начнет вызывать асинхронное событие Audio Recording Asynchronous Event. Это событие запускается на каждом шаге, когда запись
    происходит и создаст специальную карту DS в переменной async_load со следующими
    парами ключ/значение:
  
    " buffer_id" - идентификатор временного буфера, который можно использовать для получения аудиоданных
    "channel_index" - индекс канала записи (как возвращено функцией), с которого поступили данные
    " data_len" - длина полученных данных (в байтах)
  
  Обратите внимание, что после срабатывания асинхронного события звук во временном буфере будет стерт, поэтому вам следует скопировать его данные в пользовательский буфер, который вы создали ранее.
  ПРИМЕЧАНИЕ: Большинство платформ , кроме HTML5, поддерживают запись звука в той или иной форме, но это не означает, что все устройства позволят это сделать, даже если платформа это делает, поэтому всегда следует проверять, что функция audio_get_recorder_count()    возвращает значение больше 0, чтобы убедиться, что записывающие устройства доступны, прежде чем использовать остальные функции записи.
   
  Синтаксис:
  audio_start_recording(recorder_index);
  
    
      
        Аргумент
        Описание
      
      
        индекс_регистратора
        Индекс используемого источника рекордера.
      
    
  
   
  Возвращается:
  Real (идентификатор буфера)
   
  Пример:
  audio_record = audio_start_recording(0);
  Приведенный выше код начинает запись с источника 0 рекордера, сохраняя индекс канала записи в переменной "audio_record" для использования в асинхронном событии Audio Recording.
   
   
   
  
    
      
        Назад: Аудио буферы
        Следующий: Аудио_остановка_записи
         
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

