
  
  audio_falloff_set_model
  Чтобы придать аудиодвижку еще большую универсальность, GameMaker Studio 2 позволяет вам выбрать модель падения звука, которая подходит для вашей игры. Эта модель будет использоваться для всех аудиофункций в игре или приложении, поэтому вы должны убедиться, что выбранная вами модель
    поскольку каждая из них влияет на восприятие слушателем звуков, которые вы воспроизводите через эмиттеры или с помощью функции audio_play_sound_at.
  При настройке falloff в вашей игре с помощью соответствующих функций есть три аргумента, которые вам нужно будет задать, и каждый из них подходит для определенной модели и влияет на то, как конечный звук будет "слышен" игроку в зависимости от
    в зависимости от расстояния, на котором слушатель находится от источника. Эти три аргумента следующие:
  
    контрольное расстояние - это расстояние от слушателя, на котором громкость воспроизводимого звука обычно уменьшается вдвое, прежде чем на нее повлияет коэффициент отката или заданное максимальное расстояние.
    максимальное расстояние - задает расстояние, на котором больше не будет происходить ослабление звука источника. Это может быть точка, в которой звук больше не слышен , или точка, в которой громкость звука больше не уменьшается ниже
      минимального порога, определенного выбранной моделью.
    falloff factor - Коэффициент falloff используется при ослаблении расстояния на основе модели обратного расстояния и устанавливает окончательный минимальный порог для звука с falloff.
  
  Модели падения, на которые влияют эти аргументы, представлены в GameMaker Studio 2 следующими константами (в таблице приведены точные расчеты):
   
  
    
      
        Постоянная
        Функция
      
      
        audio_falloff_exponent_distance
         коэффициент усиления = (расстояние до слушателя / расстояние до эталона) ^ (-коэффициент падения)
      
      
        audio_falloff_exponent_distance_clamped
         distance = clamp(listener_distance, reference_distance, maximum_distance) gain = (distance / reference_distance) ^ (-falloff_factor)
      
      
        audio_falloff_inverse_distance
         gain = reference_distance / (reference_distance + falloff_factor * (listener_distance - reference_distance))
      
      
        audio_falloff_inverse_distance_clamped
         distance = clamp(listener_distance, reference_distance, maximum_distance) gain = reference_distance / (reference_distance + falloff_factor * (distance - reference_distance))
      
      
        audio_falloff_linear_distance
         distance = min(distance, maximum_distance) gain = (1 - falloff_factor * (distance - reference_distance) / (maximum_distance - reference_distance))
      
      
        audio_falloff_linear_distance_clamped
         distance = clamp(listener_distance, reference_distance, maximum_distance) gain = (1 - falloff_factor * (distance - reference_distance) / (maximum_distance - reference_distance))
      
      
        audio_falloff_none
         коэффициент усиления = 1
      
    
  
   Следующие графики являются визуальным представлением того, как вышеуказанные константы работают и влияют на воспроизводимый звук:
  
   
  Синтаксис:
  audio_falloff_set_model(model);
  
    
      
        Аргумент
        Описание
      
      
        модель
         Константа, используемая для установки модели падения.
      
    
  
   
  Возвращается:
  Н/Д
   
  Пример:
  audio_falloff_set_model(audio_falloff_exponent_distance_clamped); audio_play_sound_at(snd_Waterfall, x, y, 0, 100, 300, 1, true, 1);
  Приведенный выше код устанавливает модель падения, а затем воспроизводит звук, индексированный в переменной "snd_Waterfall", который будет зациклен на позиции комнаты, с эталоном падения 100, расстоянием падения 300, фактором падения 1 и низким
    приоритет.
   
   
   
  
    
      
        Назад: Аудио
        Далее: audio_sound_gain
         
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

