
  
  Последовательности
  Последовательности обычно создаются в IDE с помощью редактора последовательностей, но их также можно создавать и редактировать с помощью кода. Однако, прежде чем рассматривать доступные функции, важно
    понять, как последовательности определяются в GameMaker и какие термины будут использоваться.
  Для начала, на верхнем уровне, у вас есть элемент последовательности. Это то, что вы помещаете на слой в комнате, либо через редактор комнат, либо в коде, используя соответствующие функции слоя.
    Элемент слоя не имеет реальных свойств, кроме значения ID элемента, но этот ID необходим для использования вышеупомянутых функций слоя для изменения воспроизведения последовательности или для доступа к данным последовательности.
  Далее у вас есть объекты последовательности и экземпляры последовательности, так же как и общие объекты и экземпляры. Объект последовательности - это базовый ресурс, созданный в браузере активов или с помощью функции sequence_create(),
    а экземпляр последовательности - это "копия" этого объекта последовательности, которая была помещена в комнату в качестве элемента на слое. Считайте объекты последовательности чертежами, а экземпляры последовательности - созданием на основе этих чертежей. Последовательность
    объекты и экземпляры являются структурами, и - в отличие от обычных объектов - структура объекта последовательности может быть отредактирована во время выполнения, что повлияет на все последующие экземпляры этой последовательности, когда вы создаете их как элементы.
    (и любое редактирование объекта последовательности не будет сброшено при перезапуске игры или комнаты с помощью функций room_restart() или game_restart() ). Структура экземпляра последовательности содержит несколько параметров для управления воспроизведением
    (подробнее об этом будет рассказано ниже), а также структуру данных последовательности.
  Наконец, как упоминалось выше, у вас есть данные последовательности, которые представляют собой еще одну структуру. Эта структура содержит все данные о последовательности. Треки, которые она содержит, свойства, которыми обладают эти треки, скорость воспроизведения и многое другое. Точные
    подробности содержимого этой структуры описаны ниже, но в основном она состоит из структур дорожек активов и структур дорожек параметров, которые используют данныеключевых кадров для выполнения действий во время воспроизведения последовательности.
  Для работы с элементами последовательности используются функции слоя помещения, а для объектов последовательности, экземпляров и данных у нас есть следующие функции:
   
  
    последовательность_существует
    последовательность_создать
    уничтожение последовательности
    последовательность_get
    sequence_track_new
    sequence_keyframe_new
    sequence_keyframedata_new
    sequence_get_objects
    sequence_instance_override_object
  
   
  Существует также встроенная переменная, связанная с экземплярами, которая может быть использована для определения того, был ли экземпляр использован в последовательности или нет:
   
  
    в_последовательности
  
  ВАЖНО! Если в вашей последовательности есть экземпляры, эти экземпляры не должны менять свои image_xscale / image_yscale /.
    угол изображения / x / y переменные, так как они будут перезаписаны, когда последовательность
      обновляет каждый шаг после начала воспроизведения.
   
  Прежде чем использовать эти функции для создания или редактирования последовательностей, мы рекомендуем вам прочитать подробные описания свойств структур, приведенные ниже. Общий обзор того, как создать новую последовательность, выглядит следующим образом:
  
    Создайте новый объект последовательности с помощью функции seqeunce_create() и сохраните индекс объекта последовательности в переменной. Этот индекс дает вам доступ к структуре объекта последовательности.
  
  myseq = sequence_create();
  
    Установите значения верхнего уровня объекта последовательности, такие как длина, режим воспроизведения, скорость воспроизведения и т.д.. Например:
  
  myseq.length = 120; myseq.loopmode = seqplay_pingpong
  
    Прежде чем добавлять дорожки в объект последовательности, их нужно создать, поэтому сейчас вы создадите массив дорожек активов, которые были определены с помощью функции sequence_track_new(). Обратите внимание, что
      в коде нет разницы между дорожками активов и дорожками параметров - все они просто дорожки, и их поведение зависит от типа созданной дорожки и от того, назначены ли они как поддорожки дорожки верхнего уровня или нет.
      Так, вы создадите дорожку для актива, а затем назначите ей поддорожки для различных параметров, и эти поддорожки будут действовать как дорожки параметров для актива. В приведенном ниже примере создается одна дорожка для графического актива, который будет
      будет добавлена в последовательность позже:
  
  var mytracks = array_create(1); mytracks[0] = sequence_track_new(seqtracktype_graphic);
  
    Каждая дорожка актива должна иметь некоторые данные, чтобы сообщить последовательности, как она будет выглядеть, или ее положение, и т.д... и это добавляется в форме ключевые кадры. На верхнем уровне для дорожки актива можно установить ключевые кадры для различных вещей (перечислены в
      но обратите внимание, что поскольку это ключевые кадры трека актива, они не будут интерполированы и просто изменят значение, на которое они ссылаются, когда будет достигнут данный кадр. Каждый ключевой кадр представляет собой struct, который добавляется в массив,
      а затем этот массив присваивается дорожке актива. Чтобы создать структуру ключевого кадра, мы вызываем функцию sequence_keyframe_new() а чтобы заполнить ключевой кадр необходимыми данными, мы используем функцию
      функция sequence_keyframedata_new():
  
  // Создаем новую структуру ключевого кадра для дорожки графического актива и добавляем ее в массив (так как в кадре может быть несколько ключей) var graphickeys = array_create(1); graphickeys[0] = sequence_keyframe_new(seqtracktype_graphic); // Задаем графику.
   keyframe данные верхнего уровня для позиции и длины ключевого кадра и т.д... graphickeys[0].frame = 0; graphickeys[0].length = 1; graphickeys[0].stretch = true; graphickeys[0].disabled = false; // Создаем данные канала, которые будут
    идти в этот ключевой кадр (снова массив, так как каждая клавиша может иметь несколько каналов данных ключевого кадра ) var graphickeydata = array_create(1); graphickeydata[0] = sequence_keyframedata_new(seqtracktype_graphic); graphickeydata[0].spriteIndex
    = spr_Platform; graphickeydata[0].channel = 0; // Добавляем каналы данных ключевых кадров к ключевым кадрамграфического трека graphickeys[0].channels = graphickeydata; // Добавляем определенные ключевые кадры к треку mytracks[0].name = "TestGraphicTrack"; mytracks[0]. keyframes= graphickeys;
  
    Теперь нам нужно создать дорожку параметров, которую мы назначим в качестве поддорожки к только что созданной дорожке графики. Это будет сделано аналогично тому, как показано выше, только теперь нам нужно дать дорожке имя, показывающее ее назначение, в данном случае
      "position", так как мы будем использовать эту дорожку для перемещения дорожки графики по кадрам анимации последовательности:
  
  // Создаем новую структуру дорожки параметров для позиции графики var paramtracks = array_create(1); paramtracks[0] = sequence_track_new(seqtracktype_real); paramtracks[0].name = "position"; paramtracks[0].interpolation
    = true; // Создаем структуру ключевых кадров для хранения данных канала параметров и задаем позицию кадра для ключевого кадра var paramkeys = array_create(2); paramkeys[0] = sequence_keyframe_new(seqtracktype_real); paramkeys[0].frame =
    0; paramkeys[1] = sequence_keyframe_new(seqtracktype_real); paramkeys[1].frame = 120; // Создание структур данных ключевых кадров var paramkeydata1 = array_create(2); paramkeydata1[0] = sequence_keyframedata_new(seqtracktype_real); paramkeydata1[0].channel = 0; // Канал 0 для позиционного трека - это позиция X paramkeydata1[0].value = 0; paramkeydata1[1] = sequence_keyframedata_new(seqtracktype_real); paramkeydata1[1].channel = 1; // Канал 1 для позиции
    трек - это позиция Y paramkeydata1[1].value = 0; var paramkeydata2 = array_create(2); paramkeydata2[0] = sequence_keyframedata_new(seqtracktype_real); paramkeydata2[0].channel = 0; paramkeydata2[0].value = room_width; paramkeydata2[1] = sequence_keyframedata_new(seqtracktype_real); paramkeydata2[1].channel = 1; paramkeydata2[1].value = room_height; // Назначаем структуры данных ключевых кадров каналам для каждой клавиши paramkeys[0].channels = paramkeydata1; paramkeys[1].channels = paramkeydata2; // Назначаем клавиши дорожке параметров paramtracks[0].keyframes = paramkeys;
  
    После этого остается назначить дорожку параметров в качестве поддорожки к нашей основной дорожке графических активов, которую мы создали в начале, а затем назначить эти дорожки последовательности, которую мы можем создать в комнате:
  
  mytracks[0].tracks = paramtracks; myseq.tracks = mytracks; layer_sequence_create("Assets_1", 0, 0, myseq);
  Приведенные выше инструкции создают очень простой объект последовательности, который рисует спрайт в позиции (0, 0) последовательности, а затем перемещает его в правый нижний угол и обратно в цикле. Как уже упоминалось, существует ряд мест, где вам необходимо
    обращаться к различным структурам, чтобы получить или передать данные о последовательности, и в следующих разделах перечислены все различные свойства, которые содержат эти структуры:
  
    Структура объекта последовательности
    Структура экземпляра последовательности
    Структура трека
    Структура ключевого кадра 
    Структура данных ключевого кадра 
  
   
  Наконец, в последовательности можно добавить код, который может быть запущен как событие в момент или как широковещательное сообщение. Это подробно описано на следующей странице:
  
    События, моменты и широковещательные сообщения
  
   
   
   
  
    
      
        Назад: Управление активами
        Следующий: Шрифты
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

