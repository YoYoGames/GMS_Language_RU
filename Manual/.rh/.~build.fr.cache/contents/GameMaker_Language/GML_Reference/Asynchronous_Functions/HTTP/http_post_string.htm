
  
  http_post_string
  В вычислительной технике пост-запрос используется, когда клиенту необходимо отправить данные на сервер как часть запроса на получение, например, при загрузке файла или отправке заполненной формы, и то же самое справедливо для этой функции в GameMaker Studio 2.
    В отличие от метода запроса http_get(), где на сервер отправляется только URL, http_post_string() также включает строку, которая отправляется на сервер и может привести к созданию
    нового ресурса или обновление существующего ресурса, или и то, и другое. Следует отметить, что параметры HTTP-запроса (биты, которые иногда "прикрепляются" к концу URL при отправке формы на веб-странице) вполне допустимы и при использовании этой функции.
    этой функции.
  ПРИМЕЧАНИЕ: Вы должны знать, что из-за XSS-защиты в браузерах запросы и попытки загрузить ресурсы из других доменов блокируются и могут возвращать пустые результаты. Более подробную информацию см. в разделе " Междоменные проблемы ".
  Это событие создаст "обратный вызов", который будет подхвачен любым HTTP Events, и в этом случае будет создана DS Map ( более известная как "словарь"), которая является эксклюзивной для этого события и хранится в специальной переменной async_load. Эта DS карта будет содержать
    различные значения в зависимости от того, есть ли возвращаемые данные или нет. Например, если вы запросили файл, событие будет срабатывать несколько раз по мере получения каждого пакета данных, чтобы вы могли, например, показать индикатор выполнения. Общая
    структура карты DS будет выглядеть следующим образом:
  
    id: ID, который был возвращен командой. Если вы отправляете серию http_ запросов, то вам нужно знать, на какой из них вы получаете ответ, поэтому вы будете использовать это значение для сравнения со значением, которое вы сохранили, когда первоначально
      чтобы найти нужный запрос.
    статус: Возвращает значение меньше 0 для ошибки, 0 для завершения и 1 для получения пакетов (подробнее см. ниже).
    результат: Полученные данные (только строка).
    url: Полный URL-адрес, который вы запросили.
    http_status: Необработанный код статуса http (если доступен). Возвращается стандартный код статуса для большинства браузеров, например: 304 для "Not Modified" или 204 для "No Content" и т.д..
  
  Если в вашу игру возвращается несколько пакетов, ключ обратного вызова "status" вернет 1, в этом случае карта DS будет иметь следующие дополнительные ключи:
  
    "contentLength": Это размер файла, который, по словам веб-сервера, вы должны ожидать получить (может быть -1, если сервер не возвращает эти данные).
    "sizeDownloaded": Размер данных, которые уже были загружены.
  
   
  Синтаксис:
  http_post_string(url, string);
  
    
      
        Аргумент
        Описание
      
      
        url
        Веб-адрес сервера, с которого вы хотите получить информацию
      
      
        строка
        Строка, которую вы хотите отправить на указанный URL-адрес
      
    
  
   
  Возвращается:
  Реально
   
  Расширенный пример:
  Функция http_post_string() может быть вызвана из любого события, и поскольку она асинхронна, обратный вызов может быть почти мгновенным или занять несколько секунд. Вызов функции прост и выглядит следующим образом:
  var str = "name=" + global.player_name + "&score=" + string(global.player_score); post = http_post_string("http://www.angusgames.com/game?game_id=" + string(global.game_id), str);
  Приведенный выше код отправляет запрос на получение по указанному URL с заданными параметрами, а также отправляет дополнительные данные (имя игрока и счет в URL-кодированной форме), хранящиеся в переменной str. Это вызовет все определенные асинхронные Http-события, если будет получен обратный вызов, и вы можете сверить возвращаемый "id" с тем, что хранится в переменной post, чтобы убедиться, что вы запустили правильный код, если вы использовали различные функции http_post_string (). Следующий
    пример кода показывает, как это можно сделать:
  var r_str = "null"; if ds_map_find_value(async_load, "id") == post {
     if ds_map_find_value(async_load, "status") == 0 {
     r_str = ds_map_find_value(async_load, "result"); }
     }
  
  Приведенный выше код сначала проверит id созданной карты DS, затем проверит статус обратного вызова. Если значение равно 0 (что означает успех), результат обратного вызова будет сохранен в переменной для дальнейшего использования, в противном случае
    переменная будет просто содержать значение по умолчанию (в данном случае "null").
   
   
   
  
    
      
        Назад: HTTP
        Далее: http_get_request_crossorigin
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

