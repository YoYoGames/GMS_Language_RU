
  
  Буферы
  Буфер - это область физической памяти, используемая для временного хранения данных, пока они перемещаются из одного места в другое или манипулируются каким-либо образом, например, вы можете использовать буфер для хранения пакетных данных, ожидающих передачи по сети, или для хранения пакета, полученного по сети.
    например, буфер можно использовать для хранения пакета, ожидающего передачи по сети, или для хранения пакета, который был получен по сети. В GameMaker Studio 2 есть ряд специальных функций, связанных с созданием, изменением и загрузкой/сохранением буферов, но перед их использованием обратите внимание на следующие моменты:
  
    При создании буфера он автоматически очищается и заполняется до 0.
    Аргумент "size" функций буфера всегда указывает на размер буфера в байтах . 
    Аргумент "Выравнивание" относится к тому, как данные хранятся в буфере. Если ваше выравнивание установлено, скажем, на 4, и вы записываете один фрагмент данных размером в 1 байт, а затем выполняете команду buffer_tell, вы получите смещение 1. Однако,
      если вы запишете другой фрагмент данных, также размером в 1 байт, а затем выполните команду buffer_tell, вы получите смещение 5, поскольку выравнивание "подгоняет" данные под этот размер. Выравнивание влияет только на то, куда записываются данные, поэтому если
      вы выполните команду buffer_tell после записи чего-либо, она вернет текущую позицию записи, которая следует сразу за записанными данными. Обратите внимание, однако, что если после этого вы запишете еще один фрагмент данных, буфер внутри переместит
      позицию записи до следующего кратного размера выравнивания, прежде чем будет произведена запись данных.
    Когда речь идет о "смещении", это значение в байтах, на которое нужно сместить данные в данном буфере. Так, если ваш буфер выровнен по 2 байта и вы хотите пропустить первые 4 выровненных места, то смещение составит 2 * 4 байта.
    Некоторые функции буфера также создают новый буфер (например, buffer_load ). Помните, что эти буферы также должны быть удалены из памяти, когда они не используются, с помощью функции buffer_delete.
    Память, используемая для создания буферов, является системной памятью, поэтому даже когда игра не имеет фокуса, любые данные, хранящиеся в буфере, должны быть в безопасности, однако если приложение будет закрыто или перезапущено, они будут потеряны.
  
  Следующие страницы объясняют, как работают буферы в контексте GameMaker Studio 2, и содержат несколько примеров кода для тех пользователей, которые не знают, как их использовать:
  
    Использование буферов
  
  ВАЖНО! Когда вы создаете буфер, значение индекса, используемое для его идентификации, является целым числом, начинающимся с 0. Эти индексы повторно используются GameMaker, поэтому значение индекса уничтоженного буфера может быть использовано впоследствии вновь созданным,
    поэтому мы рекомендуем вам установить любую переменную, содержащую индекс буфера, в -1 после уничтожения буфера.
  Для использования двоичных буферов в ваших играх существуют следующие функции:
  
    буфер_существует
    буфер_создать
    buffer_create_from_vertex_buffer
    buffer_create_from_vertex_buffer_ext
    буфер_удалить
    буферное_чтение
    буферная_запись
    буферное_заполнение
    буферный_поиск
    буферный рассказ
    буферный_пик
    буферная спица
    буфер_сохранения
    buffer_save_ext
    buffer_save_async
    буферная_загрузка
    buffer_load_ext
    buffer_load_async
    буферная_загрузка_частичная
    сжатие_буфера
    буферная_декомпрессия
    buffer_async_group_begin
    buffer_async_group_option
    buffer_async_group_end
    буферное_копирование
    буфер_копирование_из_вершинного_буфера
    тип_буфера
    buffer_get_alignment
    буфер_get_address
    размер буфера_get_size
    buffer_get_surface
    buffer_set_surface
    размер_буфера
    размер буфера
    buffer_md5
    буфер_sha1
    buffer_crc32
    buffer_base64_encode
    buffer_base64_decode
    buffer_base64_decode_ext
    buffer_set_used_size
  
   
  Есть также две дополнительные функции, связанные с буферами, которые можно использовать для сохранения и загрузки состояний игры (обратите внимание, что для их использования требуется, чтобы буфер был создан ранее):
   
  
    игровой_загрузочный_буфер
    игровой_сохранённый_буфер
  
   
  Наконец, вы также можете использовать специальные вершинные буферы для создания собственных пользовательских примитивов, моделей и т.д.. Подробнее о них вы можете узнать из следующего раздела руководства:
   
  
    Примитивное строительство
  
   
   
   
  
    
      
        Назад: Ссылка наGML
        Следующее: UWP и XBox Live
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

