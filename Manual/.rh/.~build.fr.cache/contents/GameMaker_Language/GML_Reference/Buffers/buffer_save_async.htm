
  
  buffer_save_async
  С помощью этой функции вы можете сохранить часть содержимого буфера в файл, готовый к считыванию обратно в память с помощью функции buffer_load() (или любой другой функции для загрузки буферов). Смещение"
    определяет начальную позицию в буфере для сохранения (в байтах), а "size" - размер сохраняемой области буфера от этого смещения и далее (также в байтах). Эта функция работает асинхронно, поэтому игра будет продолжать работать
    во время сохранения, а все файлы, сохраненные с помощью этой функции, будут помещены в папку "по умолчанию". Эту папку не нужно указывать в имени файла, так как она добавляется автоматически программой GameMaker. Например, путь к имени файла " Data\Player_Save.sav"
    будет сохранен в папку "default\Data\Player_Save.sav". Однако, если вы затем загрузите файл с помощью функции buffer_load_async()то вам не нужно указывать часть пути "по умолчанию"
    часть пути (но любая другая функция файла потребует ее, за исключением консолей Xbox One, PS4 и Nintendo Switch).
  ПРИМЕЧАНИЕ: В HTML5 "default/" не добавляется автоматически, и вам, возможно, придется учесть это в своем коде.
  Функция вернет уникальное значение ID и вызовет событие асинхронного сохранения/загрузки, где вы можете использовать возвращенный ID для проверки значения ID async_load,
    как показано в расширенном примере ниже. Карта async_load map в событии будет содержать следующие две пары ключ/значение:
  
    "id": идентификатор асинхронной функции, возвращаемый функцией сохранения.
    "status": возвращает true, если данные были сохранены/загружены правильно, и false в противном случае.
  
  Обратите внимание, что вы можете сохранить несколько буферов в одном, вызывая эту функцию несколько раз между вызовами функций buffer_async_group_begin() и buffer_async_group_end()    (более подробную информацию об этом см. в этих функциях).
  ПРИМЕЧАНИЕ: На HTML5 возвращаемые результаты сохраняются в виде строк в кодировке base64 при сохранении в файл.
   
  Синтаксис:
  buffer_save_async(buffer, filename, offset, size);
  
    
      
        Аргумент
        Описание
      
      
        буфер
        Индекс буфера для сохранения.
      
      
        имя файла
        Имя файла для сохранения.
      
      
        смещение
        Смещение в буфере для сохранения (в байтах).
      
      
        размер
        Размер области буфера для сохранения (в байтах).
      
    
  
   
  Возвращается:
  Реально
   
  Расширенный пример:
  Функция buffer_save_async() может быть вызвана из любого события, и поскольку она асинхронна, обратный вызов может быть почти мгновенным или занять несколько секунд. Вызов функции прост и выглядит следующим образом:
  saveid = buffer_save_async(buff, "Player_Save.sav", 0, 16384);
  Приведенный выше код сохраняет содержимое буфера " buff"в заданный файл сохранения, сохраняя идентификатор вызова функции в переменной " saveid". Когда сохранение будет завершено, сработает асинхронное событие Save/Load
    и вы можете проанализировать карту async_load на предмет правильного ID функции, как показано ниже:
  если ds_map_find_value(async_load, "id") == saveid {
     if ds_map_find_value(async_load, "status") == false {
     show_debug_message("Save failed!"); }
     }
  
  Приведенный выше код сначала проверит id созданной карты DS, затем проверит статус обратного вызова, опубликовав отладочное сообщение, если возникли какие-либо проблемы.
   
   
   
  
    
      
        Назад: Буферы
        Далее: буферная_загрузка
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

