
  
  json_encode
  ВАЖНО! Эта функция - хотя она все еще актуальна - была заменена функцией json_stringify(), и мы рекомендуем использовать ее только для поддержки старых версий.
  JSON (JavaScript Object Notation) - это легкий формат обмена данными, который легко читать и писать как людям, так и машинам. Он построен на двух основных структурах:
  
    Набор пар имя/значение, называемый Карта DS в GameMaker Studio 2, но также известна как "словарь" или "объект" в других языках программирования.
    Упорядоченный список значений, называемый DS Список в GameMaker Studio 2, но в других языках программирования его также можно назвать "массивом" или "последовательностью".
  
  json_encode() принимает карту DS или массив, который вы ранее создали, и кодирует его как строку JSON, которую вы можете использовать в качестве (например) части http_post_string()    или - для хранения во внешнем пространстве - записать в файл. Если в качестве структуры верхнего уровня используется массив, то массив может содержать только допустимые значения или другие массивы, но не структуры данных. Для этого вы должны использовать соответствующие
    DS-функции.
  ВАЖНО! JSON не имеет отношения к числам. В любом языке программирования может быть множество типов чисел различной емкости и дополнений, фиксированных или плавающих, двоичных или десятичных. Это может затруднить обмен между различными
    языками программирования. Вместо этого JSON предлагает только то представление чисел, которое используют люди: последовательность цифр. Все языки программирования знают, как понять последовательность цифр, даже если они не согласны с внутренними представлениями. Для
    дополнительную информацию см. в стандарте ECMA JSON.
  Обратите внимание, что при записи JSON в ini-файл следует соблюдать осторожность, поскольку спецификации ini могут вызывать проблемы при использовании кавычек и управляющих символов. См. функцию ini_write_string() для получения дополнительной
    информацию. Также обратите внимание, что если вы закодируете int64 в JSON, он запишет его как int, если он находится в допустимом диапазоне для int32, как double, если он может сделать это без потери точности, или (если ни один из этих случаев не применим) как строку с идентификатором " @i64@" перед ним и " $i64$" после него. Когда вы будете декодировать JSON в карту, GameMaker Studio 2 подхватит эти идентификаторы и преобразует значение в int64. Это означает, что
    что если JSON предназначен для сервера или другой цели, не связанной с GameMaker, эти значения не подойдут и их следует избегать.
  ПРИМЕЧАНИЕ: Иерархическая функциональность JSON доступна через специальные функции DS map и DS list (например, ds_map_add_list() или
    ds_list_mark_as_map() ), поэтому вы можете кодировать вложенные списки и карты.
   
  Синтаксис:
  json_encode(map)
  
    
      
        Аргумент
        Описание
      
      
        карта
        карта DS с информацией для кодирования (или массив)
      
    
  
   
  Возвращается:
  строка
   
  Пример:
  var hiscore_map, i, str; hiscore_map = ds_map_create(); for (i = 0; i < 10; i ++;) {
     ds_map_add(hiscore_map, name[i], score[i]); }
     str = json_encode(hiscore_map); get[0] = http_post_string("http://www.angusgames.com/game?game_id=" + string(global.game_id), str) ds_map_destroy(hiscore_map);
  
  Приведенный выше код создает карту DS, а затем циклически просматривает массивы имен и баллов, добавляя каждую пару ключ/значение в новую карту. Затем эта карта кодируется с помощью json_encode() и сохраняется в виде строки в переменной "str". Эта строка
    затем отправляется на веб-сервер с помощью http_post_string(), а карта DS уничтожается, чтобы предотвратить утечку памяти, так как она больше не нужна.
   
   
   
  
    
      
        Назад: Кодирование файлов
        Далее: json_decode
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

