
  
  json_stringify
  С помощью этой функции вы можете преобразовать одиночные или вложенные структуры и массивы в правильную строку JSON. Вы задаете исходное значение (индекс массива или ссылку на структуру), а затем функция "строчит" его, преобразуя в строку JSON,
    преобразует массивы GameMaker в массивы JSON, а структуры GameMaker в объекты JSON.
  При использовании этой функции следует обратить внимание на некоторые важные моменты:
  
    Функция не  будет преобразовывать карты DS, списки или любые другие структуры данных в JSON, а просто сохранит значение внутреннего индекса для структуры (что малополезно, так как индекс будет меняться между запусками игры), и поэтому
      вы не должны пытаться перевести в строку любое значение, которое может содержать ссылки на структуры данных (для этого у вас есть json_encode()).
    Эта функция преобразует практически любое значение в "правильную" строку JSON, однако фактические значения, содержащиеся в строке, могут быть не совсем такими, как вы ожидаете, из-за особенностей работы стандарта JSON:
       "JSON не имеет отношения к числам. В любом языке программирования может существовать множество типов чисел различной емкости и комплектации, фиксированных или плавающих, двоичных или десятичных. Это может сделать обмен между различными языками программирования
      языками. JSON вместо этого предлагает только то представление чисел, которое используют люди: последовательность цифр. Все языки программирования знают, как понять последовательность цифр, даже если они не согласны с внутренними представлениями."
       Более подробную информацию смотрите в Стандарте ECMA JSON.
    Если вы включите int64 в значения для преобразования в JSON, он запишет его как int, если оно находится в допустимом диапазоне для int32, как double, если это можно сделать без потери точности, или (если ни один из этих случаев не применим) как строку с идентификатором " @i64@" перед ним и " $i64$" после него. Когда вы будете разбирать JSON снова, GameMaker Studio 2 подхватит эти идентификаторы и преобразует значение обратно в int64. Это означает, что
      что если JSON предназначен для сервера или другой цели, не связанной с GameMaker, эти значения не подойдут и их следует избегать.
    Если вы включите infinity, -infinity или NaN в значения для преобразования в JSON, они будут закодированы как строки, поскольку эти значения не являются частью стандарта JSON, и
      при разборе полученного JSON они не будут преобразованы обратно в свои значения времени выполнения и останутся в виде строк. Обратите внимание, что NaN будет преобразован в "nan" (в нижнем регистре) при структуризации.
    Следует быть осторожным при записи любой возвращаемой строки JSON в файл ini, поскольку спецификации ini могут вызвать проблемы при использовании кавычек и управляющих символов. См. функцию ini_write_string()      для получения дополнительной информации.
  
   
   
   
  Синтаксис:
  json_stringify(val)
  
    
      
        Аргумент
        Описание
      
      
        val
        Значение ссылки для структуры или массива для преобразования в строку JSON
      
    
  
   
  Возвращается:
  строка
   
  Пример:
  var _contents = { version : "1", data: { webSocket : 1, ipv4Address : "95.39.220.218", ipv6Address : "0000:0000:0000:0000:0000:ffff:5f27:dcda", header : "Вы получаете пакет.
    : "Вы получаете пакет", body : "Этот пакет пуст и предназначен только для тестирования", },  };
     packet = json_stringify(map);
  Приведенный выше код преобразует структуру "_contents" в строку JSON и сохранит ее в переменной. Фактическая строка будет выглядеть следующим образом:
  { "version": "1", "myObj": { "header": "Вы получаете пакет", "webSocket": 1, "body": "Пакет сухариков с сыром и луком", "ipv4Address": "95.39.220.218",
    "ipv6Address": "0000:0000:0000:0000:0000:ffff:5f27:dcda" } }
   
   
   
  
    
      
        Назад: Кодирование файлов
        Далее: json_parse
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

