
  
  Местные переменные
   Локальная переменная - это переменная, которую мы создаем только для определенного события или функции, а затем отбрасываем после завершения события или функции. Если она создана в пользовательской функции, то локальная переменная
    доступна только для этой функции, а затем отбрасывается по ее завершении. Зачем они нам нужны? Переменные занимают место в памяти, и может случиться так, что мы будем использовать их только для одной операции или функции, и в этом случае нам нужно иметь их в памяти только для
    в этом случае нам нужно держать ее в памяти только на то короткое время, пока она используется. Это позволяет поддерживать чистоту и порядок в кодовой базе, а также оптимизировать пространство памяти для тех вещей, которые действительно в ней нуждаются. Чтобы объявить локальную переменную, мы используем оператор var.
    следующим образом:
  var _i, _num, _str; _i = 0; _num = 24.5; _str = "Hello World";
     // или
     var _i = 0, _num = 24.5, _str = "Hello World";
     // или
     var _i = 0; var _num = 24.5; var _str = "Hello World";
  Все переменные, созданные таким образом, будут "забыты" (т.е. удалены из памяти) в конце события (или функции), в котором они были созданы. Вы должны быть внимательны, чтобы имя, которое вы даете всем объявленным переменным var, не совпадало с именем другой переменной экземпляра в объекте, выполняющем функцию.
    не совпадает с именем другой переменной экземпляра в объекте, выполняющем код, а также убедитесь, что у вас нет намерения использовать значение, хранящееся в этой переменной, за пределами события или функции, в которой вы ее объявили (в примерах выше, все
    объявленные переменные var были определены с подчеркиванием "_" перед именем переменной, но это не обязательно и сделано просто для того, чтобы сделать более очевидным в коде, что мы имеем дело с локальной переменной). При этом,
    если вы окажетесь в ситуации, когда вам кажется, что локальная переменная должна быть такой же, как и переменная экземпляра, то вы можете использовать ключевое слово self, чтобы идентифицировать переменную экземпляра как отдельную.
    как отдельную, например:
  var hp = 10; with (obj_Enemy) {
     self.hp -= hp; }
  
  Локальные переменные часто используются в программах, особенно в циклах для подсчета итераций, или когда значение используется несколько раз в одной операции, которая не собирается
    не будет повторяться снова. Вот еще пара примеров:
  var _i = 0; repeat (10) {
     inventory[_i] = 0; _i += 1; }
  
  Приведенный выше код создает локальную переменную под названием "_i" и устанавливает ее в 0, и все это в одной строке. Обратите внимание, что в предыдущих версиях GameMaker нужно было сначала объявлять локальные переменные, а затем присваивать им значения.
    но в этой версии вы можете объявлять и присваивать им значение одновременно. В приведенном выше коде эта переменная используется для инициализации массива. Поскольку переменная "_i"
    не будет использоваться ни для каких других функций в экземпляре, кроме этой, она может быть локальной по области видимости. Приведем еще один пример:
  var _x, _y; _x = x - 32 + irandom(64); _y = y - 32 + irandom(64); instance_create_layer(_x, _y, "Effects", obj_blood);
  Здесь мы использовали локальные переменные "_x" и "_y" для хранения некоторых случайных координат, которые мы затем используем для создания экземпляра. В этом примере вы можете видеть, что использование этих переменных не является строго
    но для удобства чтения и простоты использования мы используем эти переменные. Намного понятнее и очевиднее, что мы делаем, чем если бы мы использовали этот код:
  instance_create_layer(x - 32 + irandom(64), y - 32 + irandom(64), "Effects", obj_guts);
  Следует отметить еще одну вещь о локальных переменных, объявленных var... Поскольку они уникальны для события или функции, которая их запускает, они могут быть использованы в любых других экземплярах кода! Это означает, что мы можем использовать эти переменные для установки
    и изменять что-то в других экземплярах, используя конструкцию "with()" ( более подробную информацию смотрите в разделе об области видимости переменных). Фактический код будет выглядеть примерно так
    примерно так:
  var num = instance_number(obj_Enemy); with (obj_Enemy) {
     if num>10 instance_destroy(); }
  
  Приведенный выше код работает, потому что объявленная переменная var является локальной для события (или функции), в котором она содержится, а не для экземпляра или игрового мира, и поэтому может использоваться в любой функции в любом объекте, если она находится в том же блоке кода.
   
   
   
  
    
      
        Назад: Переменные и область применения переменных
        Следующее: Переменные экземпляра
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

