
  
  делать / пока
  Функция do - это еще один способ многократной итерации одного или несколькихутверждений, и на самом деле это утверждение типа "do...until".
    вы не можете иметь одно без другого, поскольку вы говорите GameMaker Studio 2 делать что-то до тех пор, пока определенное выражение не станет истинным. Оно имеет следующую форму:
  сделать {
     <высказывание>;
     <утверждение>;
     ...
     }
     until (<выражение>);
  Оператор (который может быть блоком кода из нескольких операторов в фигурных скобках {}) выполняется до тех пор, пока выражение не будет признано истинным, а начальный оператор всегда выполняется хотя бы один раз. Ниже вы
    приведен пример типичного способа использования do... until:
  сделать {
     x = random(room_width); y = random(room_height); }
     until (place_free(x, y));
  Приведенный выше код пытается поместить текущий объект в свободную позицию и устанавливает переменные x/y по крайней мере один раз, а затем выполняет столько итераций, сколько необходимо
    пока выражение place_free() не вернет true.
  Когда следует использовать цикл do / until? Его следует использовать в любом случае, когда вы хотите повторить одно или несколько утверждений, но не знаете, сколько раз они должны повториться, и хотите
    убедиться, что утверждения будут выполнены хотя бы один раз до завершения цикла.
  Вы также можете использовать break и continue в циклах do. Использование break позволит
    немедленно выйти из цикла и перейти к любому коду, который находится в событии или функции после того, как цикл должен был завершиться, например:
  var _id = noone; do
     { _id = list[| 0]; if instance_exists(_id) { _break; }  ds_list_delete(list, 0); }  until (ds_list_empty(list)); target = _id;
  В приведенном выше коде мы создаем локальную переменную и устанавливаем ее для хранения ключевого слова noone. Затем мы выполняем цикл do / until, проверяя первую позицию списка DS, чтобы узнать, содержит ли она действительный
    ID экземпляра, и если это так, то мы break цикл, в противном случае значение для позиции списка удаляется. После завершения цикла (либо по команде break, либо потому, что список пуст) значение локальной переменной
    значение локальной переменной присваивается переменной экземпляра target.
  Примером использования continue в цикле do / until может быть:
  сделать {
     var _x = random(room_width); var _y = random(room_height); if (instance_position(_x, y, obj_Enemy) {
     continue;
     }
     instance_create_layer(_x, _y, "Instances", obj_Enemy); }
     until (instance_count(obj_Enemy) >= 10);
  Этот код генерирует случайную позицию комнаты, затем проверяет, существует ли в этой позиции экземпляр объекта obj_Enemy. Если да, то текущая итерация цикла завершается с помощью continue и начинается новая итерация.
    и начинается новая итерация, а если нет, то в случайной позиции создается экземпляр объекта obj_Enemy. Цикл завершится только тогда, когда в комнате будет 10 или более экземпляров объекта.
  И последнее замечание: будьте осторожны с циклами do, так как вы легко можете сделать их вечными, и тогда ваша игра зависнет и больше не будет реагировать на ввод пользователя, и ему придется принудительно закрыть ее.
  Другие примеры ключевых слов цикла см. в разделах повторить, пока, и for.
   
   
   
  
    
      
        Назад: Особенности языка
        Далее: для
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

