
  
  новый
  Оператор new можно использовать для создания структуры с функцией, которая вызывается с заданными аргументами. Затем функция может заполнить структуру переменными из аргументов - подобно тому, как событие create экземпляра устанавливает начальные переменные для экземпляра - и затем оператор new возвращает структуру.
    переменные для экземпляра, а затем оператор new вернет структуру. Перед использованием этого оператора важно отметить, что заданная функция должна быть помечена как функция-конструктор, иначе оператор new не создаст структуру (пример кода ниже показывает это, а более подробную информацию можно найти на странице Структуры).
  ПРИМЕЧАНИЕ: Вы можете проверить структуру, чтобы узнать, какая функция была использована для ее создания, с помощью функции времени выполнения instanceof().
  Этот оператор имеет следующий синтаксис:
  <переменная> = новая <функция> (<аргумент>, <аргумент>, ...);
  Когда вы используете оператор new вместе с функцией, он возвращает ссылку на struct, которая хранится в данной переменной, позволяя вам получить доступ к struct и любым переменным, которые были созданы в ней функцией.
  В следующем примере показана функция, которая была определена для использования в качестве конструктора:
  function init_struct(_a, _b, _c) конструктор {
     a = _a; b = _b; c = _c; }
  
  Затем эту функцию можно использовать вместе с оператором new для создания структуры и заполнения ее переменными, установленными на значения аргументов, используемых в функции, как это сделано ниже:
  mystruct = new init_struct(10, 100, "Hello World");
  Важно отметить, что вызов new на любой функции, которая не была отмечена как конструктор, вызовет исключениево время выполнения.
   
   
  
    
      
        Назад: Особенности языка
        Далее: удалить
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

