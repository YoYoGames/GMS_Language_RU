
  
  Порядок оценки
  При программировании игры с помощью языка GameMaker Language вы должны знать, что аргументы вызова функций не гарантируют порядок оценки. Это означает, что порядок выполнения функций, помещенных в ваш код, будет меняться
    от платформы к платформе, поэтому вам следует кодировать их в явном виде. Это связано с различиями в оптимизации между разными целевыми платформами, например, на платформе Windows аргументы функции могут оцениваться справа налево, но
    на целевой платформе HTML5 они могут оцениваться слева направо. Поэтому во избежание проблем лучше не вызывать несколько функций в аргументах одного вызова функции, так как вы можете заложить зависимость от порядка оценки.
  Чтобы увидеть пример того, что это значит, рассмотрим следующий код, в котором есть функция сценария "buffer_get_info", которая вызывает несколько функций времени выполнения и использует их в качестве аргументов:
  buffer_seek(buff, buffer_seek_start, 0); buffer_get_info(buffer_read(buff, buffer_s8), buffer_read(buff, buffer_s16),buffer_read(buff, buffer_s16));
  Проблема заключается в том, что на некоторых платформах сначала будет вызвана последняя buffer_read(), поэтому все аргументы скрипта будут неверными, так как данные считываются из буфера в "обратном" порядке, как вы бы
    как вы бы это восприняли. Это оказывает влияние на все последующие значения функции buffer_read(), поэтому все аргументы, передаваемые этой функции скрипта, будут неверными!
  Чтобы обойти это, следует явно вызывать функции в нужном порядке и хранить возвращаемые значения в переменных, например, так:
  var val[0] = buffer_read(buff, buffer_s8); var val[1] = buffer_read(buff, buffer_s16); var val[2] = buffer_read(buff, buffer_s16); buffer_get_info(val[0], val[1], val[2]);
  Хотя этот метод может показаться более многословным, он сохраняет ясность и позволяет избежать возможных проблем с порядком оценки.
  Вы также должны быть осторожны при использовании выражений, поскольку порядок их вычисления будет меняться в зависимости от того, для какой цели вы компилируете.
    Поэтому, используя выражения в коде, убедитесь, что вы используете скобки (), чтобы правильно контролировать порядок операций. Это очень важно для обеспечения правильного поведения ваших игр на всех целевых платформах игр
    и очень важно для платформы HTML5. Более подробно это объясняется на странице, посвященной выражениям.
   
   
   
  
    
      
        Назад: ОбзорGML
        Следующий: Выражения и операторы
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

