
  
  Стандартный рабочий процесс
  По мере работы над проектом вы будете создавать спрайты, редактировать скрипты, удалять временные шкалы и все остальное, что потребуется по мере развития проекта. Это все действия, которые вы, возможно, захотите отслеживать и возвращаться к ним, если что-то
    пойдет не так. Это основная причина для использования Source Control - чтобы можно было исправить любые ошибки - и мы быстро проведем вас через основной рабочий процесс с самого начала, чтобы вы поняли, как это работает.
  Начиная с самого начала, создайте новый проект GML, а затем активируйте контроль исходных текстов через основные опции. Это даст нам доступ к меню Source Control в верхней части, поэтому мы сразу же перейдем и
    выберем Create Project Repository. Если вы посмотрите на ресурсы комнаты, то увидите, что комната по умолчанию получила красный восклицательный знак , означающий.
    что она была изменена по сравнению с предыдущим состоянием. Если бы у нас были другие ресурсы в проекте, вы бы увидели, что все они имеют одинаковый значок, как показано на изображении ниже:
  Теперь у нас есть возможность либо зафиксировать пустой проект как есть, либо довести его до базового состояния. На данный момент мы сделаем первую
    поэтому нажмите Source Control > Commit Changes. Теперь у нас откроется новое окно, разделенное на три области:
  
  
    Поэтапные изменения: Здесь представлены изменения, которые будут зафиксированы в исходном тексте. Скорее всего, здесь будет пусто, но может быть показано изменение Main Options, что вполне нормально.
    Unstaged Changes: Здесь показаны файлы, которые изменились, но мы не сообщили Git'у, что хотим зафиксировать их - это "ожидающие" изменения.
    Commit Message: Это примечание, которое мы можем добавить, чтобы объяснить суть изменений.
  
  Пока что нажмите кнопку Stage All, так как мы хотим зафиксировать все изменения, введите что-то вроде "First Commit!" в Commit Message и нажмите Commit. Теперь на всех наших ресурсах должна стоять зеленая галочка, означающая, что изменений не обнаружено.
  Стоит отметить, что при работе в этом окне различные сообщения Staged и Unstaged будут сопровождаться символом. Используемый символ зависит от операции и файла.
    используются:
  
    [...] - Поэтапное изменение (ранее было [A])
    [+] - добавлено недавно
    [->] - Переименовано/перемещено
    [-] - удалено
    [M] - Непостановочные изменения
    [?] - Неотслеживаемый файл
    [!] - Отсутствующий файл
  
  Теперь наш рабочий процесс может начаться, и мы можем приступить к созданию нашего проекта, сохранению и фиксации изменений, как мы это делали в пунктах выше.
  Поработав некоторое время, вы можете захотеть проверить и посмотреть, что вы зафиксировали в тот или иной момент времени, и для этого вам понадобится открыть историю коммитов . Чтобы открыть окно истории, просто перейдите в Source Control > View History, что откроет еще одно окно с тремя панелями:
  Верхняя панель описывает коммиты, средняя панель описывает комментарий, данный выбранному коммиту, а нижняя панель описывает
    файлы, которые были изменены в этом коммите. Обратите внимание, что если вы настроили инструмент Diff Tool, то двойной щелчок на любом файле в этом окне откроет инструмент diff, и вы сможете увидеть изменения
    между файлами.
   
   
   
  
    
      
        Назад: Контроль источников
        Следующее: Восстановление файлов 
      
    
    © Copyright YoYo Games Ltd. 2021 Все права защищены
  
  
  

